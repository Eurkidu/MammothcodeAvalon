{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e14543d5e0e95dcf17cf","webpack:///./src/entry.js","webpack:///./src/underscore.js","webpack:///./src/ass/ui/form/treeSelect/mc.treeSelect.js","webpack:///external \"avalon\"","webpack:///./src/ass/ui/form/treeSelect/mc.treeselect.html","webpack:///./src/ass/ui/form/treeSelect/mc.treeselect.min.css","webpack:///./src/ass/ui/form/treebt/mc.tree.js","webpack:///./src/ass/ui/form/treebt/mc.tree.html","webpack:///./src/ass/ui/form/treebt/mc.tree.min.css","webpack:///./src/ass/ui/form/button/mc.button.js","webpack:///./src/ass/ui/form/button/mc.button.html","webpack:///./src/ass/ui/form/button/mc.button.min.css","webpack:///./src/ass/ui/dialog/mc.dialog.js","webpack:///./src/ass/ui/dialog/mc.dialog.html","webpack:///./src/ass/ui/dialog/mc.dialog.min.css","webpack:///./src/mc.base.js","webpack:///./src/ass/ui/base/js/mmRequest.js","webpack:///./src/ass/ui/base/js/mmPromise.js","webpack:///./src/ass/ui/base/js/mmRouter/mmHistory.js","webpack:///./src/ass/ui/base/js/mmRouter/mmRouter.js","webpack:///./src/ass/ui/base/js/mmRouter/mmState.js","webpack:///./src/ass/ui/base/js/mmRouter ^\\.\\/.*$","webpack:///./src/ass/ui/base/js/mmRouter/mmPromise.js","webpack:///./src/ass/ui/accordion/mc.accordion.js","webpack:///./src/ass/ui/accordion/mc.accordion.html","webpack:///./src/ass/ui/accordion/mc.accordion.min.css","webpack:///./src/ass/ui/sidebar/mc.sidebar.js","webpack:///./src/ass/ui/sidebar/mc.sidebar.html","webpack:///./src/ass/ui/sidebar/mc.sidebar.min.css","webpack:///./src/ass/ui/sidepop/mc.sidepop.js","webpack:///./src/ass/ui/sidepop/mc.sidepop.html","webpack:///./src/ass/ui/sidepop/mc.sidepop.min.css","webpack:///./src/ass/ui/datagrid/mc.datagrid.js","webpack:///./src/ass/ui/datagrid/mc.datagrid.html","webpack:///./src/ass/ui/datagrid/mc.datagrid.min.css","webpack:///./src/ass/ui/form/checkbox/mc.checkbox.js","webpack:///./src/ass/ui/form/checkbox/mc.checkbox.html","webpack:///./src/ass/ui/form/checkbox/mc.checkbox.min.css","webpack:///./src/ass/ui/popmenu/mc.popmenu.js","webpack:///./src/ass/ui/popmenu/mc.popmenu.html","webpack:///./src/ass/ui/popmenu/mc.popmenu.min.css","webpack:///./src/ass/ui/pop/mc.pop.js","webpack:///./src/ass/ui/pop/mc.pop.html","webpack:///./src/ass/ui/pop/mc.pop.min.css","webpack:///./src/ass/ui/form/mc.form.js","webpack:///./src/ass/ui/form/mc.form.html","webpack:///./src/ass/ui/form/mc.form.min.css","webpack:///./src/ass/ui/searchbox/mc.searchbox.js","webpack:///./src/ass/ui/searchbox/mc.searchbox.html","webpack:///./src/ass/ui/searchbox/mc.searchbox.min.css","webpack:///./src/ass/ui/tabs/mc.tabs.js","webpack:///./src/ass/ui/tabs/mc.tabs.html","webpack:///./src/ass/ui/tabs/mc.tabs.min.css","webpack:///./src/ass/ui/form/checkboxGroup/mc.checkboxgroup.js","webpack:///./src/ass/ui/form/checkboxGroup/mc.checkboxgroup.html","webpack:///./src/ass/ui/form/checkboxGroup/mc.checkboxgroup.min.css","webpack:///./src/ass/ui/form/ListdataAdd/mc.ListdataAdd.js","webpack:///./src/ass/ui/form/ListdataAdd/mc.listDataAdd.html","webpack:///./src/ass/ui/form/ListdataAdd/mc.listDataAdd.min.css","webpack:///./src/ass/ui/droplist/mc.droplist.js","webpack:///./src/ass/ui/droplist/mc.droplist.html","webpack:///./src/ass/ui/droplist/mc.droplist.min.css","webpack:///./src/ass/ui/datapager/mc.datapager.js","webpack:///./src/ass/ui/datapager/mc.datapager.html","webpack:///./src/ass/ui/datapager/mc.datapager.min.css","webpack:///./src/ass/ui/form/datepicker/mc.datepicker.js","webpack:///./src/ass/ui/form/datepicker/mc.datepicker.html","webpack:///./src/ass/ui/form/datepicker/mc.datepicker.min.css","webpack:///./src/ass/ui/form/selectbox/mc.selectbox.js","webpack:///./src/ass/ui/form/selectbox/mc.selectbox.html","webpack:///./src/ass/ui/form/selectbox/mc.selectbox.min.css","webpack:///./src/ass/ui/form/switch/mc.switch.js","webpack:///./src/ass/ui/form/switch/mc.switch.html","webpack:///./src/ass/ui/form/switch/mc.switch.min.css","webpack:///./src/ass/ui/form/text/mc.text.js","webpack:///./src/ass/ui/form/text/mc.text.html","webpack:///./src/ass/ui/form/text/mc.text.min.css","webpack:///./src/ass/ui/form/jsonadd/mc.jsonadd.js","webpack:///./src/ass/ui/form/jsonadd/mc.jsonadd.html","webpack:///./src/ass/ui/form/jsonadd/mc.jsonadd.min.css","webpack:///./src/ass/ui/form/upload/mc.upload.js","webpack:///./src/ass/ui/form/upload/mc.upload.html","webpack:///./src/ass/ui/form/upload/mc.upload.min.css","webpack:///./src/ass/ui/form/editor/mc.editor.js","webpack:///./src/ass/ui/form/editor/mc.editor.html","webpack:///./src/ass/ui/form/editor/mc.editor.min.css","webpack:///./src/ass/ui/form/tagadd/mc.tagadd.js","webpack:///./src/ass/ui/form/tagadd/mc.tagadd.html","webpack:///./src/ass/ui/form/tagadd/mc.tagadd.min.css","webpack:///./src/ass/ui/pagemodal/mc.pagemodal.js","webpack:///./src/ass/ui/pagemodal/mc.pagemodal.html","webpack:///./src/ass/ui/pagemodal/mc.pagemodal.min.css","webpack:///./src/ass/ui/bread/mc.bread.js","webpack:///./src/ass/ui/bread/mc.bread.html","webpack:///./src/ass/ui/bread/mc.bread.min.css","webpack:///./src/ass/ui/form/iconselect/mc.iconselect.js","webpack:///./src/ass/ui/form/iconselect/mc.iconselect.html","webpack:///./src/ass/ui/form/iconselect/mc.iconselect.min.css","webpack:///./src/ass/ui/form/listselect/mc.listselect.js","webpack:///./src/ass/ui/form/listselect/mc.listselect.html","webpack:///./src/ass/ui/form/listselect/mc.listselect.min.css","webpack:///./src/ass/ui/form/letterList/mc.letterList.js","webpack:///./src/ass/ui/form/letterList/mc.letterlist.html","webpack:///./src/ass/ui/form/letterList/mc.letterlist.min.css","webpack:///./src/ass/ui/layout/gridlayout/mc.gridlayout.js","webpack:///./src/ass/ui/layout/gridlayout/mc.gridlayout.html","webpack:///./src/ass/ui/layout/gridlayout/mc.gridlayout.min.css","webpack:///./src/ass/ui/layout/linearlayout/mc.linearlayout.js","webpack:///./src/ass/ui/layout/linearlayout/mc.linearlayout.html","webpack:///./src/ass/ui/layout/linearlayout/mc.linearlayout.min.css","webpack:///./src/ass/ui/layout/absolutelayout/mc.absolutelayout.js","webpack:///./src/ass/ui/layout/absolutelayout/mc.absolutelayout.html","webpack:///./src/ass/ui/layout/absolutelayout/mc.absolutelayout.min.css","webpack:///./src/ass/ui/layout/relativelayout/mc.relativelayout.js","webpack:///./src/ass/ui/layout/relativelayout/mc.relativelayout.html","webpack:///./src/ass/ui/layout/relativelayout/mc.relativelayout.min.css","webpack:///./src/ass/ui/form/selectadd/mc.Selectadd.js","webpack:///./src/ass/ui/form/selectadd/mc.selectadd.html","webpack:///./src/ass/ui/form/selectadd/mc.selectadd.min.css"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wB;AACA,EAAC;;;;;;;;ACZD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAAyB,gBAAgB;AACzC;AACA;AACA;AACA,wBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,YAAY;AAClD;AACA;AACA,MAAK;AACL;AACA,wCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAoD;AACpD,IAAG;;AAEH;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6DAA4D,YAAY;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,YAAY;AAC1D;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,+CAA8C,YAAY;AAC1D;AACA;AACA,sBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA6C,YAAY;AACzD;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAqB,cAAc;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,YAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe,YAAY;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO,eAAe;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,sBAAqB,eAAe;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA,0BAAyB,gBAAgB;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,6CAA4C,mBAAmB;AAC/D;AACA;AACA,0CAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sDAAqD;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf,eAAc;AACd,eAAc;AACd,iBAAgB;AAChB,iBAAgB;AAChB,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP,sBAAqB;AACrB;;AAEA;AACA;AACA,MAAK;AACL,kBAAiB;;AAEjB;AACA,mDAAkD,EAAE,iBAAiB;;AAErE;AACA,yBAAwB,8BAA8B;AACtD,4BAA2B;;AAE3B;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mDAAkD,iBAAiB;;AAEnE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;;;;;;;AC3gDD;AACA,mCAAkC;AAClC;AACA;AACA,wBAAuB;AACvB;AACA;AACA,oBAAmB;AACnB,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,EAAE;AAClD,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;;;AAGA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,8BAA6B,iCAAiC;AAC9D,cAAa;AACb,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;ACpMD,gD;;;;;;ACAA,kOAAiO,OAAO,kLAAkL,MAAM,oHAAoH,MAAM,6FAA6F,WAAW,kGAAkG,KAAK,iO;;;;;;ACAzuB,0C;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kB;AACA;AACA;AACA;AACA,kCAAiC,sBAAsB;AACvD,kBAAiB;AACjB,kCAAiC,sBAAsB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB;AACrB;AACA;AACA;AACA,0BAAyB;AACzB;AACA,0CAAyC,sBAAsB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oE;AACA;;;AAGA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,wC;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,sBAAsB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C,sCAAqC,sBAAsB;AAC3D,sBAAqB;AACrB;AACA,sCAAqC,sBAAsB;AAC3D,sCAAqC,sBAAsB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,OAAO;AAClC,wBAAuB;AACvB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,6BAA4B,OAAO;AACnC,yBAAwB;AACxB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,6BAA4B,OAAO;AACnC,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,sBAAqB;;AAErB,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,gCAA+B;AAC/B,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAgB;AAChB,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;;ACnxBD,y3CAAw3C,cAAc,oIAAoI,2BAA2B,wzBAAwzB,cAAc,2Y;;;;;;ACA32E,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AC1ED,+PAA8P,SAAS,8HAA8H,OAAO,sB;;;;;;ACA5Y,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,MAAM,EAAE;AAC/B,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB,OAAO,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,GAAG,EAAE;AAC5B,wBAAuB,QAAQ,EAAE;AACjC,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,IAAI,EAAE;AAC7B,wBAAuB,SAAS,EAAE;AAClC,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,iCAAgC;AAChC;AACA,MAAK;;AAEL;AACA;AACA,EAAC,gJ;;;;;;ACnLD,2jBAA0jB,OAAO,2GAA2G,yKAAyK,cAAc,ke;;;;;;ACAn2B,0C;;;;;;;ACCA;AACA;AACA;AACA;AACA,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB,GAAG;AAChC,UAAS,oBAAoB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,mCAAkC;AAClC;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0EAAyE,EAAE;AAC3E,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,wBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA,4DAA2D;AAC3D;AACA;AACA,6DAA4D;AAC5D;AACA;AACA,6DAA4D;AAC5D;AACA;AACA,6DAA4D;AAC5D;AACA;AACA,8DAA6D;AAC7D;AACA;AACA,8DAA6D;AAC7D;AACA,2CAA0C,IAAI,sBAAsB,EAAE,WAAW,IAAI;AACrF,0DAAyD;AACzD;AACA,kGAAiG,IAAI;AACrG,4DAA2D;AAC3D;AACA,mCAAkC,IAAI,MAAM,IAAI,MAAM,IAAI;AAC1D,0DAAyD;AACzD;AACA,8FAA6F,EAAE;AAC/F,0DAAyD;AACzD;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA,yBAAwB,EAAE;AAC1B,+BAA8B,EAAE;AAChC,0BAAyB,EAAE;AAC3B,4BAA2B;AAC3B,EAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ,aAAY;AACZ,eAAc;AACd;AACA;AACA,uDAAsD,8BAA8B;AACpF;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA,aAAY;AACZ,aAAY;AACZ,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA,sBAAqB;;AAErB,uBAAsB;AACtB;AACA,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,EAAC;;;AAGD;AACA;AACA,gBAAe,sIAAsI;AACrJ;AACA,EAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA,MAAK,YAAY;AACjB;AACA;;AAEA;AACA;AACA,8CAA6C,YAAY;AACzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAiD,YAAY;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,8CAA6C,YAAY;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0DAAyD;AACzD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,EAAC,0CAA0C;;;;;;;ACziB3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;;;;AAKA;AACA;AACA;AACA,2DAA0D;AAC1D;AACA;AACA,cAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAwD;AACxD;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;;AAEA,qDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,oBAAmB,OAAO;AAC1B,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kFAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,gCAA+B,oBAAoB;AACnD;AACA;AACA;AACA,UAAS;AACT;AACA,gCAA+B,oBAAoB;AACnD;AACA;AACA;AACA,UAAS;;;AAGT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA0F;AAC1F,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;;AAEL,8BAA6B;AAC7B;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,iBAAiB;AAC5C;AACA,oCAAmC;AACnC;AACA,cAAa;AACb;AACA;AACA,iDAAgD;AAChD;AACA;AACA;AACA,sBAAqB;AACrB;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAiB;AACjB,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA,uFAAsF;AACtF;AACA;AACA,0BAAyB;AACzB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAiC;AACjC;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,8DAA6D;AAC7D;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAsE,aAAa,YAAY;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,eAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;iECzhCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B;AAC9B;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,uCAAsC,qCAAqC;AAC3E;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA,iDAAgD,OAAO;AACvD;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;;AAEA,EAAC;AACD;AACA;;;;;;;iEC5NA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE;AAChE,yCAAwC;AACxC,oCAAmC;AACnC;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,iDAAgD,kBAAkB;AAClE;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,cAAc;AAC1E,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,0GAAyG,WAAW;AACpH;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,EAAC;;AAED,qE;;;;;;iEC9SA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA,mBAAkB,SAAS;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sCAAqC,kBAAkB,WAAW,OAAO,YAAY,OAAO;AAC5F;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,gCAA+B,kBAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,8CAA6C,QAAQ;AACrD;AACA;AACA,wDAAuD;AACvD;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kDAAiD,IAAI;AACrD,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oHAAmH,YAAY,aAAa;AAC5I;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,cAAc;AACvE,kBAAiB;AACjB,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA,+CAA8C,EAAE;AAChD;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,mBAAkB,GAAG;AACrB,mBAAkB,SAAS;AAC3B,mBAAkB,eAAe,KAAK,wBAAwB,IAAI;AAClE,oBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA,qCAAoC,MAAM;AAC1C,qCAAoC,YAAY,GAAG;AACnD,qCAAoC,UAAU;AAC9C,sDAAqD,iBAAiB,EAAE;AACxE,qCAAoC,SAAS;AAC7C;AACA;AACA,iCAAgC,EAAE;AAClC;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,yDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;;;AAIA;AACA,0CAAyC;AACzC;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,6EAA4E;AAC5E;AACA;AACA,yFAAwF,MAAM;AAC9F;AACA;;AAEA;;AAEA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF,8CAA6C;AAC7C;AACA;AACA,GAAE;AACF;AACA;AACA,GAAE;AACF;AACA;AACA;AACA,GAAE;AACF;AACA,GAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,UAAU;AACpC,4BAA2B,UAAU;;AAErC;AACA;AACA;;AAEA;AACA;;AAEA,I;;;;;;AChWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,kBAAkB,IAAI;AACjD;AACA,gDAA+C;AAC/C,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,yCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,yCAAwC,cAAc;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB;AACzB;AACA;AACA,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,iEAAgE,GAAG;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8CAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,aAAa;AACzD,sBAAqB;AACrB;AACA,6CAA4C,aAAa;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS,GAAG,kBAAkB;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB,uBAAsB;AACtB,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,2BAA0B,SAAS;AACnC,2BAA0B,SAAS;AACnC,2BAA0B,SAAS;AACnC,2BAA0B,SAAS;AACnC,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB;AACA;AACA;AACA,gBAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA,sCAAqC;AACrC;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB;AACzB,sBAAqB;AACrB,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,8BAA6B;AAC7B;AACA;AACA,8BAA6B;AAC7B;AACA,0BAAyB;AACzB;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;;AAEA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,OAAO;AACvB,iBAAgB,SAAS;AACzB,iBAAgB,SAAS;AACzB,iBAAgB,SAAS;AACzB,iBAAgB,SAAS;AACzB,iBAAgB,SAAS;AACzB,iBAAgB,SAAS;AACzB,iBAAgB,KAAK;AACrB,iBAAgB,KAAK;AACrB,iBAAgB,SAAS;AACzB;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,qFAAoF;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD;AACjD;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAiE;AACjE;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA,oDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,2BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,6CAA4C;AAC5C;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,0BAAyB;AACzB;AACA;AACA;AACA,sBAAqB;AACrB,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,OAAO;AACtB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB,gBAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS,OAAO;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,EAAC;;;;;;;ACnmCD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,uDAAuD;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;iECrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA8B;AAC9B;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb,uCAAsC,qCAAqC;AAC3E;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA,iDAAgD,OAAO;AACvD;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,oCAAmC;AACnC;AACA;AACA;AACA;;AAEA,EAAC;AACD;AACA;;;;;;;iEC5NA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,0BAA0B;AACzD;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA,iEAAgE;AAChE,6DAA4D;AAC5D;AACA,kBAAiB;AACjB;AACA,2DAA0D;AAC1D,oCAAmC;AACnC;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA,iEAAgE;AAChE,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,iCAAiC;AAC9D;AACA,4CAA2C,iCAAiC;AAC5E;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,4DAA2D;AAC3D,yDAAwD;AACxD,iCAAgC;AAChC;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,gJ;;;;;;AC/GD,4VAA2V,UAAU,6EAA6E,UAAU,yGAAyG,4BAA4B,mD;;;;;;ACAjkB,0C;;;;;;iECAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA,iEAAgE;AAChE,6DAA4D;AAC5D;AACA,kBAAiB;AACjB;AACA,2DAA0D;AAC1D,oCAAmC;AACnC;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA,iEAAgE;AAChE,6DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA,6EAA4E;AAC5E,mEAAkE;AAClE,kBAAiB;AACjB,cAAa;;AAEb,UAAS;AACT;AACA;AACA;AACA,4DAA2D;AAC3D,yDAAwD;AACxD,iCAAgC;AAChC;AACA;AACA,8CAA6C;AAC7C;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,gJ;;;;;;;ACvJD,kaAAia,SAAS,6WAA6W,SAAS,6pBAA6pB,SAAS,yH;;;;;;ACAt8C,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB,0BAAyB;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,GAAG,EAAE;AAC5B,wBAAuB,KAAK,EAAE;AAC9B,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,mCAAkC;AAClC,kBAAiB;AACjB,iDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,mCAAkC;AAClC;AACA;AACA;;;AAGA;AACA;AACA;AACA,6CAA4C;AAC5C,8BAA6B,qCAAqC;AAClE,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,MAAK;;AAEL;AACA;;AAEA,EAAC,gJ;;;;;;AC5ID,6iBAA4iB,cAAc,uNAAuN,YAAY,6JAA6J,cAAc,+C;;;;;;ACAx8B,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA,yBAAwB;AACxB;AACA,UAAS;AACT,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,+BAA+B;AAChE;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA4C;AAC5C,kBAAiB;AACjB,6CAA4C;AAC5C;AACA,cAAa;AACb,yCAAwC;AACxC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,cAAa;AACb;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA,0BAAyB;AACzB,sBAAqB;AACrB;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,0BAAyB;AACzB,sBAAqB;AACrB;AACA;AACA,cAAa;AACb;AACA;AACA,uCAAsC;AACtC;AACA,kBAAiB,OAAO;AACxB,8EAA6E;AAC7E;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;;AAEf;AACA;AACA,8BAA6B;AAC7B,wBAAuB,GAAG,EAAE;AAC5B,wBAAuB,MAAM,EAAE;AAC/B;AACA;AACA;AACA;AACA,oFAAmF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,GAAG,EAAE;AAC5B,wBAAuB,IAAI,EAAE;AAC7B,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,GAAG,EAAE;AAC5B,wBAAuB,KAAK,EAAE;AAC9B,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB,OAAO,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,MAAM,EAAE;AAC/B,wBAAuB,MAAM,EAAE;AAC/B,0BAAyB,OAAO,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,MAAM,EAAE;AAC/B,wBAAuB,MAAM,EAAE;AAC/B,0BAAyB,OAAO,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB,OAAO,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,2BAA2B;AAC9D;AACA;AACA,2EAA0E,wBAAwB;AAClG;AACA,0BAAyB;AACzB;AACA;AACA;AACA,8EAA6E;AAC7E;AACA,gEAA+D;AAC/D,8CAA6C;AAC7C;AACA,0EAAyE;AACzE,oCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,IAAI,EAAE;AAC7B,0BAAyB,QAAQ,EAAE;AACnC;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,MAAM,EAAE;AAC/B,0BAAyB,OAAO,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,MAAM,EAAE;AAC/B,wBAAuB,MAAM,EAAE;AAC/B,0BAAyB,gBAAgB,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,OAAO,EAAE;AAChC,wBAAuB,aAAa,EAAE;AACtC,wBAAuB,IAAI,EAAE;AAC7B,2B;AACA;AACA;AACA,oCAAmC;AACnC;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,IAAI,EAAE;AAC7B,wBAAuB,IAAI,EAAE;AAC7B,wBAAuB,IAAI,EAAE;AAC7B,2B;AACA;AACA;AACA,kCAAiC,oBAAoB;AACrD;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,wCAAuC,gBAAgB;AACvD;AACA;AACA,oBAAmB;AACnB;AACA;AACA,8BAA6B;AAC7B,wBAAuB,IAAI,EAAE;AAC7B,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA,8BAA6B;AAC7B,wBAAuB,IAAI,EAAE;AAC7B,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC,kBAAiB;AACjB,0CAAyC;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,mBAAmB;AACpE;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,kDAAiD,mBAAmB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,eAAe;AAC/D;AACA,kBAAiB;AACjB;AACA;AACA,8BAA6B;AAC7B,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,MAAM,EAAE;AAC/B,wBAAuB,MAAM,EAAE;AAC/B,0BAAyB,GAAG,EAAE,U;AAC9B;AACA;AACA;AACA,sCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,kBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA,gCAA+B,wBAAwB;AACvD;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B,wBAAuB,MAAM,EAAE;AAC/B,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,QAAQ,EAAE;AACjC,wBAAuB,OAAO,EAAE;AAChC,0BAAyB,GAAG,EAAE,U;AAC9B;AACA;AACA,mDAAkD;AAClD;AACA,8BAA6B;AAC7B;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB,OAAO;AACxB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,QAAQ,EAAE;AACjC,wBAAuB,MAAM,EAAE;AAC/B,0BAAyB,GAAG,EAAE,U;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,8BAA6B,Q;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA;AACA,wBAAuB;AACvB;AACA,cAAa;AACb;AACA,8BAA6B;AAC7B;AACA;AACA,8BAA6B,iCAAiC;AAC9D,cAAa;AACb;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA,kCAAiC,iCAAiC;AAClE,kBAAiB;AACjB,cAAa;AACb;AACA;AACA,gCAA+B,iCAAiC;AAChE;AACA,8CAA6C,iCAAiC;AAC9E;AACA,gBAAe;AACf;;AAEA,UAAS;AACT;AACA;AACA;AACA,iCAAgC;AAChC;AACA,8CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;;AAEA,EAAC,gJ;;;;;;AC5yBD,mEAAkE,MAAM,+FAA+F,qBAAqB,+HAA+H,QAAQ,iKAAiK,YAAY,0QAA0Q,eAAe,mlBAAmlB,QAAQ,wJAAwJ,qCAAqC,0JAA0J,6CAA6C,wJAAwJ,oEAAoE,wKAAwK,kCAAkC,KAAK,qCAAqC,oyCAAoyC,0CAA0C,yaAAya,iCAAiC,knBAAknB,oBAAoB,6B;;;;;;ACAtlJ,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AC5GD,wTAAuT,OAAO,sB;;;;;;ACA9T,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA6B;AAC7B,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,GAAG,EAAE;AAC5B,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,IAAI,EAAE;AAC7B,wBAAuB,SAAS,EAAE;AAClC,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,gJ;;;;;;ACxID,uiBAAsiB,cAAc,qG;;;;;;ACApjB,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB,2BAA0B,0BAA0B;AACpD;AACA;AACA;AACA;AACA,2BAA0B,8BAA8B;AACxD,kBAAiB;AACjB,2BAA0B,2CAA2C;AACrE;AACA;AACA;AACA;AACA,2BAA0B,4BAA4B;AACtD,kBAAiB;AACjB,2BAA0B,yCAAyC;AACnE;AACA;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,0BAAyB,YAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,uCAAsC;AACtC;AACA,sBAAqB;AACrB,uCAAsC;AACtC;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AC1ID,sD;;;;;;ACAA,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA,iBAAgB;AAChB,iBAAgB;AAChB,mB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,UAAS;AACT;;AAEA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,oCAAmC;AACnC;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C,0BAAyB;AACzB;AACA;AACA,0BAAyB;AACzB;AACA;AACA,2CAA0C;AAC1C;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA,sBAAqB;AACrB,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,8BAA6B;AAC7B;AACA;AACA;AACA,kCAAiC;AACjC;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC,8BAA6B;AAC7B;AACA;AACA;AACA,kCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC;AACjC;AACA,0BAAyB;AACzB,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B;AAC9B;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AClcD,8OAA6O,OAAO,uKAAuK,cAAc,sdAAsd,SAAS,qRAAqR,OAAO,MAAM,OAAO,uQAAuQ,OAAO,MAAM,OAAO,oXAAoX,WAAW,4GAA4G,YAAY,sD;;;;;;ACAn8D,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA,6BAA4B;AAC5B;;AAEA;AACA;AACA,0BAAyB;AACzB,oBAAmB,GAAG,EAAE;AACxB,oBAAmB,KAAK,EAAE;AAC1B;AACA;AACA;AACA,0BAAyB;AACzB,oBAAmB,GAAG,EAAE;AACxB,oBAAmB,KAAK,EAAE;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA,wBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA6B;AAC7B,2B;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,8BAA6B;AAC7B,2B;AACA;AACA;AACA,sDAAqD;AACrD,6CAA4C;AAC5C,+BAA8B;AAC9B;AACA;AACA,8BAA6B;AAC7B,0BAAyB,OAAO,EAAE,Y;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,QAAQ,EAAE,OAAO,EAAE;AAC1C,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AC1KD,wkB;;;;;;ACAA,0C;;;;;;iECAA;AACA;AACA,sEAAqE;AACrE;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAA+B,6BAA6B;AAC5D;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AC7GD,oEAAmE,UAAU,gQAAgQ,UAAU,kMAAkM,4BAA4B,yB;;;;;;ACArjB,0C;;;;;;iECAA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC;AACxC,sBAAqB;AACrB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;;AAGA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;;AClOD,2KAA0K,OAAO,+hBAA+hB,eAAe,8HAA8H,WAAW,kGAAkG,KAAK,iB;;;;;;ACA/8B,0C;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA,kBAAiB,oBAAoB;AACrC;AACA;AACA,sBAAqB,oBAAoB;AACzC,uBAAsB,4BAA4B;AAClD;AACA;AACA,oBAAmB;AACnB,qBAAoB;AACpB,aAAY,sBAAsB;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB;AACvB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,mCAAkC;AAClC,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;;AC5TD,6JAA4J,aAAa,iSAAiS,MAAM,uBAAuB,aAAa,qPAAqP,gBAAgB,6bAA6b,iBAAiB,glBAAglB,cAAc,mSAAmS,MAAM,uBAAuB,aAAa,qPAAqP,gBAAgB,+bAA+b,kBAAkB,sHAAsH,kBAAkB,OAAO,kBAAkB,qN;;;;;;ACAz+F,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AC5ED,oGAAmG,SAAS,wGAAwG,OAAO,sHAAsH,UAAU,gK;;;;;;ACA3V,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,UAAS;;AAET,0BAAyB;AACzB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,UAAS;;AAET;;AAEA;AACA;AACA;AACA,qBAAoB;AACpB;AACA,UAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,mDAAmD;AAC1G;AACA;AACA;AACA;AACA;AACA,iEAAgE;AAChE,2CAA0C;AAC1C;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qCAAoC;AACpC,gBAAe;AACf;AACA;AACA;AACA,gCAA+B,iCAAiC;AAChE,gBAAe;AACf,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AChTD,qTAAoT,gBAAgB,GAAG,cAAc,gBAAgB,UAAU,ivBAAivB,cAAc,6B;;;;;;ACA9mC,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;ACpHD,2MAA0M,OAAO,2NAA2N,OAAO,iTAAiT,KAAK,+C;;;;;;ACAzuB,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,oBAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AC5KD,2PAA0P,OAAO,0SAA0S,mCAAmC,2MAA2M,SAAS,mGAAmG,mCAAmC,iB;;;;;;ACAx6B,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAkC;AAClC,mCAAkC,aAAa;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;ACrHD,uMAAsM,OAAO,qP;;;;;;ACA7M,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA,4CAA2C;AAC3C,sBAAqB;AACrB,4CAA2C;AAC3C,sBAAqB;AACrB;AACA,gDAA+C;AAC/C,0BAAyB;AACzB,gDAA+C;AAC/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;;AAEA;AACA,8BAA6B,iCAAiC;AAC9D,cAAa;AACb,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AC1JD,gQAA+P,OAAO,o5BAAo5B,OAAO,6FAA6F,WAAW,kGAAkG,KAAK,iB;;;;;;ACAh3C,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,oD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;AACA;AACA,8CAA6C;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,kB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;AAEA;AACA,2CAA0C,mDAAmD;AAC7F;AACA;AACA;AACA;;AAEA,2B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA,8BAA6B,iCAAiC;AAC9D,cAAa;AACb,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AC5KD,mQAAkQ,OAAO,mNAAmN,MAAM,kPAAkP,uBAAuB,+KAA+K,eAAe,kDAAkD,eAAe,gZAAgZ,WAAW,kGAAkG,KAAK,iB;;;;;;ACA5+C,0C;;;;;;iECAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB,2BAA0B;AAC1B;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,mBAAkB;AAClB,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA,0BAAyB;AACzB;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB,wBAAwB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA8B;AAC9B,cAAa;AACb;AACA,+BAA8B;AAC9B,cAAa;AACb,UAAS;AACT;AACA,oEAAmE;AACnE;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;ACxVD,uSAAsS,OAAO,wKAAwK,KAAK,mnBAAmnB,+EAA+E,21BAA21B,kOAAkO,SAAS,mD;;;;;;ACAluE,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,4BAA2B;AAC3B;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AC7HD,8OAA6O,OAAO,6LAA6L,KAAK,4J;;;;;;ACAtb,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,8BAA6B;AAC7B,kCAAiC;AACjC,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C;AAC9C;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;ACjKD,uSAAsS,OAAO,8cAA8c,KAAK,+QAA+Q,mFAAmF,MAAM,gCAAgC,kBAAkB,+FAA+F,YAAY,2E;;;;;;ACArwC,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,qBAAoB;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,0BAAyB;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,MAAM,EAAE;AAC/B,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB,OAAO,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,GAAG,EAAE;AAC5B,wBAAuB,QAAQ,EAAE;AACjC,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA,8BAA6B;AAC7B,wBAAuB,IAAI,EAAE;AAC7B,wBAAuB,SAAS,EAAE;AAClC,0BAAyB,GAAG,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C;AAC5C,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,gJ;;;;;;AC7JD,yWAAwW,OAAO,6HAA6H,cAAc,+B;;;;;;ACA1f,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA,0BAAyB;;AAEzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;;AAEA;;AAEA;AACA;AACA;AACA,yBAAwB;AACxB,yBAAwB;AACxB,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,gJ;;;;;;ACnED,gQAA+P,SAAS,yJAAyJ,SAAS,+B;;;;;;ACA1a,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;AC9GD,2MAA0M,OAAO,kKAAkK,eAAe,wVAAwV,kBAAkB,qD;;;;;;ACA5uB,0C;;;;;;ACAA;AACA;AACA,mCAAkC;AAClC;AACA;AACA,wBAAuB;AACvB;AACA;AACA,sBAAqB;AACrB;AACA;;AAEA,UAAS;AACT;;AAEA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0B;AACA;AACA,yD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA4C;AAC5C;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA,4CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mD;AACA;AACA;AACA;;AAEA;AACA;AACA,+B;AACA;AACA;;;AAGA;AACA,8BAA6B,iCAAiC;AAC9D,cAAa;AACb,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;ACzMD,4OAA2O,OAAO,kLAAkL,MAAM,oHAAoH,MAAM,6FAA6F,WAAW,kGAAkG,KAAK,qcAAqc,0BAA0B,yF;;;;;;ACAltC,0C;;;;;;;ACCA;AACA;AACA;AACA;AACA,+B;AACA,sB;;AAEA,MAAK;;AAEL;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;AACA;AACA;AACA;AACA,yC;AACA;AACA;AACA,uBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA,yC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;;AC1JD,+JAA8J,qBAAqB,gTAAgT,MAAM,uBAAuB,aAAa,qVAAqV,gBAAgB,kG;;;;;;ACAl3B,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA,uBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA6E;AAC7E,oCAAmC,YAAY;AAC/C,wCAAuC,YAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,gJ;;;;;;AC7DD,iPAAgP,QAAQ,6NAA6N,QAAQ,6BAA6B,0CAA0C,iG;;;;;;ACApiB,0C;;;;;;iECAA;AACA;AACA;AACA,wBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAA+F,gCAAgC,kCAAkC;AACjK;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,gBAAe;AACf,UAAS;AACT;AACA;AACA;AACA;AACA,mCAAkC;AAClC;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;;AAElB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD,uEAAsE;AACtE,0EAAyE;AACzE,6EAA4E;AAC5E,gFAA+E;AAC/E,6EAA4E;AAC5E,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,oCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,sBAAqB;AACrB;AACA,0CAAyC,oBAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,sBAAqB;AACrB;AACA,oCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,sBAAqB;AACrB;AACA,0CAAyC,oBAAoB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,gJ;;;;;;AClMD,oFAAmF,gBAAgB,sKAAsK,SAAS,ypBAAypB,MAAM,uDAAuD,yCAAyC,6UAA6U,MAAM,mDAAmD,yCAAyC,uMAAuM,SAAS,8iBAA8iB,MAAM,itBAAitB,MAAM,ykB;;;;;;ACA35F,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD;AACtD,uEAAsE;AACtE,0EAAyE;AACzE,6EAA4E;AAC5E,gFAA+E;AAC/E,6EAA4E;AAC5E,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,gJ;;;;;;ACrED,yEAAwE,SAAS,kkBAAkkB,sBAAsB,e;;;;;;ACAzqB,0C;;;;;;iECAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,gJ;;;;;;ACvDD,yEAAwE,SAAS,iUAAiU,sBAAsB,e;;;;;;ACAxa,0C;;;;;;0GCAA;AACA,mCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B;AAC5B,8BAA6B;AAC7B,kCAAiC;AACjC,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA,8CAA6C;AAC7C,gDAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA,yBAAwB,eAAe,iB;AACvC,2B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA,+BAA8B,WAAW;AACzC;AACA;AACA;AACA,uCAAsC,WAAW,GAAG,uEAAuE;AAC3H;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,iCAAgC;AAChC;AACA;AACA,MAAK;;AAEL;AACA;AACA,EAAC,+I;;;;;;;AC/LD,gTAA+S,OAAO,ybAAyb,mFAAmF,YAAY,sCAAsC,oBAAoB,qGAAqG,YAAY,2E;;;;;;ACAz/B,0C","file":"build.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"avalon\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"mcLib\", [\"avalon\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mcLib\"] = factory(require(\"avalon\"));\n\telse\n\t\troot[\"mcLib\"] = factory(root[\"avalon\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/content/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap e14543d5e0e95dcf17cf\n **/"," \r\n  \r\ndefine('mcLib', [\"avalon\", 'underscore', \"mcBase\", \"mmRequest\", \"mmPromise\", \"mmHistory\",\r\n    \"mmRouter\", \"mmState\", \"mcAccordion\", \"mcSidebar\", \"mcSidepop\", \"mcDatagrid\",\r\n    \"mcPopmenu\", \"mcPop\", \"mcDialog\", \"mcForm\", \"mcSearchbox\", \"mcTabs\", \"mcCheckbox\",\r\n    \"mcCheckboxGroup\", \"mcListdataAdd\", \"mcTreeBt\", \"mcTreeSelect\", \"mcButton\", \"mcDroplist\",\r\n    \"mcDatapager\", \"mcDatepicker\", \"mcSelectbox\", \"mcSwitch\", \"mcText\", \"mcJsonadd\", \"mcUpload\",\r\n    \"mcEditor\", \"mcTagadd\", \"mcPagemodal\", \"mcBread\", \"mcIconselect\",\r\n    \"mcListSelect\", \"mcLetterList\",\r\n    \"mcGrid\", \"mcLinear\", \"mcAbsolute\", \"mcRelative\", \"mcSelectadd\"], function () {\r\navalon.log(_);\r\n avalon.log('组件库加载完毕');  \r\n});\r\n \n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/entry.js\n ** module id = 1\n ** module chunks = 0\n **/","//     Underscore.js 1.8.3\n//     http://underscorejs.org\n//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind,\n    nativeCreate       = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.8.3';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value)) return _.matcher(value);\n    return _.property(value);\n  };\n  _.iteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, undefinedOnly) {\n    return function(obj) {\n      var length = arguments.length;\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var property = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = property('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  function createReduce(dir) {\n    // Optimized iterator function as using arguments.length\n    // in the main function will deoptimize the, see #1991.\n    function iterator(obj, iteratee, memo, keys, index, length) {\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    }\n\n    return function(obj, iteratee, memo, context) {\n      iteratee = optimizeCb(iteratee, context, 4);\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      // Determine the initial value if none is provided.\n      if (arguments.length < 3) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      return iterator(obj, iteratee, memo, keys, index, length);\n    };\n  }\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var key;\n    if (isArrayLike(obj)) {\n      key = _.findIndex(obj, predicate, context);\n    } else {\n      key = _.findKey(obj, predicate, context);\n    }\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      var func = isFunc ? method : value[method];\n      return func == null ? func : func.apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = isArrayLike(obj) ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, startIndex) {\n    var output = [], idx = 0;\n    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        //flatten current level of array or arguments object\n        if (!shallow) value = flatten(value, shallow, strict);\n        var j = 0, len = value.length;\n        output.length += len;\n        while (j < len) {\n          output[idx++] = value[j++];\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(arguments, true, true, 1);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions\n  function createPredicateIndexFinder(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  }\n\n  // Returns the first index on an array-like that passes a predicate test\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions\n  function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n            i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  }\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var args = slice.call(arguments, 2);\n    var bound = function() {\n      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last >= 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object\n  // In contrast to _.map it returns an object\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys =  _.keys(obj),\n          length = keys.length,\n          results = {},\n          currentKey;\n      for (var index = 0; index < length; index++) {\n        currentKey = keys[index];\n        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n      }\n      return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s)\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(object, oiteratee, context) {\n    var result = {}, obj = object, iteratee, keys;\n    if (obj == null) return result;\n    if (_.isFunction(oiteratee)) {\n      keys = _.allKeys(obj);\n      iteratee = optimizeCb(oiteratee, context);\n    } else {\n      keys = flatten(arguments, false, false, 1);\n      iteratee = function(value, key, obj) { return key in obj; };\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(flatten(arguments, false, false, 1), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), and in Safari 8 (#1929).\n  if (typeof /./ != 'function' && typeof Int8Array != 'object') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = property;\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    return obj == null ? function(){} : function(key) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property, fallback) {\n    var value = object == null ? void 0 : object[property];\n    if (value === void 0) {\n      value = fallback;\n    }\n    return _.isFunction(value) ? value.call(object) : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return '' + this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/underscore.js\n ** module id = 2\n ** module chunks = 0\n **/"," define([\"avalon\", \"text!./mc.treeselect.html\", \"./mc.treeselect.min.css\", 'mcTreeBt', 'mcDialog'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:treeselect\", {\r\n        //buildIn相关\r\n        $dialog_opt: {},\r\n        getDialogVM: _interface,\r\n        getTreeVM: _interface,\r\n        $treeVM: {},\r\n        $dialogVM: {},\r\n        $tree_opt: {\r\n            bt: false,\r\n            dynamic: true,\r\n            hasCheckbox: false,\r\n            clickEveryWhere: true,\r\n            //disableImp: true,\r\n            ajaxConfig: {\r\n                url: '/SystemManage/GetModuleList',\r\n                key: 'MFId'\r\n            },\r\n            idName: 'MId',\r\n            textName: 'MName',\r\n            pidName: 'MFId',\r\n            // isLeafName: 'IsLeaf',\r\n            virtualId: '0',\r\n            virtualClick: false,\r\n            //最后会出来这个 要过滤掉MID 为0什么的\r\n            data: [],\r\n            //请求\r\n            onEveryClick: function (item, _vm) { },\r\n        },\r\n        //外部参数\r\n        label: \"\", //提示文字\r\n        trace: false, //getValue是否返回路径\r\n        labelSize: 0,\r\n        value: \"\", //输入框内值  \r\n        text: \"\", //输入框内文字 \r\n        $ajaxConfig: {},  //url idName,textName\r\n        //silence:true,\r\n        //name: \"\", //输入框name\r\n        valid: \"\", //验证类型\r\n        width: 200, //宽度,默认200px\r\n        must: false, //是否必填,也可为数字 代表必须的长度(会将覆盖length)\r\n        tip: \"\", //填写提示信息\r\n        isHide: false, //是否隐藏,不可见\r\n        readonly: false, //是否只读，只读就div显示，否则input显示\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onClicked: null, //当输入框点击时触发事件\r\n        onChanged: null, //当输入框内值发生改变时触发事件\r\n\r\n        //外部接口\r\n\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        formName: \"\", //表单data的key,输入框name\r\n        submitName: \"\", //提交表单的name\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        isValid: true, //是否正在验证\r\n        validInfo: \"\", //错误信息\r\n        lindex: -1, //布局中的序号\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\n\n        //内部事件\n        doClick: _interface,\n        validValue: _interface,\n\n        //内部接口\n        _trigger: _interface, //内部触发器\r\n\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            if (typeof vmOpts.$tree_opt.data === 'function') vmOpts.$tree_opt.data = vmOpts.$tree_opt.data();\r\n            //树配置要融合\r\n            if (vmOpts.$tree_opt) {\r\n                vmOpts.$tree_opt = $.extend(true, hooks.$tree_opt, vmOpts.$tree_opt)\r\n            }\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options;\r\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\r\n            //buildin 相关\r\n            vm.$dialog_opt = {\r\n                size: 'large',\r\n                buttons: [\r\n                    {\r\n                        label: \"保存\",\r\n                        type: \"success\",\r\n                        callback: function (ev, _vm) {\r\n                            //get tree val ,set到自身vm的value \r\n                            var item = vm.$treeVM.getSelect();\r\n                            if (item) {\r\n                                if (vm.trace) {\r\n                                    vm.value = item.trace.join(\",\");\r\n                                } else {\r\n                                    vm.value = item.val;\r\n                                }\r\n                                vm.text = item.text;\r\n                            }\r\n                            return true;\r\n                        }\r\n                    },\r\n                    {\r\n                        label: \"取消\",\r\n                        callback: function () {\r\n                            return true;\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n\r\n            vm.getDialogVM = function (_vm, elem) {\r\n                vm.$dialogVM = _vm\r\n            }\r\n            vm.getTreeVM = function (_vm, elem) {\r\n                vm.$treeVM = _vm\r\n                //静默加载第一次   \r\n                //if (vm.$treeVM.data.length===0) {\r\n                //vm.$treeVM.setData(null).showItem(null,1, {\r\n                //    force: true,\r\n                //    silence: vm.silence\r\n                //});\r\n                // }\r\n\r\n\r\n            }\r\n            //内部事件 \r\n            vm.doClick = function (ev) {\r\n                vm.$dialogVM.showDialog();\r\n                //vm.$dialogVM.hideDialog({}, true);\r\n                vm._trigger(ev, \"clicked\");\r\n            }\n            vm.validValue = function (ev) {\r\n                vm.value = vm.value + \"\"; //保证value为字符串\r\n                vm.validInfo = McAvalon.validata(vm.value, vm.valid);\n                vm.isValid = vm.validInfo === \"\" ? true : false;\n                if (vm.isValid) {\r\n                    if (vm.must === true && vm.value.trim() === \"\") {\r\n                        vm.isValid = false; vm.validInfo = \"该字段为必填字段\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            //内部接口\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"clicked\":\n                        if (typeof vm.onclicked == \"function\") {\r\n                            vm.onClicked(ev, vm);\r\n                        }\n                        break;\n                    case \"changed\":\n                        if (typeof vm.onchanged == \"function\") {\r\n                            vm.onChanged(ev, vm);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n\n            //外部接口 \n            vm.getValue = function () {\r\n                //可能需要\r\n                //if (vm.value === vm.$tree_opt.virtualId) return ''\r\n                return vm.value;\r\n            }\n            vm.setValue = function (val, isReadonly) {\r\n                //isReadonly 传值的时候才赋值判断\r\n                isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                vm.text = val;\r\n            }\r\n\r\n\r\n            vm.$watch(\"value\", function (newVal, oldVal) {\r\n                vm._trigger({ newVal: newVal, oldVal: oldVal }, \"changed\");\r\n            });\r\n        },\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:treeselect\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/treeSelect/mc.treeSelect.js\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"avalon\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-treeselect-cotar hf\\\" ms-class=\\\"mc-error: !isValid\\\" ms-visible=\\\"!isHide\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <div class=\\\"form-control mc-ipt fp\\\" ms-if=\\\"!readonly\\\"\\r\\n         ms-attr-name=\\\"formName\\\" ms-css-width=\\\"width\\\"\\r\\n         ms-click=\\\"doClick($event)\\\">{{text}}</div>\\r\\n    <div class=\\\"mc-text-show ftp\\\" ms-if=\\\"readonly\\\" ms-attr-name=\\\"formName\\\" ms-css-width=\\\"width\\\">{{text}}</div>\\r\\n    <span class=\\\"mc-text-valid-info ftp\\\" ms-if=\\\"!isValid && validInfo != ''\\\">{{validInfo}}</span>\\r\\n    <div class=\\\"mc-text-field-tip\\\" ms-css-padding-left=\\\"labelSize\\\" ms-if=\\\"tip\\\">{{tip}}</div>\\r\\n\\r\\n\\r\\n    <mc:dialog config=\\\"$dialog_opt\\\" title=\\\"\\\" on-init=\\\"getDialogVM\\\">\\r\\n        <mc:treebt slot=\\\"content\\\" config=\\\"$tree_opt\\\" on-init=\\\"getTreeVM\\\"></mc:treebt>\\r\\n    </mc:dialog>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/treeSelect/mc.treeselect.html\n ** module id = 5\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/treeSelect/mc.treeselect.min.css\n ** module id = 6\n ** module chunks = 0\n **/","\r\n//todata expand checked semiChecked wait children \r\ntoTreeData = function (data, dynamic, impData, idName, pidName, isLeafName, disableImp, disableNonImp, disableLeaf, patTrace, _vm) {\r\n    //has checked data \r\n    if (impData && impData.length) {\r\n        data.forEach(function (oriItem) {\r\n            var compObj = {};\r\n            compObj[idName] = oriItem[idName]\r\n            var r = _.findWhere(impData, compObj);\r\n            //找到 选中原来 移除这个\r\n            if (r) {\r\n                oriItem.checked = true;\r\n                if (disableImp) {\r\n                    oriItem.disabled = true;\r\n                }\r\n                //index \r\n                var rI = impData.indexOf(r);\r\n                impData.splice(rI, 1);\r\n            } else {\r\n                //只减不增\r\n                //todo 忘记加ori disable什么用了= =\r\n                if (disableNonImp) {\r\n                    oriItem.disabled = true;\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    var result = [];\r\n    //has checked end\r\n    avalon.each(data, function (i, item) {\r\n        if (_vm.onPushStart && _vm.onPushStart(item) === false) {\r\n            //avalon.Array.remove(data, item);\r\n            return true;\r\n        } else {\r\n            result.push(item);\r\n        }\r\n        item.expand = item.expand || false;\r\n        item.checked = item.checked || false;\r\n        item.disabled = item.disabled || false;\r\n        item.active = false;//点击后生效,对于所有节点可选且单选很有用\r\n        item.semiChecked = false;\r\n        //trace,全路径 \r\n        patTrace = patTrace || [];\r\n        var _trace = _.clone(patTrace);\r\n        _trace.push(item[idName]);\r\n        item.$trace = _trace;\r\n        //disable 只增 只减\r\n        if (disableImp && item.checked) {\r\n            item.disabled = true;\r\n        }\r\n        if (disableNonImp && !item.checked) {\r\n            item.disabled = true;\r\n        }\r\n\r\n\r\n\r\n        //IsLeaf\r\n\r\n        item.wait = item.wait || dynamic;\r\n        if (isLeafName) {\r\n            item.wait = !item[isLeafName];\r\n            //disable isleaf \r\n            if (disableLeaf && item[isLeafName]) item.disabled = true;\r\n        }\r\n        item.children = item.children || [];\r\n        //递归赋值 \r\n        if (item.children.length) {\r\n            item.children = toTreeData(item.children, dynamic, impData, idName, pidName, isLeafName, disableImp, disableNonImp, disableLeaf, item.$trace, _vm);\r\n        }\r\n        //item.checked = item.checked || false;\r\n    });\r\n    return result;\r\n};\r\n \r\n//todo imp data,是未来展开,但已勾选的数据,只有bt模式下才有可能操作,(由于其勾选的特性可得知)..\r\n//正常下除非是个全展开树,不过也就没imp的说法了..可以改名叫originData\r\ndefine(['avalon', 'text!./mc.tree.html', './mc.tree.min.css','mcButton'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:treebt\", {\r\n        //buildin 相关\r\n        $btn_opt: {},\r\n        //外部参数\r\n        data: [],//数据源 [text,id,checked,key] \r\n        textName: '',\r\n        hasCheckbox: true,//是否有选择功能\r\n        dynamic: true, //动态请求 \r\n        clickEveryWhere: true,\r\n        hideVir:false,\r\n        //autoExpandFirst: false,  自展开 自行调用showItem\r\n        //pre disable\r\n        //todo lazy calc,要多加属性有点问题\r\n        ajaxConfig: {},\r\n        disableImp: false,\r\n        disableNonImp: false,\r\n        disableLeaf: false,//必须isleaf存在\r\n        bt: true,\r\n        barSelectMode: false, //单行选择模式,即点击单行跟点击checkbox相同,必定有checkbox,没有按钮,只有clickCheckbox事件,无foldClick事件\r\n        isLR: false,\r\n        notUpdate:false,\r\n        idName: 'id',\r\n        pidName: 'pid',\r\n        virtualId: '',//虚拟顶部ID \r\n        virtualText: '全部',\r\n        virtualClick: true,\r\n        disableId:\"\",\r\n        extraData:null,\r\n        isLeafName: '',//默认无 自己指定,就有直接判断叶子功能\r\n        hasButton: false,\r\n        autoShow: null,\r\n        //外部事件\r\n        onInit: _interface, //初始化接口 \r\n        onChecked: _interface, //选中\r\n        onUnChecked: _interface, //选中\r\n        onLeafClick: _interface, //叶子节点被点击\r\n        onEveryClick: _interface, //叶子,父,所有节点被点击\r\n        onDataChange: _interface, //ajax请求时返回data \r\n        onPushStart: _interface, //数据加入前\r\n        onPushEnd: _interface, //数据加入后  都可return掉不加入\r\n        onLoadData: _interface, //数据加载完毕\r\n        //外部接口 \r\n        setSelectById: _interface, //设置选中项  \r\n        setUnCheckedById: _interface, //设置选中项  \r\n        getSelect: _interface, //get选中项  \r\n        initSelect: _interface, //clr选中项 \r\n        initExpand: _interface, //clr展开\r\n        initTree: _interface, //init\r\n        showItem: _interface, //打开N层  \r\n        getCheckedLeafData: _interface, //todo 获取叶子选中 \r\n        setData: _interface,//\r\n        getCheckedData: _interface,//获取选中数据.一维数组\r\n        getImpCheckedData: _interface,//\r\n        getAllCheckedData: _interface,//\r\n        getDiffData: _interface,//\r\n        disableRecById: _interface,// 禁用某节点以下\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\r\n        impData: [],\r\n        oriImpData: [],\r\n        cacheData: null,\r\n        $skipArray: ['impData', 'ajaxConfig', 'oriImpData', 'cacheData', 'extraData'],\r\n        $tmpR: [],\r\n        disableRecId: null,//禁用点击到自身及其以下\r\n        tmpActive: {},\r\n        //内部事件 \r\n        clickCheckbox: _interface, //选中\r\n        foldClick: _interface, //展开\r\n        //内部接口\r\n        _trigger: _interface, //内部触发器\r\n        fold: _interface, //折叠\r\n        unfold: _interface, //展开\r\n        _fold: _interface, // 折叠或展开\r\n        toggleFold: _interface, // 折叠或展开\r\n        isLeaf: _interface, //是否叶子\r\n        isSame: _interface,//比较函数,todo 配置\r\n        _active: _interface,//比较函数,todo 配置\r\n        hasCheckedChildren: _interface,//\r\n        hasUncheckedChildren: _interface,//\r\n        hasSemiCheckedChildren: _interface,//\r\n        isSemiChecked: _interface,//\r\n        _updateParents: _interface,//\r\n        updateChecked: _interface,//\r\n        _check: _interface,//\r\n        _find: _interface,//\r\n        find: _interface,//\r\n        hasChildren: _interface,//\r\n        uncheckImp: _interface,//\r\n        setImpData: _interface,//\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            if (vmOpts.data) {\r\n                if (typeof (vmOpts.data) === 'function') {\r\n                    vmOpts.data = vmOpts.data();\r\n                }\r\n                vmOpts.data = toTreeData(vmOpts.data, vmOpts.dynamic, vmOpts.impData, vmOpts.idName,\r\n                    vmOpts.pidName, vmOpts.isLeafName, vmOpts.disableImp, vmOpts.disableNonImp, vmOpts.disableLeaf, [], vmOpts);\r\n            }\r\n            //if (vmOpts.$btn_opt && vmOpts.$btn_opt.onClick) {\r\n            //    //wrap \r\n            //    $btn_opt.onClick\r\n            //}\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象 \r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //内部事件\r\n            vm.clickCheckbox = function (ev, item) {\r\n                //禁用通常只禁用用户操作,不禁用API\r\n                if (vm.disableId && (item[vm.idName] === vm.disableId)) {\r\n                    return false;\r\n                } \r\n                if (item.disabled) return false;\r\n                //事件,true菜触发 \r\n                if (!item.checked) {\r\n                    vm._trigger({ target: item.$model }, 'checked')\r\n                } else {\r\n                    vm._trigger({ target: item.$model }, 'unchecked')\r\n                }\r\n                vm._check(item, !item.checked);\r\n            }\r\n            vm.foldClick = function (ev, item, targetType) {\r\n                //todo click def\r\n                var foldDef = $.Deferred();\r\n                //2种交互 点文字,都可选 ,即所有节点都可选择\r\n                if (item.wait !== 0) {\r\n                    if (targetType === 'text' && vm.clickEveryWhere) {\r\n                        //虚拟 不可点击,选择\r\n                        if (!vm.virtualClick && vm.virtualId && (item[vm.idName] === vm.virtualId)) {\r\n                            // return false;\r\n                        }\r\n                            //禁用某个ID\r\n                        else if (vm.disableId && (item[vm.idName] === vm.disableId)) {\r\n                         \r\n                        }\r\n                        else {\r\n                            //单选模式,点文字\r\n                            //禁用移动到自身目录,文件夹移动有用\r\n                            if (vm.disableRecId) {\r\n                                if (item.$trace.indexOf(vm.disableRecId) > -1) {\r\n                                    alert('禁用移动到自身目录');\r\n                                    return false;\r\n                                }\r\n                            }\r\n                            if (!item.disabled)\r\n                                vm._active(item);\r\n                        }\r\n\r\n                    } else {\r\n                        //非单选,或者点的是图标 \r\n                        if (!vm.isLeaf(item)) {\r\n                            vm.toggleFold(item);\r\n                        } else {\r\n                            //叶子节点被点击\r\n                            vm._trigger({ target: item.$model }, 'leaf');\r\n                        }\r\n                    }\r\n                }\r\n                return foldDef;\r\n            }\r\n            //内部接口\r\n            //一波折叠..\r\n            vm.fold = function (item) {\r\n                vm._fold(item, false);\r\n            }\r\n            vm._fold = function (item, state) {\r\n                item.expand = state;\r\n            };\r\n\r\n            vm.unfold = function (item, silence) {\r\n                var def = $.Deferred();\r\n                var dataDef = $.Deferred();\r\n                if (item.wait) {\r\n                    item.wait = 0;\r\n                    //ajax获取数据 \r\n                    var ppp = { All: 1 };\r\n                    ppp[vm.ajaxConfig.key] = item[vm.idName];\r\n                    //额外参数\r\n\r\n                    ppp = $.extend(true, ppp, vm.ajaxConfig.extra);\r\n\r\n                    Mc.Ajax({\r\n                        url: vm.ajaxConfig.url,\r\n                        data: ppp,\r\n                        success: function (r) {\r\n                            //fix pid\r\n                            if (vm.isLR) {\r\n                                r.data.forEach(function (_item) {\r\n                                    _item[vm.pidName] = item[vm.idName];\r\n                                });\r\n                            }\r\n                            if (r.data && r.data.length) {\r\n                                var data = toTreeData(r.data, vm.dynamic, vm.impData, vm.idName, vm.pidName, vm.isLeafName, vm.disableImp, vm.disableNonImp, vm.disableLeaf, item.$trace,  vm );\r\n                            }\r\n                            //如果有数据\r\n                            if (data && data.length) {\r\n                                //插入\r\n                                item.children.pushArray(data);\r\n                                //自动更新所有上级的状态\r\n                                vm._updateParents(vm.data, item.children[0]);\r\n                                vm._trigger('data');\r\n                                //extra \r\n                                if (vm.extraData && item[vm.idName] === vm.virtualId) {\r\n                                    var extra = toTreeData(vm.extraData, vm.dynamic, vm.impData, vm.idName, vm.pidName, vm.isLeafName, vm.disableImp, vm.disableNonImp, vm.disableLeaf, item.$trace, vm);\r\n                                    item.children.pushArray(extra); \r\n                                }\r\n\r\n\r\n                            } else {\r\n                                //没数据\r\n                                //vm.fold(item);\r\n                            }\r\n                            item.wait = false;\r\n                            dataDef.resolve();\r\n                        }\r\n                    });\r\n                } else if (item.wait === false) {\r\n                    dataDef.resolve();\r\n                }\r\n                //数据加载后\r\n                dataDef.then(function () {\r\n                    if (!silence) {\r\n                        vm._fold(item, true);\r\n                    }\r\n                    def.resolve();\r\n                })\r\n                return def;\r\n            }\r\n            vm.toggleFold = function (item) {\r\n                var exp = !item.expand; \r\n                if (exp) {\r\n                    vm.unfold(item)\r\n                } else {\r\n                    vm.fold(item)\r\n                }\r\n            }\r\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n\r\n                    case \"beforeEvery\":\r\n                        if (typeof vm.onBeforeEveryClick == \"function\") {\r\n                            return vm.onBeforeEveryClick(ev.target, vm) !== false ? true : false;\r\n                        }\r\n                        break;\r\n\r\n                    case \"data\":\r\n                        if (typeof vm.onDataChange == \"function\") {\r\n                            vm.onDataChange(vm.r);\r\n                        }\r\n                        break;\r\n                    case \"leaf\":\r\n                        if (typeof vm.onLeafClick == \"function\") {\r\n                            vm.onLeafClick(ev.target, vm);\r\n                        }\r\n                        break;\r\n                    case \"every\":\r\n                        if (typeof vm.onEveryClick == \"function\") {\r\n                            vm.onEveryClick(ev.target, vm);\r\n                        }\r\n                        break;\r\n                    case \"checked\":\r\n                        if (typeof vm.onChecked == \"function\") {\r\n                            vm.onChecked(ev.target);\r\n                        }\r\n                        break;\r\n                    case \"unchecked\":\r\n                        if (typeof vm.onUnChecked == \"function\") {\r\n                            vm.onUnChecked(ev.target);\r\n                        }\r\n                        break;\r\n                    case \"loadData\":\r\n                        if (typeof vm.onLoadData == \"function\") {\r\n                            vm.onLoadData(ev, vm);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n                return true;\r\n            }\r\n            vm.isLeaf = function (item) {\r\n                if (vm.isLeafName) {\r\n                    return !!item[vm.isLeafName];\r\n                }\r\n                if (item.wait) return false;\r\n                return !item.children || !item.children.length;\r\n            }\r\n            vm.isSame = function (item1, item2) {\r\n                return item1[vm.idName] == item2[vm.idName];\r\n            };\r\n            vm._active = function (item) {\r\n                if (vm._trigger({ target: item.$model }, 'beforeEvery')) {\r\n                    //激活 \r\n                    //由于单选 直接可操作tmp item,更加简洁\r\n                    if (vm.tmpActive.active) vm.tmpActive.active = false;\r\n                    item.active = true;\r\n                    vm.tmpActive = item;\r\n                    //every\r\n                    if (!vm.isLeaf(item)) {\r\n                        //vm.toggleFold(item); 不收缩,当做点击项\r\n                        vm._trigger({ target: item.$model }, 'every');\r\n                    } else {\r\n                        //叶子节点被点击\r\n                        vm._trigger({ target: item.$model }, 'leaf');\r\n                        vm._trigger({ target: item.$model }, 'every');\r\n                    }\r\n                }\r\n            };\r\n            //未定义\r\n            /**\r\n            * 递归检查指定节点是否有选中状态的子节点，不检查当前节点状态\r\n            * @param item {Object} 起始节点\r\n            * @return {boolean}\r\n            */\r\n            vm.hasCheckedChildren = function (item) {\r\n                return !!_.find(item.children, function (subItem) {\r\n                    return subItem.checked || vm.hasCheckedChildren(subItem);\r\n                });\r\n            };\r\n            /**\r\n             * 递归检查指定节点是否有未选中状态的子节点，不检查当前节点状态\r\n             * @param item {Object} 起始节点\r\n             * @return {boolean}\r\n             */\r\n            vm.hasUncheckedChildren = function (item) {\r\n                return !!_.find(item.children, function (subItem) {\r\n                    return !subItem.checked || vm.hasUncheckedChildren(subItem);\r\n                });\r\n            };\r\n            /**\r\n             * 指定节点是否半选状态，但不检查当前节点。即：既有被选中的子节点，也有未选中的子节点\r\n             * @param item {Object} 起始节点\r\n             * @return {boolean}\r\n             */\r\n            vm.hasSemiCheckedChildren = function (item) {\r\n                return vm.hasCheckedChildren(item) && vm.hasUncheckedChildren(item);\r\n            };\r\n            //alias\r\n            vm.isSemiChecked = vm.hasSemiCheckedChildren;\r\n            /**\r\n             * 更新item的父级节点，重新检查它们的checked和semiChecked状态\r\n             * @param items\r\n             * @param item\r\n             * @private\r\n             */\r\n            vm._updateParents = function (items, item) {\r\n                if (vm.notUpdate) return false;\r\n                if (vm.bt) return false;\r\n                if (!vm.hasCheckbox) return false;\r\n                avalon.each(items, function (i, subItem) {\r\n                    //找到所属root下一级\r\n                    if (vm.hasChildren(subItem, item)) {\r\n                        // 先要递归更新子级，否则中间节点的状态可能仍然处于选中状态，会影响当前节点的判断\r\n                        vm._updateParents(subItem.children, item);\r\n                        subItem.checked = vm.hasCheckedChildren(subItem);\r\n                        //半选中 todo,checked和semi可同时有,但样式semi优先\r\n                        subItem.semiChecked = vm.isSemiChecked(subItem);\r\n                    }\r\n                });\r\n            };\r\n            //待用 \r\n            vm.updateChecked = function (item) {\r\n                vm._updateParents(vm.data, item);\r\n            };\r\n            //级联取消imp 从上往下\r\n            vm.uncheckImp = function (item) {\r\n                if (vm.impData.length) {\r\n                    var childItem = _.find(vm.impData, function (impItem) {\r\n                        return impItem[vm.pidName] == item[vm.idName]\r\n                    });\r\n                    if (childItem) {\r\n                        //imp内级联\r\n                        vm.uncheckImp(childItem);\r\n                        var rIndex = vm.impData.indexOf(childItem);\r\n                        vm.impData.splice(rIndex, 1)\r\n                    }\r\n\r\n                }\r\n            },\r\n            //返回checked data\r\n            //todo $tmpR 去掉 \r\n            vm.getCheckedData = function (items) {\r\n\r\n                if (!items) {\r\n                    items = vm.data.$model;\r\n                    vm.$tmpR = [];\r\n                }\r\n\r\n                _.each(items, function (item) {\r\n                    //递归子集\r\n                    if (item.children && item.children.length) {\r\n                        vm.getCheckedData(item.children)\r\n                    }\r\n                    if (item.checked) {\r\n                        vm.$tmpR.push(item);\r\n                    }\r\n                })\r\n                return vm.$tmpR;\r\n            };\r\n            //返回imp checked data\r\n            vm.getImpCheckedData = function () {\r\n                return vm.impData;\r\n            };\r\n            //返回imp 和 data全部选中的数据\r\n            vm.getAllCheckedData = function () {\r\n                var checkedData = vm.getCheckedData();\r\n                var impCheckedData = vm.getImpCheckedData();\r\n                var all = _.flatten([impCheckedData, checkedData], true);\r\n                ////取ID\r\n                //all=all.map(function (item) {\r\n                //    return item[vm.idName];\r\n                //})\r\n                var allReal = []\r\n                //去虚拟root\r\n                if (vm.virtualId) {\r\n                    allReal = _.filter(all, function (item) {\r\n                        return item[vm.idName] !== vm.virtualId\r\n                    });\r\n\r\n                } else {\r\n                    allReal = all;\r\n                }\r\n\r\n                return allReal;\r\n            };\r\n            //获取加减的数据 diff=[ [],[] ]\r\n            vm.getDiffData = function () {\r\n                var allCheckedData = vm.getAllCheckedData();\r\n\r\n                //diff\r\n                //直接diff[0]处,2次diff就可以了 \r\n                var diff = [[], []];\r\n\r\n                //先获取id\r\n                var oriLeftPure = allCheckedData.map(function (item) {\r\n                    return item[vm.idName];\r\n                });\r\n                var rLeftPure = vm.oriImpData.map(function (item) {\r\n                    return item[vm.idName];\r\n                });\r\n                //id比较\r\n                var tl = _.difference(oriLeftPure, rLeftPure);\r\n                var tr = _.difference(rLeftPure, oriLeftPure);\r\n                //根据结果id找回item\r\n                tl.forEach(function (t) {\r\n                    var r = _.find(allCheckedData, function (oriItem) {\r\n                        return oriItem[vm.idName] === t\r\n                    })\r\n                    r ? diff[1].push(r)\r\n                    : 0\r\n                })\r\n                tr.forEach(function (t) {\r\n                    var r = _.find(vm.oriImpData, function (oriItem) {\r\n                        return oriItem[vm.idName] === t\r\n                    })\r\n                    r ? diff[0].push(r)\r\n                    : 0\r\n                })\r\n                return diff\r\n            }\r\n            vm._check = function (item, checked) {\r\n                item.checked = checked;\r\n                if (vm.bt) {\r\n                    // 把当前节点的选中状态应用到所有下级,,,bt版本 只有全选 取消功能,并且狂级联取消imp一发\r\n                    //要cancel imp:  非叶子 and  child为0,  :就是like叶子节点的父节点\r\n                    if (!checked) {\r\n                        //imp test\r\n                        if ((!vm.isLeaf(item)) && item.children.length === 0) {\r\n                            vm.uncheckImp(item);\r\n                        }\r\n                        //imp end\r\n                        avalon.each(item.children, function (i, subItem) {\r\n                            vm._check(subItem, false);\r\n                        });\r\n                    } else {\r\n                        //选中 一路上到父,用outer实现\r\n                        //outer找不到 直接找\r\n                        //如果有父属性\r\n                        //判非空,0,字符串都可以\r\n                        if (item[vm.pidName]) {\r\n                            var toFindTarget = {};\r\n                            toFindTarget[vm.idName] = item[vm.pidName]\r\n\r\n                            var pat = vm.find(toFindTarget);\r\n                            if (pat && (!pat.checked)) {\r\n                                vm._check(pat, true)\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    // 把当前节点的选中状态应用到所有下级\r\n                    if (!vm.notUpdate) {\r\n                        avalon.each(item.children, function (i, subItem) {\r\n                            vm._check(subItem, checked);\r\n                        });\r\n                        // 自动更新所有上级的状态\r\n                        vm._updateParents(vm.data, item);\r\n                    }\r\n                }\r\n            };\r\n            vm._find = function (items, item) {\r\n                if (!items)\r\n                    return null;\r\n                // 在子节点中查找\r\n                for (var i = 0; i < items.length; ++i) {\r\n                    var subItem = items[i];\r\n                    // 如果找到了则直接返回\r\n                    if (vm.isSame(subItem, item))\r\n                        return subItem;\r\n                    // 否则递归查找\r\n                    var subResult = vm._find(subItem.children, item);\r\n                    if (subResult)\r\n                        return subResult;\r\n                }\r\n                return null;\r\n            };\r\n            /**\r\n             * 查找指定的节点，会使用cbIsSame参数\r\n             * @param item\r\n             * @returns {Object}\r\n             */\r\n            vm.find = function (item) {\r\n                return vm._find(vm.data, item);\r\n            };\r\n            /**\r\n             * parent及其子节点中有没有指定的subItem节点\r\n             * @param parent {Object}\r\n             * @param subItem {Object|Array}\r\n             * @returns {boolean}\r\n             */\r\n            vm.hasChildren = function (parent, subItem) {\r\n                //wrap items\r\n                //toString.call(subItem) === '[object Array]'\r\n                var subItems = subItem.length >= 0 ? subItem : [subItem];\r\n                return !!_.find(subItems, function (subItem) {\r\n                    return vm._find(parent.children, subItem);\r\n                });\r\n            };\r\n            //外部事件 \r\n            //外部接口 \r\n            vm.disableRecById = function (id) {\r\n                vm.disableRecById = id;\r\n            };\r\n            vm.setSelectById = function (id) {\r\n                var toTarget = {};\r\n                toTarget[vm.idName] = id;\r\n                var r = vm.find(toTarget)\r\n                if (r)\r\n                    vm._active(r)\r\n            };\r\n            vm.setUnCheckedById = function (id) {\r\n                var toTarget = {};\r\n                toTarget[vm.idName] = id;\r\n                var r = vm.find(toTarget)\r\n                if (r)\r\n                    r.checked = false;\r\n                    //vm._active(r)\r\n            };\r\n            vm.getSelect = function () {\r\n                if (vm.tmpActive.active) {\r\n                    return { text: vm.tmpActive.$model[vm.textName], val: vm.tmpActive.$model[vm.idName], trace: vm.tmpActive.$trace }\r\n                } else {\r\n                    return null;\r\n                }\r\n\r\n            };\r\n            vm.initSelect = function () {\r\n                if (!vm.hasCheckbox)\r\n                    vm.tmpActive.active = false;\r\n                else {\r\n                    //todo clr checked\r\n                }\r\n            };\r\n            vm.initExpand = function () {\r\n                var _initExpand = function (data) {\r\n                    data.forEach(function (item) {\r\n                        vm.fold(item);\r\n                        if (item.children.length) {\r\n                            _initExpand(item.children)\r\n                        }\r\n                    });\r\n                   \r\n                };\r\n                _initExpand(vm.data);\r\n            };\r\n            vm.initTree = function () {\r\n                vm.initExpand();\r\n                vm.initSelect();\r\n            };\r\n            vm.setData = function (data, impData) {\r\n                if (impData) {\r\n                    vm.setImpData(impData);\r\n                }\r\n                if (!data) {\r\n                    var vRootItem = {}\r\n                    vRootItem[vm.idName] = vm.virtualId;\r\n                    vRootItem[vm.textName] = vm.virtualText;\r\n                    vRootItem.wait = true;\r\n                    vRootItem.$trace = [];\r\n                    if (vm.isLeafName) {\r\n                        vRootItem[vm.isLeafName] = 0;\r\n                    }\r\n                    data = [vRootItem];\r\n                }\r\n                vm.data = toTreeData(data, vm.dynamic, vm.impData, vm.idName, vm.pidName,\r\n                    vm.isLeafName, vm.disableImp, vm.disableNonImp, vm.disableLeaf, [], vm);\r\n                if (vm.autoExpandFirst) {\r\n                    _.each(vm.data, function (item) {\r\n                        vm.foldClick({}, item, 'icon')\r\n                    })\r\n                }\r\n                return vm;\r\n            };\r\n            vm.setImpData = function (impData) {\r\n                //保存 以DIFF,但不要保存V\r\n                vm.oriImpData = impData.map(function (item) {\r\n                    return _.clone(item);\r\n                })\r\n                //然后加V\r\n                if (impData.length) {\r\n                    //imp有length可知有 v root\r\n                    var vRootItem = {}\r\n                    vRootItem[vm.idName] = vm.virtualId;\r\n                    vRootItem[vm.textName] = vm.virtualText;\r\n                    if (vm.isLeafName) {\r\n                        vRootItem[vm.isLeafName] = 0;\r\n                    }\r\n                    impData.push(vRootItem)\r\n                }\r\n                vm.impData = impData;\r\n            };\r\n            //展开n层\r\n            vm.showItem = function (items, n, opt) {\r\n                if (n < 1) { return false; }\r\n                items = items || vm.data;\r\n                items = _.isArray(items) ? items : [items];\r\n                _.each(items, function (item) {\r\n                    if (opt.force) {\r\n                        //强制刷新  \r\n                        var couldRef = false;\r\n                        //直接以字段判断的特殊情况\r\n                        if (vm.isLeafName) {\r\n                            if (!item[vm.isLeafName]) {\r\n                                couldRef = true;\r\n                            }\r\n                        } else {\r\n                            couldRef = true;\r\n                        }\r\n                        if (couldRef) {\r\n                            item.wait = true;\r\n                            item.children = [];\r\n                            //vm.fold(item);\r\n                        }\r\n                    }\r\n                    vm.unfold(item, opt.silence).then(function () {\r\n                        vm._trigger(item, \"loadData\"); //触发数据加载完毕事件\r\n                        if (item.children.length) {\r\n                            //展开后有数据\r\n                            vm.showItem(item.children, --n, opt);\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            //BUG 这一层之上必须存在,也不能说是BUG..\r\n            vm.showItemById = function (id, n, opt) {\r\n                var p = {};\r\n                p[vm.idName] = id;\r\n                var item = vm.find(p);\r\n                if (item)\r\n                    vm.showItem(item, n, opt);\r\n            }\r\n            //展开所有\r\n            vm.showAllItem = function (items, opt) {\r\n                vm.showItem(null, 100, opt);\r\n            }\r\n            //观测方法\r\n            //注意:ms-duplex与ms-input不能用在同一元素上。用watch..\r\n            //   vm.$watch('data', function (newV, oldV) {\r\n\r\n            // });\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            console.log('ready  tree');\r\n            vm.isInit = false;\r\n            //传入数据需要更新..    \r\n            if (vm.autoShow) {\r\n                var opt = {\r\n                    force: vm.autoShow.force,\r\n                    silence: vm.autoShow.silence,\r\n                };\r\n                if (vm.autoShow.n)\r\n                    vm.setData(null).showItem(null, vm.autoShow.n, opt);\r\n                else\r\n                    vm.setData(null).showAllItem(null, opt);\r\n            }\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:treebt\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/treebt/mc.tree.js\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-tree-cotar\\\" ms-class=\\\"mc-loading: isInit\\\">\\r\\n    <script type=\\\"avalon\\\" id=\\\"treeitem\\\" style=\\\"display: none\\\">\\r\\n        <i ms-click=\\\"foldClick($event,el,'icon')\\\" class=\\\"mc-ic parent\\\"\\r\\n           ms-class-1=\\\"expand:  el.expand\\\"\\r\\n           ms-class-2=\\\"unexpand:!el.expand\\\"\\r\\n           ms-class-3=\\\"leaf: isLeaf(el)\\\"\\r\\n           ms-class-4=\\\"wait: isLeafName ?  false :  el.wait\\\"\\r\\n           ms-class-5=\\\"waiting: el.wait===0\\\"\\r\\n           ms-visible=\\\"!hideVir || el[idName]!==virtualId\\\">\\r\\n        </i>\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group mc-checkbox-cotar\\\" ms-class=\\\"mc-tree-bar:barSelectMode\\\" ms-if=\\\"!barSelectMode\\\" ms-visible=\\\"!hideVir || el[idName]!==virtualId\\\">\\r\\n            <i ms-if=\\\"hasCheckbox\\\" ms-click=\\\"clickCheckbox($event,el)\\\" class=\\\"mc-checkbox\\\"\\r\\n               ms-class-1=\\\"mc-active: el.checked\\\"\\r\\n               ms-class-2=\\\"mc-semi-checked: el.semiChecked\\\"\\r\\n               ms-class-3=\\\"mc-checkbox-disabled: el.disabled&&el.checked\\\"\\r\\n               ms-class-4=\\\"mc-checkbox-unchecked-disabled: el.disabled&& (!el.checked)\\\"></i>\\r\\n            <span ms-click=\\\"foldClick($event,el,'text')\\\" class=\\\"mc-checkbox-label text-field\\\"\\r\\n                  ms-class-1=\\\"mc-text-active: el.active\\\"\\r\\n                  ms-class-2=\\\"mc-text-disabled: el.disabled\\\">\\r\\n                {{el[textName]}}\\r\\n            </span>\\r\\n            <mc:button ms-if=\\\"hasButton\\\" config=\\\"$btn_opt\\\"\\r\\n                       ms-attr-str=\\\"{{JSON.stringify(el.$model)}}\\\">\\r\\n\\r\\n            </mc:button>\\r\\n        </div>\\r\\n        <!-- 单行选择模式 -->\\r\\n        <div class=\\\"form-group mc-checkbox-cotar mc-tree-bar\\\" ms-if=\\\"barSelectMode\\\" ms-click=\\\"clickCheckbox($event,el)\\\"\\r\\n             ms-visible=\\\"!hideVir || el[idName]!==virtualId\\\">\\r\\n            <i class=\\\"mc-checkbox\\\"\\r\\n               ms-class-1=\\\"mc-active: el.checked\\\"\\r\\n               ms-class-2=\\\"mc-semi-checked: el.semiChecked\\\"\\r\\n               ms-class-3=\\\"mc-checkbox-disabled: el.disabled&&el.checked\\\"\\r\\n               ms-class-4=\\\"mc-checkbox-unchecked-disabled: el.disabled&& (!el.checked)\\\"></i>\\r\\n            <span class=\\\"mc-checkbox-label text-field\\\"\\r\\n                  ms-class-1=\\\"mc-text-active: el.active\\\"\\r\\n                  ms-class-2=\\\"mc-text-disabled: el.disabled\\\">\\r\\n                {{el[textName]}}\\r\\n            </span>\\r\\n        </div>\\r\\n        <ul ms-visible=\\\"el.expand\\\">\\r\\n            <!--ms-if=\\\"!isLeaf(el)\\\"-->\\r\\n            <li ms-repeat=\\\"el.children\\\" ms-include=\\\"'treeitem'\\\">\\r\\n            </li>\\r\\n        </ul>\\r\\n    </script>\\r\\n    <ul class=\\\"tree-view\\\">\\r\\n        <li ms-repeat=\\\"data\\\" ms-include=\\\"'treeitem'\\\">\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/treebt/mc.tree.html\n ** module id = 8\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/treebt/mc.tree.min.css\n ** module id = 9\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.button.html\", \"./mc.button.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:button\", {\r\n        //外部参数\r\n        label: \"\", //文本\r\n        type: \"\", //success,fail\r\n        mcstyle: \"\", //风格\r\n        size: \"normal\", //wide\r\n        disabled: false, //是否禁用\r\n\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onClick: null, //当按钮点击时触发事件\r\n\r\n        //外部接口\r\n        isDisable: _interface, //是否禁用\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\n\n        //内部事件\n        clickButton: _interface, //按钮点击事件\n\n        //内部接口\n        _trigger: _interface, //内部触发器\r\n\r\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options;\r\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\r\n            //内部事件\r\n            vm.clickButton = function (ev, _this) {\r\n                if (!vm.disabled) {\r\n                    vm._trigger(ev, \"click\", _this);\r\n                    ev.stopPropagation();\r\n                }\r\n            }\r\n\r\n            //内部接口\n            vm._trigger = function (ev, type, _this) {\r\n                switch (type) {\r\n                    case \"click\":\n                        if (typeof vm.onClick == \"function\") {\r\n                            vm.onClick(ev, vm, _this);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n\n            //外部事件\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\n        },\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:button\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/button/mc.button.js\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-button-cotar\\\" ms-class-1=\\\"mc-button-disabled: disabled\\\"\\r\\n     ms-class-2=\\\"success: type=='success'\\\" ms-class-3=\\\"fail: type=='fail'\\\"\\r\\n     ms-class-4=\\\"mc-size-wide: size=='wide'\\\" ms-class-5=\\\"{{mcstyle}}\\\" ms-class-6=\\\"mc-loading: isInit\\\"\\r\\n     ms-click=\\\"clickButton($event, this)\\\">\\r\\n    <span class=\\\"mc-button-label\\\">{{label}}</span>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/button/mc.button.html\n ** module id = 11\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/button/mc.button.min.css\n ** module id = 12\n ** module chunks = 0\n **/","define(['avalon', 'text!./mc.dialog.html', './mc.dialog.min.css'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:dialog\", {\r\n        //外部参数\r\n        title: \"\", //模态窗口title\r\n        size: \"normal\", //page,large, small\r\n        width: null,\r\n        height: null,\r\n        padding: 15,\r\n        show: false, //是否显示,默认隐藏\r\n        buttons: [], //footer显示的按钮列表 [label 按钮文字][type 类型 [success][fail]][callback 回调函数]\r\n        bgClose: false, //点击背景是否可以关闭模态窗口\n        $tmpData: {}, //临时数据存储对象\r\n\r\n        //外部事件\r\n        onShowed: null,\r\n        onHided: null,\r\n\r\n        //外部接口\r\n        setTitle: _interface,\r\n        getTitle: _interface,\r\n        showDialog: _interface,\r\n        hideDialog: _interface,\n        setCallback: _interface,\r\n\r\n        getTmpData: _interface, //获取临时数据对象的值\r\n        setTmpData: _interface, //设置临时数据对象的值\r\n\r\n        //内部属性\r\n        content: \"\",\n        lindex: -1, //布局中的序号\n\r\n        //内部事件\r\n        btnClick: _interface,\n        clickDialog: _interface,\n\r\n        //内部接口\r\n        onInit: _interface, //初始化接口 \r\n        _trigger: _interface,\r\n        onSelectadd: _interface, //当dialog作为vm传给selectadd组件时会调用此接口,此接口在弹出层关闭时触发\r\n        jBtnType: _interface,\r\n\n        //默认配置\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options; //返回VM的定义对象\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\n            //======= 内部事件 START =======//\r\n            /**\r\n             * 按钮点击事件\r\n             * @param {} ev 动作类型\r\n             * @param {} btnVm 被点击的按钮的vm\r\n             * @returns {} \r\n             */\r\n            vm.btnClick = function (ev, btnVm) {\r\n                var callback = btnVm.lindex !== -1 && vm.buttons[btnVm.lindex].callback;\r\n                if (typeof callback == \"function\") {\r\n                    if (callback(ev, vm)) {\r\n                        vm._trigger(btnVm.lindex, \"selectadd\");\r\n                        vm.hideDialog({}, true);\r\n                    }\r\n                }\r\n            }\n            /**\r\n             * 模态窗口点击时事件\r\n             * @param {} ev 动作类型\r\n             * @returns {} \r\n             */\n            vm.clickDialog = function (ev) {\n                //阻止冒泡(避免点击弹出框时 弹出框关闭)\n                ev.cancelBubble = true;\r\n            }\n            //======= 内部事件 END =======//\r\n\n            //======= 内部接口 START =======//\r\n            /**\r\n             * 事件触发器\r\n             * @param {} ev 动作类型\r\n             * @param {} type 事件类型\r\n             * @returns {} \r\n             */\r\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"showed\":\n                        if (typeof vm.onShowed == \"function\") {\r\n                            vm.onShowed(ev, vm);\r\n                        }\n                        break;\n                    case \"hided\":\n                        if (typeof vm.onHided == \"function\") {\r\n                            vm.onHided(ev, vm);\r\n                        }\n                        break;\n                    case \"selectadd\":\n                        if (typeof vm.onSelectadd == \"function\") {\r\n                            vm.onSelectadd(ev, vm);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n            vm.jBtnType = function (idx) {\r\n                return vm.buttons[idx].type;\r\n            }\n            //======= 内部接口 END =======//\r\n\r\n            //======= 外部接口 START =======//\n            /**doc\r\n             * @description {设置title}\r\n             * @param {title} {要设置的title}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\n            vm.setTitle = function (title) {\r\n                vm.title = title;\r\n                return vm;\r\n            }\n            /**doc\r\n             * @description {返回title}\r\n             * @returns {String} {title字符串}\r\n             */\n            vm.getTitle = function () {\r\n                return vm.title;\r\n            }\n            /**doc\r\n             * @description {显示模态窗口}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\n            vm.showDialog = function () {\r\n                vm.show = true;\n                vm._trigger({}, \"showed\");\r\n                return vm;\r\n            }\n            /**doc\r\n             * @description {隐藏模态窗口}\r\n             * @param {ev} {动作类型}\r\n             * @param {noJudge} {是否不判断直接关闭}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\n            vm.hideDialog = function (ev, noJudge) {\r\n                if (noJudge || vm.bgClose) {\r\n                    vm.show = false;\n                    vm._trigger(ev, \"hided\");\r\n                }\r\n                return vm;\r\n            }\r\n            /**doc\r\n             * @description {设置回调}\r\n             * @param {idx} {设置的按钮index}\r\n             * @param {callback} {对应的回调函数}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\r\n            vm.setCallback = function (idx, callback) {\r\n                vm.buttons[idx] && (vm.buttons[idx].callback = callback);\r\n                return vm;\r\n            }\r\n            vm.getTmpData = function () {\r\n                return vm.$tmpData;\r\n            }\r\n            vm.setTmpData = function (val) {\r\n                vm.$tmpData = $.extend(vm.$tmpData, val);\r\n                return vm;\r\n            }\r\n            //======= 外部接口 END =======//\n        },\n        $ready: function (vm, elem) {\r\n            //向store注册组件\r\n            McAvalon.$mcPageStore && McAvalon.$mcPageStore.regist(vm);\r\n            vm.onInit(vm, elem); //调用外部初始化函数\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:dialog\"];\n    widget.regionals = {};\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/dialog/mc.dialog.js\n ** module id = 13\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-modal-cotar fade\\\" ms-click=\\\"hideDialog($event)\\\" ms-class-1=\\\"mc-dialog-show:show\\\"\\r\\n     ms-class-2=\\\"mc-dialog-hide:!show\\\">\\r\\n    <div class=\\\"mc-modal-dialog vm-cotar\\\" ms-click=\\\"clickDialog($event)\\\" ms-class-1=\\\"mc-modal-lg: size=='large'\\\"\\r\\n         ms-class-2=\\\"mc-modal-sm: size=='small'\\\" ms-class-3=\\\"mc-modal-page: size=='page'\\\">\\r\\n        <div class=\\\"mc-modal-content\\\">\\r\\n            <!-- modal header -->\\r\\n            <div class=\\\"mc-modal-header hf\\\">\\r\\n                <div class=\\\"mc-modal-title fp\\\">{{title}}</div>\\r\\n                <div class=\\\"mc-close-btn fp\\\" ms-click=\\\"hideDialog($event,true)\\\"><span>&times;</span></div>\\r\\n            </div>\\r\\n            <!-- modal body -->\\r\\n            <div class=\\\"mc-modal-body\\\" ms-css-padding=\\\"padding\\\" ms-css-height=\\\"height\\\">{{content|html}}</div>\\r\\n            <!-- modal footer -->\\r\\n            <div class=\\\"mc-modal-footer\\\" ms-if=\\\"buttons.length > 0\\\">\\r\\n                <mc:button ms-repeat=\\\"buttons\\\" ms-attr-type=\\\"jBtnType($index)\\\" on-click=\\\"btnClick\\\"\\r\\n                           ms-attr-lindex=\\\"$index\\\" ms-attr-label=\\\"el.label\\\">\\r\\n                </mc:button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- modal bg -->\\r\\n        <div class=\\\"mc-modal-bg\\\"></div>\\r\\n    </div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/dialog/mc.dialog.html\n ** module id = 14\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/dialog/mc.dialog.min.css\n ** module id = 15\n ** module chunks = 0\n **/","\r\n//#region 图标\r\nMcIcon = function () {\r\n    //可选图标列表\r\n    this.iconList = [\r\n        { iconCode: \"&#xe791;\" },\r\n        { iconCode: \"&#xe78b;\" },\r\n        { iconCode: \"&#xe729;\" },\r\n        { iconCode: \"&#xe734;\" },\r\n        { iconCode: \"&#xe74a;\" },\r\n        { iconCode: \"&#xe741;\" },\r\n        { iconCode: \"&#xe739;\" },\r\n        { iconCode: \"&#xe759;\" },\r\n        { iconCode: \"&#xe753;\" },\r\n        { iconCode: \"&#xe700;\" },\r\n        { iconCode: \"&#xe6fe;\" },\r\n        { iconCode: \"&#xe706;\" },\r\n        { iconCode: \"&#xe667;\" },\r\n        { iconCode: \"&#xe665;\" },\r\n        { iconCode: \"&#xe671;\" },\r\n        { iconCode: \"&#xe676;\" },\r\n        { iconCode: \"&#xe6af;\" },\r\n        { iconCode: \"&#xe699;\" },\r\n        { iconCode: \"&#xe69b;\" },\r\n        { iconCode: \"&#xe651;\" }\r\n    ];\r\n}\r\nMcIcon.prototype.getList = function () {\r\n    return this.iconList;\r\n}\r\nMcIcon.prototype.getIcon = function (idx) {\r\n    return this.iconList[idx];\r\n}\r\n//#endregion\r\n\r\n//#region McAvalon Info\r\nMcAvalon = {\r\n    //版本信息\r\n    version: '0.4.0beta',\r\n    $window: $({}), //子页面的全局window对象\r\n    $mcPageStore: null, //子页面的store对象\r\n    getVm: function (identifier) { //通过identifier获取avalon的VM对象\r\n        return avalon.vmodels[identifier];\r\n    },\r\n    //工具函数\r\n    util: {\r\n        //生成UID(id前缀)\r\n        genId: function (prefix) {\r\n            //prefix = prefix.toUpperCase() || 'ID';\r\n            prefix = prefix || 'ID';\r\n            return String(Math.random() + Math.random()).replace(/\\d\\.\\d{4}/, prefix);\r\n        },\r\n        //获取url参数\r\n        getUrlParamByName: function (name) {\r\n            var result = null;\r\n            var hash = window.location.hash;\r\n            var s = hash.indexOf(\"?\");\n            if (s !== -1) {\r\n                var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\r\n                var r = hash.substr(s + 1).match(reg);\r\n                if (r != null) result = decodeURIComponent(r[2]);\r\n            }\n            return result;\r\n        }\r\n    },\r\n    //数据验证\r\n    validata: function (val, valids) {\r\n        var info = '', reg = null, flag = true, validArr = valids.split(',');\r\n        for (var i = 0; i < validArr.length; i++) {\r\n            var valid = validArr[i];\r\n            switch (valid) {\r\n                case 'int':\r\n                    reg = /^\\-?\\d+$/;\r\n                    info = reg.test(val) ? '' : '请输入正确的整数'; break;\r\n                case '+int':\r\n                    reg = /^\\+?[1-9][0-9]*$/;\r\n                    info = reg.test(val) ? '' : '请输入正确的正整数'; break;\r\n                case '-int':\r\n                    reg = /^\\-[1-9][0-9]*$/;\r\n                    info = reg.test(val) ? '' : '请输入正确的负整数'; break;\r\n                case 'float':\r\n                    reg = /^(-?\\d+)(\\.\\d+)?/;\r\n                    info = reg.test(val) ? '' : '请输入正确的浮点数'; break;\r\n                case '+float':\r\n                    reg = /^(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*))$/;\r\n                    info = reg.test(val) ? '' : '请输入正确的正浮点数'; break;\r\n                case '-float':\r\n                    reg = /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/;\r\n                    info = reg.test(val) ? '' : '请输入正确的负浮点数'; break;\r\n                case 'ip':\r\n                    reg = /^(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])$/;\r\n                    info = reg.test(val) ? '' : 'IP地址有误'; break;\r\n                case 'email':\r\n                    reg = /^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z0-9]{2,5}$/;\r\n                    info = reg.test(val) ? '' : '电子邮件地址有误'; break;\r\n                case 'phone':\r\n                    reg = /^(\\(\\d{3,4}\\)|\\d{3,4}-)?\\d{7,8}$/;\r\n                    info = reg.test(val) ? '' : '电话号码有误'; break;\r\n                case 'mobile':\r\n                    reg = /^(0|86|17951)?(13[0-9]|15[012356789]|17[678]|18[0-9]|14[57])[0-9]{8}$/;\r\n                    info = reg.test(val) ? '' : '手机号码有误'; break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n        return info;\r\n    },\r\n\r\n    //图标\r\n    icon: new McIcon()\r\n}\r\n//#endregion\r\n\r\n//#region Avalon Config\r\navalon.config({\r\n    paths: {\r\n        mmRequest: \"debug/src/ass/ui/base/js/mmRequest.js\",\r\n        mmPromise: \"debug/src/ass/ui/base/js/mmPromise.js\",\r\n        mmHistory: \"debug/src/ass/ui/base/js/mmRouter/mmHistory.js\",\r\n        mmRouter: \"debug/src/ass/ui/base/js/mmRouter/mmRouter.js\",\r\n        mmState: \"debug/src/ass/ui/base/js/mmRouter/mmState.js\",\r\n        //MCUI path\r\n        mcAccordion: \"debug/src/ass/ui/accordion/mc.accordion.js\", //手风琴\r\n        mcSidebar: \"debug/src/ass/ui/sidebar/mc.sidebar.js\", //侧边栏\r\n        mcSidepop: \"debug/src/ass/ui/sidepop/mc.sidepop.js\", //侧边弹出层\r\n        mcDatagrid: \"debug/src/ass/ui/datagrid/mc.datagrid.js\", //数据表\r\n        mcDatagridTest: \"debug/src/ass/ui/datagridtest/mc.datagridtest.js\", //数据表2\r\n        mcPopmenu: \"debug/src/ass/ui/popmenu/mc.popmenu.js\", //弹出菜单\r\n        mcPop: 'debug/src/ass/ui/pop/mc.pop.js', //提示框,确认框组件\r\n        mcDialog: 'debug/src/ass/ui/dialog/mc.dialog.js',\r\n        mcDialogTest: 'debug/src/ass/ui/dialogtest/mc.dialogtest.js',\r\n        mcForm: 'debug/src/ass/ui/form/mc.form.js',\r\n        mcNavbar: 'debug/src/ass/ui/navbar/mc.navbar.js',\r\n        mcPanel: 'debug/src/ass/ui/panel/mc.panel.js',\r\n        mcTab: 'debug/src/ass/ui/tab/mc.tab.js',\r\n        mcSearchbox: \"debug/src/ass/ui/searchbox/mc.searchbox.js\", //搜索框\r\n        mcTabs: \"debug/src/ass/ui/tabs/mc.tabs.js\", //tabs\r\n        mcCheckbox: \"debug/src/ass/ui/form/checkbox/mc.checkbox.js\", //复选框\r\n        mcCheckboxGroup: 'debug/src/ass/ui/form/checkboxGroup/mc.checkboxgroup.js',\r\n        mcListdataAdd: 'debug/src/ass/ui/form/ListdataAdd/mc.ListdataAdd.js',//左右选择框\r\n        mcTree: 'debug/src/ass/ui/form/tree/mc.tree.js',//树形\r\n        mcTreeBt: 'debug/src/ass/ui/form/treebt/mc.tree.js',//树形2\r\n        mcTreeSelect: 'debug/src/ass/ui/form/treeSelect/mc.treeSelect.js',//树形选择form\r\n        mcButton: \"debug/src/ass/ui/form/button/mc.button.js\", //按钮\r\n        mcDroplist: \"debug/src/ass/ui/droplist/mc.droplist.js\", //下拉展开列表\r\n        mcDatapager: \"debug/src/ass/ui/datapager/mc.datapager.js\", //页码\r\n        mcDatapagerTest: \"debug/src/ass/ui/datapagertest/mc.datapagerTest.js\", //页码test\r\n        mcDatepicker: 'debug/src/ass/ui/form/datepicker/mc.datepicker.js', //日期选择\r\n        mcPassword: 'debug/src/ass/ui/form/password/mc.password.js',\r\n        mcRadiogroup: 'debug/src/ass/ui/form/radio/mc.radiogroup.js',\r\n        mcRate: 'debug/src/ass/ui/form/rate/mc.rate.js',\r\n        mcSelectbox: \"debug/src/ass/ui/form/selectbox/mc.selectbox.js\", //下拉选择框\r\n        mcSpinner: 'debug/src/ass/ui/form/spinner/mc.spinner.js',\r\n        mcSwitch: 'debug/src/ass/ui/form/switch/mc.switch.js', //开关组件\r\n        mcText: \"debug/src/ass/ui/form/text/mc.text.js\", //输入行\r\n        mcJsonadd: \"debug/src/ass/ui/form/jsonadd/mc.jsonadd.js\", //输入行\r\n        mcUpload: \"debug/src/ass/ui/form/upload/mc.upload.js\", //上传组件\r\n        mcEditor: \"debug/src/ass/ui/form/editor/mc.editor.js\", //文本编辑器组件\r\n        mcTagadd: \"debug/src/ass/ui/form/tagadd/mc.tagadd.js\", //标签添加组件\r\n        mcSelectadd: \"debug/src/ass/ui/form/selectadd/mc.Selectadd.js\", //选择添加组件\r\n        mcPagemodal: \"debug/src/ass/ui/pagemodal/mc.pagemodal.js\", //页面弹窗\r\n        mcBread: \"debug/src/ass/ui/bread/mc.bread.js\", //面包屑\r\n        mcIconselect: \"debug/src/ass/ui/form/iconselect/mc.iconselect.js\", //图标选择\r\n        mcTextarea: 'debug/src/ass/ui/form/textarea/mc.textarea.js',\r\n        //MCLayout path\r\n        mcGrid: \"debug/src/ass/ui/layout/gridlayout/mc.gridlayout.js\", //网格布局\r\n        mcLinear: \"debug/src/ass/ui/layout/linearlayout/mc.linearlayout.js\", //线性布局\r\n        mcAbsolute: \"debug/src/ass/ui/layout/absolutelayout/mc.absolutelayout.js\", //绝对布局\r\n        mcRelative: \"debug/src/ass/ui/layout/relativelayout/mc.relativelayout.js\", //相对布局\r\n    },\r\n    maxRepeatSize: 50\r\n});\r\navalon.library(\"mc\", {\r\n    $init: function () { },\r\n    $childReady: function () { },\r\n    $ready: function () { },\r\n    $dispose: function () { }\r\n});\r\n//#endregion\r\n\r\n//#region some method\r\nfunction testSetValue(_key, _obj, _success) {\r\n    //121.40.186.49:8001\r\n    //$.ajax({\r\n    //    url: \"http://192.168.0.109:8001/Home/set\",\r\n    //    type: \"post\",\r\n    //    async: true,\r\n    //    data: {\r\n    //        key: _key,\r\n    //        value: JSON.stringify(_obj)\r\n    //    },\r\n    //    success: function () {\r\n    //        typeof _success === \"function\" && _success();\r\n    //    }\r\n    //});\r\n    $.ajax({\r\n        url: \"/Home/SetData\",\r\n        type: \"post\",\r\n        async: true,\r\n        data: {\r\n            key: _key,\r\n            value: JSON.stringify(_obj)\r\n        },\r\n        success: function () {\r\n            typeof _success === \"function\" && _success();\r\n        }\r\n    });\r\n}\r\n\r\nfunction testGetValue(_key, _success) {\r\n    //$.ajax({\r\n    //    url: \"http://192.168.0.109:8001/Home/get\",\r\n    //    data: {\r\n    //      key: _key\r\n    //    },\r\n    //    type: \"post\",\r\n    //    async: true,\r\n    //    success: function (result) {\r\n    //        typeof _success === \"function\" && _success.call(this, result);\r\n    //    }\r\n    //});\r\n    $.ajax({\r\n        url: \"/Home/GetData\",\r\n        type: \"post\",\r\n        async: true,\r\n        data: {\r\n            key: _key\r\n        },\r\n        success: function (result) {\r\n            typeof _success === \"function\" && _success.call(this, result);\r\n        }\r\n    });\r\n}\r\n\r\n//对象深度拷贝\r\nvar deepCopy = function (source) {\r\n    var result = {};\r\n    for (var key in source) {\r\n        if (source.hasOwnProperty(key)) {\r\n            result[key] = typeof source[key] === 'object' ? window.deepCoyp(source[key]) : source[key];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\n\r\n//方式3, 设计一个assignVM方法，方便mixin N个对象\r\nfunction assignVM(vm, firstSource) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n        var nextSource = arguments[i];\r\n        if (nextSource && typeof nextSource !== \"object\")\r\n            continue;\r\n        for (var j in vm) {\r\n            if (vm.hasOwnProperty(j) && nextSource.hasOwnProperty(j)) {\r\n                vm[j] = nextSource[j];\r\n            }\r\n        }\r\n    }\r\n    return vm;\r\n}\r\n/**\r\n * 转换数据为表格源数据\r\n * @param {} data 待转换的数据\r\n * @param {} target 目标表格vm\r\n * @returns {} 转换完的数据\r\n */\r\ntoDatagridData = function (data, target) {\r\n    //return target ? datagridData(data, function () { target.selected.push(false) }) : datagridData(data);\r\n    return datagridData(data, target ? function () {\r\n        target.selected.push(false);\r\n    } : null);\r\n}\r\n\r\n/**\r\n * 转换为数据表格数据\r\n * @param {} data 原数据\r\n * @param {} callback 回调函数\r\n * @returns {} 新数据\r\n */\r\ndatagridData = function (data, callback) {\r\n    var hasCallback = false;\r\n    typeof callback === \"function\" && (hasCallback = true);\r\n    avalon.each(data, function (i, val) {\r\n        val.$tableChildVM = {};\r\n        val.selected = false;\r\n        if (hasCallback) callback.call(val, i);\r\n    });\r\n    return data;\r\n}\r\n\r\nMcAvalon.global = {}; //存放全局变量\r\n\r\nroot = avalon.define({ //存放全局变量,可双向绑定\r\n    $id: \"app\"\r\n});\r\n\r\n/**\r\n * 辅助selectbox点击收拢\r\n */\r\n$(document).on(\"click\", function () {\r\n    if (McAvalon.global.selectboxVm) {\r\n        avalon.each(McAvalon.global.selectboxVm, function (i, val) {\r\n            val.isOpen() && val.setState(false);\r\n        });\r\n    }\r\n});\r\n\r\n\r\n//shim\r\nwindow.console = window.console || (function () {\r\n    var c = {}; c.log = c.warn = c.debug = c.info = c.error = c.time = c.dir = c.profile = c.clear = c.exception = c.trace = c.assert = function () { };\r\n    return c;\r\n})();\r\n//#endregion\r\n\r\n//#region polyfill\r\n//author: meizz\r\n//对Date的扩展，将 Date 转化为指定格式的String\r\n//月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，\r\n//年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)\r\n//例子：\r\n//(new Date()).format(\"yyyy-MM-dd hh:mm:ss.S\") ==> 2006-07-02 08:09:04.423\r\n//(new Date()).format(\"yyyy-M-d h:m:s.S\")      ==> 2006-7-2 8:9:4.18\r\n//支持yyyyMMdd yyyy/MM/dd MM/dd/yyyy等\r\nDate.prototype.format = function (fmt) {\r\n    var o = {\r\n        \"M+\": this.getMonth() + 1,                 //月份\r\n        \"d+\": this.getDate(),                    //日\r\n        \"h+\": this.getHours(),                   //小时\r\n        \"m+\": this.getMinutes(),                 //分\r\n        \"s+\": this.getSeconds(),                 //秒\r\n        \"q+\": Math.floor((this.getMonth() + 3) / 3), //季度\r\n        \"S\": this.getMilliseconds()             //毫秒\r\n    };\r\n    if (/(y+)/.test(fmt))\r\n        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + \"\").substr(4 - RegExp.$1.length));\r\n    for (var k in o)\r\n        if (new RegExp(\"(\" + k + \")\").test(fmt))\r\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : ((\"00\" + o[k]).substr((\"\" + o[k]).length)));\r\n    return fmt;\r\n}\r\n\r\nString.prototype.trim = function () {\r\n    return this.replace(/(^\\s*)|(\\s*$)/g, '');\r\n}\r\nString.prototype.ltrim = function () {\r\n    return this.replace(/(^\\s*)/g, '');\r\n}\r\nString.prototype.rtrim = function () {\r\n    return this.replace(/(\\s*$)/g, '');\r\n}\r\nString.prototype.toDate = function () {\r\n    var str = this;\r\n    var dt = null;\r\n    try {\r\n        if (str.indexOf('-') != -1) {\r\n            dt = new Date(str.replace(/-/g, '/'));\r\n        } else if (str.indexOf('/') != -1) {\r\n            dt = new Date(str);\r\n        } else if (str.length == 8) {\r\n            dt = new Date(str.substr(0, 4) + '/' + str.substr(4, 2) + '/' + str.substr(6, 2));\r\n        } else if (str.length >= 14 && str.length <= 17) {\r\n            dt = new Date(str.substr(0, 4) + '/' + str.substr(4, 2) + '/' + str.substr(6, 2) + ' ' + str.substr(8, 2) + ':' + str.substr(10, 2) + ':' + str.substr(12, 2));\r\n        }\r\n    } catch (e) { }\r\n    return dt;\r\n}\r\n\r\nif (typeof Array.prototype.forEach != \"function\") {\r\n    Array.prototype.forEach = function (fn, context) {\r\n        for (var k = 0, length = this.length; k < length; k++) {\r\n            if (typeof fn === \"function\" && Object.prototype.hasOwnProperty.call(this, k)) {\r\n                fn.call(context, this[k], k, this);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nif (typeof Array.prototype.map != \"function\") {\r\n    Array.prototype.map = function (fn, context) {\r\n        var arr = [];\r\n        if (typeof fn === \"function\") {\r\n            for (var k = 0, length = this.length; k < length; k++) {\r\n                arr.push(fn.call(context, this[k], k, this));\r\n            }\r\n        }\r\n        return arr;\r\n    };\r\n}\r\n\r\nif (typeof Array.prototype.filter != \"function\") {\r\n    Array.prototype.filter = function (fn, context) {\r\n        var arr = [];\r\n        if (typeof fn === \"function\") {\r\n            for (var k = 0, length = this.length; k < length; k++) {\r\n                fn.call(context, this[k], k, this) && arr.push(this[k]);\r\n            }\r\n        }\r\n        return arr;\r\n    };\r\n}\r\n\r\nif (typeof Array.prototype.some != \"function\") {\r\n    Array.prototype.some = function (fn, context) {\r\n        var passed = false;\r\n        if (typeof fn === \"function\") {\r\n            for (var k = 0, length = this.length; k < length; k++) {\r\n                if (passed === true) break;\r\n                passed = !!fn.call(context, this[k], k, this);\r\n            }\r\n        }\r\n        return passed;\r\n    };\r\n}\r\n\r\nif (typeof Array.prototype.every != \"function\") {\r\n    Array.prototype.every = function (fn, context) {\r\n        var passed = true;\r\n        if (typeof fn === \"function\") {\r\n            for (var k = 0, length = this.length; k < length; k++) {\r\n                if (passed === false) break;\r\n                passed = !!fn.call(context, this[k], k, this);\r\n            }\r\n        }\r\n        return passed;\r\n    };\r\n}\r\n\r\nif (typeof Array.prototype.indexOf != \"function\") {\r\n    Array.prototype.indexOf = function (searchElement, fromIndex) {\r\n        var index = -1;\r\n        fromIndex = fromIndex * 1 || 0;\r\n\r\n        for (var k = 0, length = this.length; k < length; k++) {\r\n            if (k >= fromIndex && this[k] === searchElement) {\r\n                index = k;\r\n                break;\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n}\r\n\r\nif (typeof Array.prototype.lastIndexOf != \"function\") {\r\n    Array.prototype.lastIndexOf = function (searchElement, fromIndex) {\r\n        var index = -1, length = this.length;\r\n        fromIndex = fromIndex * 1 || length - 1;\r\n\r\n        for (var k = length - 1; k > -1; k -= 1) {\r\n            if (k <= fromIndex && this[k] === searchElement) {\r\n                index = k;\r\n                break;\r\n            }\r\n        }\r\n        return index;\r\n    };\r\n}\r\n\r\nif (typeof Array.prototype.reduce != \"function\") {\r\n    Array.prototype.reduce = function (callback, initialValue) {\r\n        var previous = initialValue, k = 0, length = this.length;\r\n        if (typeof initialValue === \"undefined\") {\r\n            previous = this[0];\r\n            k = 1;\r\n        }\r\n\r\n        if (typeof callback === \"function\") {\r\n            for (k; k < length; k++) {\r\n                this.hasOwnProperty(k) && (previous = callback(previous, this[k], k, this));\r\n            }\r\n        }\r\n        return previous;\r\n    };\r\n}\r\n\r\nif (typeof Array.prototype.reduceRight != \"function\") {\r\n    Array.prototype.reduceRight = function (callback, initialValue) {\r\n        var length = this.length, k = length - 1, previous = initialValue;\r\n        if (typeof initialValue === \"undefined\") {\r\n            previous = this[length - 1];\r\n            k--;\r\n        }\r\n        if (typeof callback === \"function\") {\r\n            for (k; k > -1; k -= 1) {\r\n                this.hasOwnProperty(k) && (previous = callback(previous, this[k], k, this));\r\n            }\r\n        }\r\n        return previous;\r\n    };\r\n}\r\n//#endregion\r\n\r\n; (function (McAvalon, $, undefined) {\r\n    \"use strict\";\r\n\r\n    //#region store\r\n    var emptyStore = null;\r\n    //mcStore 对象\r\n    function mcStore(idStore) {\r\n        //id的store\r\n        this.idStore = idStore || {};\r\n        //vm的store\r\n        this.vmStore = {};\r\n        //deferred的store\r\n        this.deferredStore = {};\r\n        for (var id in idStore) {\r\n            if (idStore.hasOwnProperty(id)) {\r\n                this.deferredStore[this.idStore[id]] = $.Deferred();\r\n            }\r\n        }\r\n    }\r\n\r\n    //创建store的方法\r\n    McAvalon.Store = function (idStore) {\r\n        var store = new mcStore(idStore);\r\n        McAvalon.$mcPageStore = store;\r\n        return store;\r\n    }\r\n\r\n    //获得一个空的sotre对象\r\n    McAvalon.EmptyStore = function () {\r\n        return emptyStore || (emptyStore = new mcStore({}));\r\n    }\r\n\r\n    //获取id\r\n    mcStore.prototype.getId = function (idkey) {\r\n        return this.idStore[idkey];\r\n    }\r\n\r\n    //获取vm\r\n    mcStore.prototype.getVm = function (idkey) {\r\n        return this.vmStore[this.idStore[idkey]];\r\n    }\r\n\r\n    //获取延迟对象\r\n    mcStore.prototype.getDeferred = function (idkey) {\r\n        console.log(this.idStore[idkey]);\r\n        return this.deferredStore[this.idStore[idkey]];\r\n    }\r\n\r\n    //组件注册\r\n    mcStore.prototype.regist = function (compVm) {\r\n        var curId = compVm.$id;\r\n        this.vmStore[curId] = compVm;\r\n        //暂不处理匿名注册情况\r\n        if (this.deferredStore[curId]) {\r\n            console.log(curId);\r\n            //注册成功\r\n            this.deferredStore[curId].resolve(compVm);\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n})(window.McAvalon || (window.McAvalon = {}), window.jQuery);\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/mc.base.js\n ** module id = 16\n ** module chunks = 0\n **/","//=========================================\r\n//  数据交互模块 by 司徒正美\r\n//  版本: 1.0.0\r\n//  最近更新: 2015/4/30\r\n//==========================================\r\ndefine([\"avalon\", \"mmPromise\"], function(avalon) {\r\n    var global = window\r\n    var DOC = global.document\r\n    var encode = encodeURIComponent\r\n    var decode = decodeURIComponent\r\n\r\n    var rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/\r\n    var rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)\\r?$/mg\r\n    var rnoContent = /^(?:GET|HEAD)$/\r\n    var rprotocol = /^\\/\\//\r\n    var rhash = /#.*$/\r\n    var rquery = /\\?/\r\n    var rjsonp = /(=)\\?(?=&|$)|\\?\\?/\r\n    var r20 = /%20/g\r\n    var radd = /\\+/g\r\n    var r5b5d = /%5B(.*?)%5D$/;\r\n\r\n    var originAnchor = document.createElement(\"a\")\r\n    originAnchor.href = location.href\r\n    //告诉WEB服务器自己接受什么介质类型，*/* 表示任何类型，type/* 表示该类型下的所有子类型，type/sub-type。\r\n    var accepts = {\r\n        xml: \"application/xml, text/xml\",\r\n        html: \"text/html\",\r\n        text: \"text/plain\",\r\n        json: \"application/json, text/javascript\",\r\n        script: \"text/javascript, application/javascript\",\r\n        \"*\": [\"*/\"] + [\"*\"] //避免被压缩掉\r\n    }\r\n\r\n    function IE() {\r\n        if (window.VBArray) {\r\n            var mode = document.documentMode\r\n            return mode ? mode : window.XMLHttpRequest ? 7 : 6\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n    var useOnload = IE() === 0 || IE() > 8\r\n\r\n    function parseJS(code) {\r\n        var indirect = eval\r\n        code = code.trim()\r\n        if (code) {\r\n            if (code.indexOf(\"use strict\") === 1) {\r\n                var script = document.createElement(\"script\")\r\n                script.text = code;\r\n                head.appendChild(script).parentNode.removeChild(script)\r\n            } else {\r\n                indirect(code)\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!String.prototype.startsWith) {\r\n        String.prototype.startsWith = function(searchString, position) {\r\n            position = position || 0;\r\n            return this.lastIndexOf(searchString, position) === position;\r\n        }\r\n    }\r\n\r\n    var head = DOC.getElementsByTagName(\"head\")[0] //HEAD元素\r\n    var isLocal = false\r\n    try {\r\n        //在IE下如果重置了document.domain，直接访问window.location会抛错，但用document.URL就ok了\r\n        //http://www.cnblogs.com/WuQiang/archive/2012/09/21/2697474.html\r\n        isLocal = rlocalProtocol.test(location.protocol)\r\n    } catch (e) {\r\n    }\r\n\r\n    new function() {\r\n        //http://www.cnblogs.com/rubylouvre/archive/2010/04/20/1716486.html\r\n        var s = [\"XMLHttpRequest\",\r\n            \"ActiveXObject('MSXML2.XMLHTTP.6.0')\",\r\n            \"ActiveXObject('MSXML2.XMLHTTP.3.0')\",\r\n            \"ActiveXObject('MSXML2.XMLHTTP')\",\r\n            \"ActiveXObject('Microsoft.XMLHTTP')\"\r\n        ]\r\n        s[0] = IE() < 8 && IE() !== 0 && isLocal ? \"!\" : s[0] //IE下只能使用ActiveXObject\r\n        for (var i = 0, axo; axo = s[i++];) {\r\n            try {\r\n                if (eval(\"new \" + axo)) {\r\n                    avalon.xhr = new Function(\"return new \" + axo)\r\n                    break;\r\n                }\r\n            } catch (e) {\r\n            }\r\n        }}\r\n    var supportCors = \"withCredentials\" in avalon.xhr()\r\n\r\n\r\n\r\n\r\n    function parseXML(data, xml, tmp) {\r\n        try {\r\n            var mode = document.documentMode\r\n            if (window.DOMParser && (!mode || mode > 8)) { // Standard\r\n                tmp = new DOMParser()\r\n                xml = tmp.parseFromString(data, \"text/xml\")\r\n            } else { // IE\r\n                xml = new ActiveXObject(\"Microsoft.XMLDOM\") //\"Microsoft.XMLDOM\"\r\n                xml.async = \"false\";\r\n                xml.loadXML(data)\r\n            }\r\n        } catch (e) {\r\n        xml = void  0\r\n        }\r\n        if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\r\n            avalon.error(\"Invalid XML: \" + data)\r\n        }\r\n        return xml\r\n    }\r\n\r\n    //ajaxExtend是一个非常重要的内部方法，负责将用法参数进行规整化\r\n    //1. data转换为字符串\r\n    //2. type转换为大写\r\n    //3. url正常化，加querystring, 加时间戮\r\n    //4. 判定有没有跨域\r\n    //5. 添加hasContent参数\r\n    var defaults = {\r\n        type: \"GET\",\r\n        contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\r\n        async: true,\r\n        jsonp: \"callback\"\r\n    }\r\n    function ajaxExtend(opts) {\r\n        opts = avalon.mix({}, defaults, opts)\r\n        opts.type = opts.type.toUpperCase()\r\n        var querystring = typeof opts.data === \"string\" ? opts.data : avalon.param(opts.data)\r\n        opts.querystring = querystring || \"\"\r\n        opts.url = opts.url.replace(rhash, \"\").replace(rprotocol, location.protocol + \"//\")\r\n\r\n        if (typeof opts.crossDomain !== \"boolean\") { //判定是否跨域\r\n            var urlAnchor = document.createElement(\"a\");\r\n            // Support: IE6-11+\r\n            // IE throws exception if url is malformed, e.g. http://example.com:80x/\r\n            try {\r\n                urlAnchor.href = opts.url;\r\n                // in IE7-, get the absolute path\r\n                var absUrl = !\"1\"[0] ? urlAnchor.getAttribute(\"href\", 4) : urlAnchor.href;\r\n                urlAnchor.href = absUrl\r\n                opts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\r\n            } catch (e) {\r\n            opts.crossDomain = true;\r\n            }\r\n        }\r\n        opts.hasContent = !rnoContent.test(opts.type) //是否为post请求\r\n        if (!opts.hasContent) {\r\n            if (querystring) { //如果为GET请求,则参数依附于url上\r\n                opts.url += (rquery.test(opts.url) ? \"&\" : \"?\") + querystring;\r\n            }\r\n            if (opts.cache === false) { //添加时间截\r\n                opts.url += (rquery.test(opts.url) ? \"&\" : \"?\") + \"_time=\" + (new Date() - 0)\r\n            }\r\n        }\r\n        return opts;\r\n    }\r\n    /**\r\n     * 伪XMLHttpRequest类,用于屏蔽浏览器差异性\r\n     * var ajax = new(self.XMLHttpRequest||ActiveXObject)(\"Microsoft.XMLHTTP\")\r\n     * ajax.onreadystatechange = function(){\r\n     *   if (ajax.readyState==4 && ajax.status==200){\r\n     *        alert(ajax.responseText)\r\n     *   }\r\n     * }\r\n     * ajax.open(\"POST\", url, true) \r\n     * ajax.send(\"key=val&key1=val2\") \r\n     */\r\n    var XHRMethods = {\r\n        setRequestHeader: function(name, value) {\r\n            this.requestHeaders[name] = value;\r\n            return this;\r\n        },\r\n        getAllResponseHeaders: function() {\r\n            return this.readyState === 4 ? this.responseHeadersString : null;\r\n        },\r\n        getResponseHeader: function(name, match) {\r\n            if (this.readyState === 4) {\r\n                while ((match = rheaders.exec(this.responseHeadersString))) {\r\n                    this.responseHeaders[match[1]] = match[2];\r\n                }\r\n                match = this.responseHeaders[name];\r\n            }\r\n            return match === undefined ? null : match;\r\n        },\r\n        overrideMimeType: function(type) {\r\n            this.mimeType = type;\r\n            return this;\r\n        },\r\n        // 中止请求\r\n        abort: function(statusText) {\r\n            statusText = statusText || \"abort\";\r\n            if (this.transport) {\r\n                this.respond(0, statusText)\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * 用于派发success,error,complete等回调\r\n         * http://www.cnblogs.com/rubylouvre/archive/2011/05/18/2049989.html\r\n         * @param {Number} status 状态码\r\n         * @param {String} statusText 对应的扼要描述\r\n         */\r\n        dispatch: function(status, nativeStatusText) {\r\n            var statusText = nativeStatusText\r\n            // 只能执行一次，防止重复执行\r\n            if (!this.transport) { //2:已执行回调\r\n                return\r\n            }\r\n            this.readyState = 4\r\n            var isSuccess = status >= 200 && status < 300 || status === 304\r\n            if (isSuccess) {\r\n                if (status === 204) {\r\n                    statusText = \"nocontent\"\r\n                } else if (status === 304) {\r\n                    statusText = \"notmodified\"\r\n                } else {\r\n                    //如果浏览器能直接返回转换好的数据就最好不过,否则需要手动转换\r\n                    if (typeof this.response === \"undefined\") {\r\n                        var dataType = this.options.dataType || this.options.mimeType\r\n                        if (!dataType && this.responseText || this.responseXML) { //如果没有指定dataType，则根据mimeType或Content-Type进行揣测\r\n                            dataType = this.getResponseHeader(\"Content-Type\") || \"\"\r\n                            dataType = dataType.match(/json|xml|script|html/i) || [\"text\"]\r\n                            dataType = dataType[0].toLowerCase()\r\n                        }\r\n                        var responseText = this.responseText || '',\r\n                            responseXML = this.responseXML || ''\r\n                        try {\r\n                            this.response = avalon.ajaxConverters[dataType].call(this, responseText, responseXML)\r\n                        } catch (e) {\r\n                        isSuccess = false\r\n                        this.error = e\r\n                        statusText = \"parsererror\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.status = status;\r\n            this.statusText = statusText + \"\"\r\n            if (this.timeoutID) {\r\n                clearTimeout(this.timeoutID)\r\n                delete this.timeoutID\r\n            }\r\n            this._transport = this.transport\r\n\r\n            /**\r\n             * global event handler\r\n             */\r\n            var that = this\r\n\r\n            // 到这要么成功，调用success, 要么失败，调用 error, 最终都会调用 complete\r\n            if (isSuccess) {\r\n                this._resolve([this.response, statusText, this])\r\n                /**\r\n                 * global event handler\r\n                 */\r\n                window.setTimeout(function() {\r\n                    avalon.ajaxGlobalEvents.success(that, that.options, that.response)\r\n                }, 0)\r\n            } else {\r\n                this._reject([this, statusText, this.error])\r\n                /**\r\n                 * global event handler\r\n                 */\r\n                window.setTimeout(function() {\r\n                    avalon.ajaxGlobalEvents.error(that, that.options, statusText)\r\n                }, 0)\r\n            }\r\n            delete this.transport\r\n\r\n            /**\r\n             * global event handler\r\n             */\r\n            ajaxActive--\r\n\r\n            window.setTimeout(function() {\r\n                avalon.ajaxGlobalEvents.complete(that, that.options)\r\n            }, 0)\r\n\r\n            if (ajaxActive === 0) {\r\n                // 最后一个\r\n                window.setTimeout(function() {\r\n                    avalon.ajaxGlobalEvents.stop()\r\n                }, 0)\r\n            }\r\n\r\n        }\r\n    }\r\n    /**\r\n     * global event handler\r\n     */\r\n    // 记录当前活跃的 ajax 数\r\n    var ajaxActive = 0\r\n\r\n    //ajax主函数\r\n    avalon.ajax = function(opts, promise) {\r\n        if (!opts || !opts.url) {\r\n            avalon.error(\"参数必须为Object并且拥有url属性\")\r\n        }\r\n        opts = ajaxExtend(opts) //处理用户参数，比如生成querystring, type大写化\r\n        //创建一个伪XMLHttpRequest,能处理complete,success,error等多投事件\r\n        var XHRProperties = {\r\n            responseHeadersString: \"\",\r\n            responseHeaders: {},\r\n            requestHeaders: {},\r\n            querystring: opts.querystring,\r\n            readyState: 0,\r\n            uniqueID: (\"\" + Math.random()).replace(/0\\./, \"\"),\r\n            status: 0\r\n        }\r\n        var _reject, _resolve\r\n        var promise = new avalon.Promise(function(resolve, reject) {\r\n            _resolve = resolve\r\n            _reject = reject\r\n        })\r\n\r\n        promise.options = opts\r\n        promise._reject = _reject\r\n        promise._resolve = _resolve\r\n\r\n        var doneList = [],\r\n            failList = []\r\n\r\n        Array(\"done\", \"fail\", \"always\").forEach(function(method) {\r\n            promise[method] = function(fn) {\r\n                if (typeof fn === \"function\") {\r\n                    if (method !== \"fail\")\r\n                        doneList.push(fn)\r\n                    if (method !== \"done\")\r\n                        failList.push(fn)\r\n                }\r\n                return this\r\n            }\r\n        })\r\n\r\n        var isSync = opts.async === false\r\n        if (isSync) {\r\n            avalon.log(\"warnning:与jquery1.8一样,async:false这配置已经被废弃\")\r\n            promise.async = false\r\n        }\r\n\r\n\r\n        avalon.mix(promise, XHRProperties, XHRMethods)\r\n\r\n        promise.then(function(value) {\r\n            value = Array.isArray(value) ? value : value === void 0 ? [] : [value]\r\n            for (var i = 0, fn; fn = doneList[i++];) {\r\n                fn.apply(promise, value)\r\n            }\r\n            return value\r\n        }, function(value) {\r\n            value = Array.isArray(value) ? value : value === void 0 ? [] : [value]\r\n            for (var i = 0, fn; fn = failList[i++];) {\r\n                fn.apply(promise, value)\r\n            }\r\n            return value\r\n        })\r\n\r\n\r\n        promise.done(opts.success).fail(opts.error).always(opts.complete)\r\n\r\n        var dataType = opts.dataType //目标返回数据类型\r\n        var transports = avalon.ajaxTransports\r\n\r\n        if ((opts.crossDomain && !supportCors || rjsonp.test(opts.url)) && dataType === \"json\" && opts.type === \"GET\") {\r\n            dataType = opts.dataType = \"jsonp\"\r\n        }\r\n        var name = opts.form ? \"upload\" : dataType\r\n        var transport = transports[name] || transports.xhr\r\n        avalon.mix(promise, transport) //取得传送器的request, respond, preproccess\r\n        if (promise.preproccess) { //这用于jsonp upload传送器\r\n            dataType = promise.preproccess() || dataType\r\n        }\r\n        //设置首部 1、Content-Type首部\r\n        if (opts.contentType) {\r\n            promise.setRequestHeader(\"Content-Type\", opts.contentType)\r\n        }\r\n        //2.处理Accept首部\r\n        promise.setRequestHeader(\"Accept\", accepts[dataType] ? accepts[dataType] + \", */*; q=0.01\" : accepts[\"*\"])\r\n        for (var i in opts.headers) { //3. 处理headers里面的首部\r\n            promise.setRequestHeader(i, opts.headers[i])\r\n        }\r\n        // 4.处理超时\r\n        if (opts.async && opts.timeout > 0) {\r\n            promise.timeoutID = setTimeout(function() {\r\n                promise.abort(\"timeout\")\r\n                promise.dispatch(0, \"timeout\")\r\n            }, opts.timeout)\r\n        }\r\n\r\n        /**\r\n         * global event handler\r\n         */\r\n        if (ajaxActive === 0) {\r\n            // 第一个\r\n            avalon.ajaxGlobalEvents.start()\r\n        }\r\n        avalon.ajaxGlobalEvents.send(promise, opts)\r\n        ajaxActive++\r\n\r\n\r\n\r\n        promise.request()\r\n        return promise\r\n    };\r\n    \"get,post\".replace(avalon.rword, function(method) {\r\n        avalon[method] = function(url, data, callback, type) {\r\n            if (typeof data === \"function\") {\r\n                type = type || callback\r\n                callback = data\r\n                data = void 0\r\n            }\r\n            return avalon.ajax({\r\n                type: method,\r\n                url: url,\r\n                data: data,\r\n                success: callback,\r\n                dataType: type\r\n            })\r\n        };\r\n    })\r\n    function ok(val) {\r\n        return val\r\n    }\r\n    function ng(e) {\r\n        throw e\r\n    }\r\n    avalon.getScript = function(url, callback) {\r\n        return avalon.get(url, null, callback, \"script\")\r\n    }\r\n    avalon.getJSON = function(url, data, callback) {\r\n        return avalon.get(url, data, callback, \"json\")\r\n    }\r\n    avalon.upload = function(url, form, data, callback, dataType) {\r\n        if (typeof data === \"function\") {\r\n            dataType = callback;\r\n            callback = data;\r\n            data = void 0;\r\n        }\r\n        return avalon.ajax({\r\n            url: url,\r\n            type: \"post\",\r\n            dataType: dataType,\r\n            form: form,\r\n            data: data,\r\n            success: callback\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * global event handler\r\n     */\r\n    avalon.ajaxGlobalEvents = {};\r\n\r\n    [\"start\", \"stop\", \"complete\", \"error\", \"success\", \"send\"].forEach(function(method) {\r\n        avalon.ajaxGlobalEvents[method] = avalon.noop\r\n    })\r\n\r\n    avalon.ajaxConverters = { //转换器，返回用户想要做的数据\r\n        text: function(text) {\r\n            // return text || \"\";\r\n            return text;\r\n        },\r\n        xml: function(text, xml) {\r\n            return xml !== void 0 ? xml : parseXML(text)\r\n        },\r\n        html: function(text) {\r\n            return avalon.parseHTML(text) //一个文档碎片,方便直接插入DOM树\r\n        },\r\n        json: function(text) {\r\n            if (!avalon.parseJSON) {\r\n                avalon.log(\"avalon.parseJSON不存在,请升级到最新版\")\r\n            }\r\n            return avalon.parseJSON(text)\r\n        },\r\n        script: function(text) {\r\n            parseJS(text)\r\n            return text;\r\n        },\r\n        jsonp: function() {\r\n            var json, callbackName;\r\n            if (this.jsonpCallback.startsWith('avalon.')) {\r\n                callbackName = this.jsonpCallback.replace(/avalon\\./, '')\r\n                json = avalon[callbackName]\r\n                delete avalon[callbackName]\r\n            } else {\r\n                json = window[this.jsonpCallback]\r\n            }\r\n            return json;\r\n        }\r\n    }\r\n\r\n    var rbracket = /\\[\\]$/\r\n    avalon.param = function(obj) {\r\n        var prefix,\r\n            s = [],\r\n            add = function(key, value) {\r\n                // If value is a function, invoke it and return its value\r\n                value = typeof value === \"function\" ? value() : (value == null ? \"\" : value);\r\n                s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\r\n        }\r\n        // 处理数组与类数组的jquery对象\r\n        if (Array.isArray(obj)) {\r\n            // Serialize the form elements\r\n            avalon.each(obj, add)\r\n\r\n        } else {\r\n            for (prefix in obj) {\r\n                paramInner(prefix, obj[prefix], add);\r\n            }\r\n        }\r\n\r\n        // Return the resulting serialization\r\n        return s.join(\"&\").replace(r20, \"+\");\r\n    }\r\n\r\n    function paramInner(prefix, obj, add) {\r\n        var name;\r\n        if (Array.isArray(obj)) {\r\n            // Serialize array item.\r\n            avalon.each(obj, function(i, v) {\r\n                if (rbracket.test(prefix)) {\r\n                    // Treat each array item as a scalar.\r\n                    add(prefix, v);\r\n                } else {\r\n                    // Item is non-scalar (array or object), encode its numeric index.\r\n                    paramInner(\r\n                        prefix + \"[\" + (typeof v === \"object\" ? i : \"\") + \"]\",\r\n                        v,\r\n                        add);\r\n                }\r\n            });\r\n        } else if (avalon.isPlainObject(obj)) {\r\n            // Serialize object item.\r\n            for (name in obj) {\r\n                paramInner(prefix + \"[\" + name + \"]\", obj[name], add);\r\n            }\r\n\r\n        } else {\r\n            // Serialize scalar item.\r\n            add(prefix, obj);\r\n        }\r\n    }\r\n    //将一个字符串转换为对象\r\n    function tryDecodeURIComponent(value) {\r\n        try {\r\n            return decodeURIComponent(value);\r\n        } catch (e) {\r\n        return value\r\n        }\r\n    }\r\n\r\n\r\n    //a%5B0%5D%5Bvalue%5D a%5B1%5D%5B%5D\r\n    function addSubObject(host, text, value) {\r\n        var match = text.match(r5b5d)\r\n        if (!match) {\r\n            return true\r\n        }\r\n\r\n        var steps = []\r\n        var first = true\r\n        var step, index, key\r\n        while (index = text.lastIndexOf(\"%5B\")) {\r\n            if (index === -1) {\r\n                break\r\n            }\r\n            key = text.slice(index).slice(3, -3)\r\n            text = text.slice(0, index)\r\n            if (key === \"\") {\r\n                steps.unshift({\r\n                    action: \"pushArrayElement\"\r\n                })\r\n            } else if ((key >>> 0) + \"\" === key) {\r\n                steps.unshift({\r\n                    action: \"setSubArray\",\r\n                    value: key\r\n                })\r\n            } else {\r\n                if (first) {\r\n                    steps.unshift({\r\n                        action: \"setObjectProperty\",\r\n                        value: tryDecodeURIComponent(key)\r\n                    })\r\n                } else {\r\n                    steps.unshift({\r\n                        action: \"setSubObjet\",\r\n                        value: tryDecodeURIComponent(key)\r\n                    })\r\n                }\r\n            }\r\n            first = false\r\n        }\r\n        first = true\r\n        while (step = steps.shift()) {\r\n            var isObject = /Object/.test(step.action)\r\n            if (first) {\r\n                if (!(text in host)) {\r\n                    host[text] = isObject ? {} : []\r\n                }\r\n                first = false\r\n                host = host[text]\r\n            }\r\n            switch (step.action) {\r\n                case \"pushArrayElement\":\r\n                    host.push(value)\r\n                    break\r\n                case \"setObjectProperty\":\r\n                    host[step.value] = value\r\n                    break\r\n                case \"setSubObjet\":\r\n                    if (!(step.value in host)) {\r\n                        host[step.value] = {}\r\n                    }\r\n                    host = host[step.value]\r\n                    break\r\n                case \"setSubArray\":\r\n                    if (!(step.value in host)) {\r\n                        host[step.value] = []\r\n                    }\r\n                    host = host[step.value]\r\n                    break\r\n            }\r\n        }\r\n    }\r\n    //  function add\r\n    avalon.unparam = function(qs, sep, eq) {\r\n        sep = sep || '&';\r\n        eq = eq || '=';\r\n        var obj = {};\r\n        if ((typeof qs !== \"string\") || qs.length === 0) {\r\n            return obj;\r\n        }\r\n        if (qs.indexOf(\"?\") !== -1) {\r\n            qs = qs.split(\"?\").pop()\r\n        }\r\n        var array = qs.split(sep);\r\n        for (var i = 0, el; el = array[i++];) {\r\n            var arr = el.split(\"=\")\r\n            if (arr.length === 1) { //处理只有键名没键值的情况\r\n                obj[arr[0]] = \"\"\r\n            } else {\r\n                var key = arr[0].replace(radd, '%20')\r\n                var v = tryDecodeURIComponent(arr.slice(1).join(\"=\").replace(radd, ' '));\r\n                if (addSubObject(obj, key, v)) { //处理存在中括号的情况\r\n                    var k = tryDecodeURIComponent(key) //处理不存在中括号的简单的情况\r\n                    if (!Object.prototype.hasOwnProperty.call(obj, k)) {\r\n                        obj[k] = v;\r\n                    } else if (Array.isArray(obj[k])) {\r\n                        obj[k].push(v);\r\n                    } else {\r\n                        obj[k] = [obj[k], v];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return obj\r\n    }\r\n    var rinput = /select|input|button|textarea/i\r\n    var rcheckbox = /radio|checkbox/\r\n    var rline = /\\r?\\n/g\r\n    function trimLine(val) {\r\n        return val.replace(rline, \"\\r\\n\")\r\n    }\r\n    //表单元素变字符串, form为一个元素节点\r\n    avalon.serialize = function(form) {\r\n        var json = {};\r\n        // 不直接转换form.elements，防止以下情况：   <form > <input name=\"elements\"/><input name=\"test\"/></form>\r\n        Array.prototype.filter.call(form.getElementsByTagName(\"*\"), function(el) {\r\n            if (rinput.test(el.nodeName) && el.name && !el.disabled) {\r\n                return rcheckbox.test(el.type) ? el.checked : true //只处理拥有name并且没有disabled的表单元素\r\n            }\r\n        }).forEach(function(el) {\r\n            var val = avalon(el).val()\r\n            val = Array.isArray(val) ? val.map(trimLine) : trimLine(val)\r\n            var name = el.name\r\n            if (name in json) {\r\n                if (Array.isArray(val)) {\r\n                    json[name].push(val)\r\n                } else {\r\n                    json[name] = [json[name], val]\r\n                }\r\n            } else {\r\n                json[name] = val\r\n            }\r\n        })\r\n        return avalon.param(json, false) // 名值键值对序列化,数组元素名字前不加 []\r\n    }\r\n\r\n    var transports = avalon.ajaxTransports = {\r\n        xhr: {\r\n            //发送请求\r\n            request: function() {\r\n                var self = this;\r\n                var opts = this.options;\r\n                var transport = this.transport = new avalon.xhr;\r\n                transport.open(opts.type, opts.url, opts.async, opts.username, opts.password)\r\n                if (this.mimeType && transport.overrideMimeType) {\r\n                    transport.overrideMimeType(this.mimeType)\r\n                }\r\n                //IE6下，如果transport中没有withCredentials，直接设置会报错\r\n                if (opts.crossDomain && \"withCredentials\" in transport) {\r\n                    transport.withCredentials = true\r\n                }\r\n\r\n                /*\r\n                 * header 中设置 X-Requested-With 用来给后端做标示：\r\n                 * 这是一个 ajax 请求。\r\n                 *\r\n                 * 在 Chrome、Firefox 3.5+ 和 Safari 4+ 下，\r\n                 * 在进行跨域请求时设置自定义 header，会触发 preflighted requests，\r\n                 * 会预先发送 method 为 OPTIONS 的请求。\r\n                 *\r\n                 * 于是，如果跨域，禁用此功能。\r\n                 */\r\n                if (!opts.crossDomain) {\r\n                    this.requestHeaders[\"X-Requested-With\"] = \"XMLHttpRequest\"\r\n                }\r\n\r\n                for (var i in this.requestHeaders) {\r\n                    transport.setRequestHeader(i, this.requestHeaders[i] + \"\")\r\n                }\r\n\r\n                /*\r\n                 * progress\r\n                 */\r\n                if (opts.progressCallback) {\r\n                    // 判断是否 ie6-9\r\n                    var isOldIE = document.all && !window.atob;\r\n                    if (!isOldIE) {\r\n                        transport.upload.onprogress = opts.progressCallback\r\n                    }\r\n                }\r\n\r\n                var dataType = opts.dataType\r\n                if (\"responseType\" in transport && /^(blob|arraybuffer|text)$/.test(dataType)) {\r\n                    transport.responseType = dataType\r\n                    this.useResponseType = true\r\n                }\r\n                //必须要支持 FormData 和 file.fileList 的浏览器 才能用 xhr 发送\r\n                //标准规定的 multipart/form-data 发送必须用 utf-8 格式， 记得 ie 会受到 document.charset 的影响\r\n                transport.send(opts.hasContent && (this.formdata || this.querystring) || null)\r\n                //在同步模式中,IE6,7可能会直接从缓存中读取数据而不会发出请求,因此我们需要手动发出请求\r\n\r\n                if (!opts.async || transport.readyState === 4) {\r\n                    this.respond()\r\n                } else {\r\n                    if (useOnload) { //如果支持onerror, onload新API\r\n                        transport.onload = transport.onerror = function(e) {\r\n                            this.readyState = 4 //IE9+\r\n                            this.status = e.type === \"load\" ? 200 : 500\r\n                            self.respond()\r\n                        }\r\n                    } else {\r\n                        transport.onreadystatechange = function() {\r\n                            self.respond()\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            //用于获取原始的responseXMLresponseText 修正status statusText\r\n            //第二个参数为1时中止清求\r\n            respond: function(event, forceAbort) {\r\n                var transport = this.transport\r\n                if (!transport) {\r\n                    return\r\n                }\r\n                // by zilong：避免abort后还继续派发onerror等事件\r\n                if (forceAbort && this.timeoutID) {\r\n                    clearTimeout(this.timeoutID);\r\n                    delete this.timeoutID\r\n                }\r\n                try {\r\n                    var completed = transport.readyState === 4\r\n                    if (forceAbort || completed) {\r\n                        transport.onreadystatechange = avalon.noop\r\n                        if (useOnload) { //IE6下对XHR对象设置onerror属性可能报错\r\n                            transport.onerror = transport.onload = null\r\n                        }\r\n                        if (forceAbort) {\r\n                            if (!completed && typeof transport.abort === \"function\") { // 完成以后 abort 不要调用\r\n                                transport.abort()\r\n                            }\r\n                        } else {\r\n                            var status = transport.status\r\n                            //设置responseText\r\n                            var text = transport.responseText\r\n\r\n                            this.responseText = typeof text === \"string\" ? text : void 0\r\n                            //设置responseXML\r\n                            try {\r\n                                //当responseXML为[Exception: DOMException]时，\r\n                                //访问它会抛“An attempt was made to use an object that is not, or is no longer, usable”异常\r\n                                var xml = transport.responseXML\r\n                                this.responseXML = xml.documentElement\r\n                            } catch (e) {\r\n                            }\r\n                            //设置response\r\n                            if (this.useResponseType) {\r\n                                this.response = transport.response\r\n                            }\r\n                            //设置responseHeadersString\r\n                            this.responseHeadersString = transport.getAllResponseHeaders()\r\n\r\n                            try { //火狐在跨城请求时访问statusText值会抛出异常\r\n                                var statusText = transport.statusText\r\n                            } catch (e) {\r\n                            this.error = e\r\n                            statusText = \"firefoxAccessError\"\r\n                            }\r\n                            //用于处理特殊情况,如果是一个本地请求,只要我们能获取数据就假当它是成功的\r\n                            if (!status && isLocal && !this.options.crossDomain) {\r\n                                status = this.responseText ? 200 : 404\r\n                            //IE有时会把204当作为1223\r\n                            } else if (status === 1223) {\r\n                                status = 204\r\n                            }\r\n                            this.dispatch(status, statusText)\r\n                        }\r\n                    }\r\n                } catch (err) {\r\n                // 如果网络问题时访问XHR的属性，在FF会抛异常\r\n                // http://helpful.knobs-dials.com/index.php/Component_returned_failure_code:_0x80040111_(NS_ERROR_NOT_AVAILABLE)\r\n                if (!forceAbort) {\r\n                this.dispatch(500, err)\r\n                }\r\n                }\r\n            }\r\n        },\r\n        jsonp: {\r\n            preproccess: function() {\r\n                var opts = this.options;\r\n                var name = this.jsonpCallback = opts.jsonpCallback || \"avalon.jsonp\" + setTimeout(\"1\")\r\n                if (rjsonp.test(opts.url)) {\r\n                    opts.url = opts.url.replace(rjsonp, \"$1\" + name)\r\n                } else {\r\n                    opts.url = opts.url + (rquery.test(opts.url) ? \"&\" : \"?\") + opts.jsonp + \"=\" + name\r\n                }\r\n                //将后台返回的json保存在惰性函数中\r\n                if (name.startsWith('avalon.')) {\r\n                    name = name.replace(/avalon\\./, '')\r\n                    avalon[name] = function(json) {\r\n                        avalon[name] = json\r\n                    }\r\n                } else {\r\n                    window[name] = function(json) {\r\n                        window[name] = json\r\n                    }\r\n                }\r\n                return \"script\"\r\n            }\r\n        },\r\n        script: {\r\n            request: function() {\r\n                var opts = this.options;\r\n                var node = this.transport = DOC.createElement(\"script\")\r\n                if (opts.charset) {\r\n                    node.charset = opts.charset\r\n                }\r\n                var self = this;\r\n                node.onerror = node[useOnload ? \"onload\" : \"onreadystatechange\"] = function() {\r\n                    self.respond()\r\n                };\r\n                node.src = opts.url\r\n                head.insertBefore(node, head.firstChild)\r\n            },\r\n            respond: function(event, forceAbort) {\r\n                var node = this.transport\r\n                if (!node) {\r\n                    return\r\n                }\r\n                // by zilong：避免abort后还继续派发onerror等事件\r\n                if (forceAbort && this.timeoutID) {\r\n                    clearTimeout(this.timeoutID);\r\n                    delete this.timeoutID\r\n                }\r\n                var execute = /loaded|complete|undefined/i.test(node.readyState)\r\n                if (forceAbort || execute) {\r\n                    node.onerror = node.onload = node.onreadystatechange = null\r\n                    var parent = node.parentNode;\r\n                    if (parent) {\r\n                        parent.removeChild(node)\r\n                    }\r\n                    if (!forceAbort) {\r\n                        var args;\r\n                        if (this.jsonpCallback) {\r\n                            var jsonpCallback = this.jsonpCallback.startsWith('avalon.') ? avalon[this.jsonpCallback.replace(/avalon\\./, '')] : window[this.jsonpCallback]\r\n                            args = typeof jsonpCallback === \"function\" ? [500, \"error\"] : [200, \"success\"]\r\n                        } else {\r\n                            args = [200, \"success\"]\r\n                        }\r\n\r\n                        this.dispatch.apply(this, args)\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        upload: {\r\n            preproccess: function() {\r\n                var opts = this.options, formdata\r\n                if (typeof opts.form.append === \"function\") { //简单判断opts.form是否为FormData\r\n                    formdata = opts.form;\r\n                    opts.contentType = '';\r\n                } else {\r\n                    formdata = new FormData(opts.form) //将二进制什么一下子打包到formdata\r\n                }\r\n                avalon.each(opts.data, function(key, val) {\r\n                    formdata.append(key, val) //添加客外数据\r\n                })\r\n                this.formdata = formdata\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    avalon.mix(transports.jsonp, transports.script)\r\n    avalon.mix(transports.upload, transports.xhr)\r\n\r\n    if (!window.FormData) {\r\n        var str = 'Function BinaryToArray(binary)\\r\\n\\\r\n                 Dim oDic\\r\\n\\\r\n                 Set oDic = CreateObject(\"scripting.dictionary\")\\r\\n\\\r\n                 length = LenB(binary) - 1\\r\\n\\\r\n                 For i = 1 To length\\r\\n\\\r\n                     oDic.add i, AscB(MidB(binary, i, 1))\\r\\n\\\r\n                 Next\\r\\n\\\r\n                 BinaryToArray = oDic.Items\\r\\n\\\r\n              End Function'\r\n        execScript(str, \"VBScript\");\r\n        avalon.fixAjax = function() {\r\n            avalon.ajaxConverters.arraybuffer = function() {\r\n                var body = this.tranport && this.tranport.responseBody\r\n                if (body) {\r\n                    return new VBArray(BinaryToArray(body)).toArray();\r\n                }\r\n            };\r\n            function createIframe(ID) {\r\n                var iframe = avalon.parseHTML(\"<iframe \" + \" id='\" + ID + \"'\" +\r\n                    \" name='\" + ID + \"'\" + \" style='position:absolute;left:-9999px;top:-9999px;'/>\").firstChild;\r\n                return (DOC.body || DOC.documentElement).insertBefore(iframe, null);\r\n            }\r\n            function addDataToForm(form, data) {\r\n                var ret = [],\r\n                    d, isArray, vs, i, e;\r\n                for (d in data) {\r\n                    isArray = Array.isArray(data[d]);\r\n                    vs = isArray ? data[d] : [data[d]];\r\n                    // 数组和原生一样对待，创建多个同名输入域\r\n                    for (i = 0; i < vs.length; i++) {\r\n                        e = DOC.createElement(\"input\");\r\n                        e.type = 'hidden';\r\n                        e.name = d;\r\n                        e.value = vs[i];\r\n                        form.appendChild(e);\r\n                        ret.push(e);\r\n                    }\r\n                }\r\n                return ret;\r\n            }\r\n            //https://github.com/codenothing/Pure-Javascript-Upload/blob/master/src/upload.js\r\n            avalon.ajaxTransports.upload = {\r\n                request: function() {\r\n                    var self = this;\r\n                    var opts = this.options;\r\n                    var ID = \"iframe-upload-\" + this.uniqueID;\r\n                    var form = opts.form;\r\n                    var iframe = this.transport = createIframe(ID);\r\n                    //form.enctype的值\r\n                    //1:application/x-www-form-urlencoded   在发送前编码所有字符（默认）\r\n                    //2:multipart/form-data 不对字符编码。在使用包含文件上传控件的表单时，必须使用该值。\r\n                    //3:text/plain  空格转换为 \"+\" 加号，但不对特殊字符编码。\r\n                    var backups = {\r\n                        target: form.target || \"\",\r\n                        action: form.action || \"\",\r\n                        enctype: form.enctype,\r\n                        method: form.method\r\n                    };\r\n                    var fields = opts.data ? addDataToForm(form, opts.data) : [];\r\n                    //必须指定method与enctype，要不在FF报错\r\n                    //表单包含文件域时，如果缺少 method=POST 以及 enctype=multipart/form-data，\r\n                    // 设置target到隐藏iframe，避免整页刷新\r\n                    form.target = ID;\r\n                    form.action = opts.url;\r\n                    form.method = \"POST\";\r\n                    form.enctype = \"multipart/form-data\";\r\n                    this.uploadcallback = avalon.bind(iframe, \"load\", function(event) {\r\n                        self.respond(event);\r\n                    });\r\n                    form.submit();\r\n                    //还原form的属性\r\n                    for (var i in backups) {\r\n                        form[i] = backups[i];\r\n                    }\r\n                    //移除之前动态添加的节点\r\n                    fields.forEach(function(input) {\r\n                        form.removeChild(input);\r\n                    });\r\n                },\r\n                respond: function(event) {\r\n                    var node = this.transport, child\r\n                    // 防止重复调用,成功后 abort\r\n                    if (!node) {\r\n                        return;\r\n                    }\r\n                    if (event && event.type === \"load\") {\r\n                        var doc = node.contentWindow.document;\r\n                        this.responseXML = doc;\r\n                        if (doc.body) { //如果存在body属性,说明不是返回XML\r\n                            this.responseText = doc.body.innerHTML;\r\n                            //当MIME为'application/javascript' 'text/javascript\",浏览器会把内容放到一个PRE标签中\r\n                            if ((child = doc.body.firstChild) && child.nodeName.toUpperCase() === 'PRE' && child.firstChild) {\r\n                                this.responseText = child.firstChild.nodeValue;\r\n                            }\r\n                        }\r\n                        this.dispatch(200, \"success\");\r\n                    }\r\n                    this.uploadcallback = avalon.unbind(node, \"load\", this.uploadcallback);\r\n                    delete this.uploadcallback;\r\n                    setTimeout(function() { // Fix busy state in FF3\r\n                        node.parentNode.removeChild(node);\r\n                    });\r\n                }\r\n            };\r\n            delete avalon.fixAjax;\r\n        };\r\n        avalon.fixAjax()\r\n    }\r\n    return avalon\r\n})\r\n/**\r\n * \r\n 2011.8.31\r\n 将会传送器的abort方法上传到avalon.XHR.abort去处理\r\n 修复serializeArray的bug\r\n 对XMLHttpRequest.abort进行try...catch\r\n 2012.3.31 v2 大重构,支持XMLHttpRequest Level2\r\n 2013.4.8 v3 大重构 支持二进制上传与下载\r\n http://www.cnblogs.com/heyuquan/archive/2013/05/13/3076465.html\r\n 2014.12.25  v4 大重构 \r\n 2015.3.2   去掉mmPromise\r\n 2015.3.13  使用加强版mmPromise\r\n 2015.3.17  增加 xhr 的 onprogress 回调\r\n 2015.12.10 处理全局对象BUG               \r\n */\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/base/js/mmRequest.js\n ** module id = 17\n ** module chunks = 0\n **/","define([\"avalon\"], function (avalon) {\r\n//chrome36的原生Promise还多了一个defer()静态方法，允许不通过传参就能生成Promise实例，\r\n//另还多了一个chain(onSuccess, onFail)原型方法，意义不明\r\n//目前，firefox24, opera19也支持原生Promise(chrome32就支持了，但需要打开开关，自36起直接可用)\r\n//本模块提供的Promise完整实现ECMA262v6 的Promise规范\r\n//2015.3.12 支持async属性\r\n    function ok(val) {\r\n        return val\r\n    }\r\n    function ng(e) {\r\n        throw e\r\n    }\r\n\r\n    function done(onSuccess) {//添加成功回调\r\n        return this.then(onSuccess, ng)\r\n    }\r\n    function fail(onFail) {//添加出错回调\r\n        return this.then(ok, onFail)\r\n    }\r\n    function defer() {\r\n        var ret = {};\r\n        ret.promise = new this(function (resolve, reject) {\r\n            ret.resolve = resolve\r\n            ret.reject = reject\r\n        });\r\n        return ret\r\n    }\r\n    var msPromise = function (executor) {\r\n        this._callbacks = []\r\n        var me = this\r\n        if (typeof this !== \"object\")\r\n            throw new TypeError(\"Promises must be constructed via new\")\r\n        if (typeof executor !== \"function\")\r\n            throw new TypeError(\"not a function\")\r\n\r\n        executor(function (value) {\r\n            _resolve(me, value)\r\n        }, function (reason) {\r\n            _reject(me, reason)\r\n        })\r\n    }\r\n    function fireCallbacks(promise, fn) {\r\n        if (typeof promise.async === \"boolean\") {\r\n            var isAsync = promise.async\r\n        } else {\r\n            isAsync = promise.async = true\r\n        }\r\n        if (isAsync) {\r\n            window.setTimeout(fn, 0)\r\n        } else {\r\n            fn()\r\n        }\r\n    }\r\n//返回一个已经处于`resolved`状态的Promise对象\r\n    msPromise.resolve = function (value) {\r\n        return new msPromise(function (resolve) {\r\n            resolve(value)\r\n        })\r\n    }\r\n//返回一个已经处于`rejected`状态的Promise对象\r\n    msPromise.reject = function (reason) {\r\n        return new msPromise(function (resolve, reject) {\r\n            reject(reason)\r\n        })\r\n    }\r\n\r\n    msPromise.prototype = {\r\n//一个Promise对象一共有3个状态：\r\n//- `pending`：还处在等待状态，并没有明确最终结果\r\n//- `resolved`：任务已经完成，处在成功状态\r\n//- `rejected`：任务已经完成，处在失败状态\r\n        constructor: msPromise,\r\n        _state: \"pending\",\r\n        _fired: false, //判定是否已经被触发\r\n        _fire: function (onSuccess, onFail) {\r\n            if (this._state === \"rejected\") {\r\n                if (typeof onFail === \"function\") {\r\n                    onFail(this._value)\r\n                } else {\r\n                    throw this._value\r\n                }\r\n            } else {\r\n                if (typeof onSuccess === \"function\") {\r\n                    onSuccess(this._value)\r\n                }\r\n            }\r\n        },\r\n        _then: function (onSuccess, onFail) {\r\n            if (this._fired) {//在已有Promise上添加回调\r\n                var me = this\r\n                fireCallbacks(me, function () {\r\n                    me._fire(onSuccess, onFail)\r\n                });\r\n            } else {\r\n                this._callbacks.push({onSuccess: onSuccess, onFail: onFail})\r\n            }\r\n        },\r\n        then: function (onSuccess, onFail) {\r\n            onSuccess = typeof onSuccess === \"function\" ? onSuccess : ok\r\n            onFail = typeof onFail === \"function\" ? onFail : ng\r\n            var me = this//在新的Promise上添加回调\r\n            var nextPromise = new msPromise(function (resolve, reject) {\r\n                me._then(function (value) {\r\n                    try {\r\n                        value = onSuccess(value)\r\n                    } catch (e) {\r\n                        // https://promisesaplus.com/#point-55\r\n                        reject(e)\r\n                        return\r\n                    }\r\n                    resolve(value)\r\n                }, function (value) {\r\n                    try {\r\n                        value = onFail(value)\r\n                    } catch (e) {\r\n                        reject(e)\r\n                        return\r\n                    }\r\n                    resolve(value)\r\n                })\r\n            })\r\n            for (var i in me) {\r\n                if (!personal[i]) {\r\n                    nextPromise[i] = me[i]\r\n                }\r\n            }\r\n            return nextPromise\r\n        },\r\n        \"done\": done,\r\n        \"catch\": fail,\r\n        \"fail\": fail\r\n    }\r\n    var personal = {\r\n        _state: 1,\r\n        _fired: 1,\r\n        _value: 1,\r\n        _callbacks: 1\r\n    }\r\n    function _resolve(promise, value) {//触发成功回调\r\n        if (promise._state !== \"pending\")\r\n            return;\r\n        if (value && typeof value.then === \"function\") {\r\n//thenable对象使用then，Promise实例使用_then\r\n            var method = value instanceof msPromise ? \"_then\" : \"then\"\r\n            value[method](function (val) {\r\n                _transmit(promise, val, true)\r\n            }, function (reason) {\r\n                _transmit(promise, reason, false)\r\n            });\r\n        } else {\r\n            _transmit(promise, value, true);\r\n        }\r\n    }\r\n    function _reject(promise, value) {//触发失败回调\r\n        if (promise._state !== \"pending\")\r\n            return\r\n        _transmit(promise, value, false)\r\n    }\r\n//改变Promise的_fired值，并保持用户传参，触发所有回调\r\n    function _transmit(promise, value, isResolved) {\r\n        promise._fired = true;\r\n        promise._value = value;\r\n        promise._state = isResolved ? \"fulfilled\" : \"rejected\"\r\n        fireCallbacks(promise, function () {\r\n            promise._callbacks.forEach(function (data) {\r\n                promise._fire(data.onSuccess, data.onFail);\r\n            })\r\n        })\r\n    }\r\n    function _some(any, iterable) {\r\n        iterable = Array.isArray(iterable) ? iterable : []\r\n        var n = 0, result = [], end\r\n        return new msPromise(function (resolve, reject) {\r\n            // 空数组直接resolve\r\n            if (!iterable.length)\r\n                resolve(result)\r\n            function loop(a, index) {\r\n                a.then(function (ret) {\r\n                    if (!end) {\r\n                        result[index] = ret//保证回调的顺序\r\n                        n++\r\n                        if (any || n >= iterable.length) {\r\n                            resolve(any ? ret : result)\r\n                            end = true\r\n                        }\r\n                    }\r\n                }, function (e) {\r\n                    end = true\r\n                    reject(e)\r\n                })\r\n            }\r\n            for (var i = 0, l = iterable.length; i < l; i++) {\r\n                loop(iterable[i], i)\r\n            }\r\n        })\r\n    }\r\n\r\n    msPromise.all = function (iterable) {\r\n        return _some(false, iterable)\r\n    }\r\n    msPromise.race = function (iterable) {\r\n        return _some(true, iterable)\r\n    }\r\n    msPromise.defer = defer\r\n\r\n\r\n\r\n    avalon.Promise = msPromise\r\n    var nativePromise = window.Promise\r\n    if (/native code/.test(nativePromise)) {\r\n        nativePromise.prototype.done = done\r\n        nativePromise.prototype.fail = fail\r\n        if (!nativePromise.defer) { //chrome实现的私有方法\r\n            nativePromise.defer = defer\r\n        }\r\n    }\r\n    return window.Promise = nativePromise || msPromise\r\n\r\n})\r\n//https://github.com/ecomfe/er/blob/master/src/Deferred.js\r\n//http://jser.info/post/77696682011/es6-promises\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/base/js/mmPromise.js\n ** module id = 18\n ** module chunks = 0\n **/","define([\"avalon\"], function(avalon) {\r\n    var anchorElement = document.createElement('a')\r\n\r\n    var History = avalon.History = function() {\r\n        this.location = location\r\n    }\r\n\r\n    History.started = false\r\n    //取得当前IE的真实运行环境\r\n    History.IEVersion = (function() {\r\n        var mode = document.documentMode\r\n        return mode ? mode : window.XMLHttpRequest ? 7 : 6\r\n    })()\r\n\r\n    History.defaults = {\r\n        basepath: \"/\",\r\n        html5Mode: false,\r\n        hashPrefix: \"!\",\r\n        iframeID: null, //IE6-7，如果有在页面写死了一个iframe，这样似乎刷新的时候不会丢掉之前的历史\r\n        interval: 50, //IE6-7,使用轮询，这是其时间时隔\r\n        fireAnchor: true,//决定是否将滚动条定位于与hash同ID的元素上\r\n        routeElementJudger: avalon.noop // 判断a元素是否是触发router切换的链接\r\n    }\r\n\r\n    var oldIE = window.VBArray && History.IEVersion <= 7\r\n    var supportPushState = !!(window.history.pushState)\r\n    var supportHashChange = !!(\"onhashchange\" in window && (!window.VBArray || !oldIE))\r\n    History.prototype = {\r\n        constructor: History,\r\n        getFragment: function(fragment) {\r\n            if (fragment == null) {\r\n                if (this.monitorMode === \"popstate\") {\r\n                    fragment = this.getPath()\r\n                } else {\r\n                    fragment = this.getHash()\r\n                }\r\n            }\r\n            return fragment.replace(/^[#\\/]|\\s+$/g, \"\")\r\n        },\r\n        getHash: function(window) {\r\n            // IE6直接用location.hash取hash，可能会取少一部分内容\r\n            // 比如 http://www.cnblogs.com/rubylouvre#stream/xxxxx?lang=zh_c\r\n            // ie6 => location.hash = #stream/xxxxx\r\n            // 其他浏览器 => location.hash = #stream/xxxxx?lang=zh_c\r\n            // firefox 会自作多情对hash进行decodeURIComponent\r\n            // 又比如 http://www.cnblogs.com/rubylouvre/#!/home/q={%22thedate%22:%2220121010~20121010%22}\r\n            // firefox 15 => #!/home/q={\"thedate\":\"20121010~20121010\"}\r\n            // 其他浏览器 => #!/home/q={%22thedate%22:%2220121010~20121010%22}\r\n            var path = (window || this).location.href\r\n            return this._getHash(path.slice(path.indexOf(\"#\")))\r\n        },\r\n        _getHash: function(path) {\r\n            if (path.indexOf(\"#/\") === 0) {\r\n                return decodeURIComponent(path.slice(2))\r\n            }\r\n            if (path.indexOf(\"#!/\") === 0) {\r\n                return decodeURIComponent(path.slice(3))\r\n            }\r\n            return \"\"\r\n        },\r\n        getPath: function() {\r\n            var path = decodeURIComponent(this.location.pathname + this.location.search)\r\n            var root = this.basepath.slice(0, -1)\r\n            if (!path.indexOf(root))\r\n                path = path.slice(root.length)\r\n            return path.slice(1)\r\n        },\r\n        _getAbsolutePath: function(a) {\r\n            return !a.hasAttribute ? a.getAttribute(\"href\", 4) : a.href\r\n        },\r\n        /*\r\n         * @interface avalon.history.start 开始监听历史变化\r\n         * @param options 配置参数\r\n         * @param options.hashPrefix hash以什么字符串开头，默认是 \"!\"，对应实际效果就是\"#!\"\r\n         * @param options.routeElementJudger 判断a元素是否是触发router切换的链接的函数，return true则触发切换，默认为avalon.noop，history内部有一个判定逻辑，是先判定a元素的href属性是否以hashPrefix开头，如果是则当做router切换元素，因此综合判定规则是 href.indexOf(hashPrefix) == 0 || routeElementJudger(ele, ele.href)，如果routeElementJudger返回true则跳转至href，如果返回的是字符串，则跳转至返回的字符串，如果返回false则返回浏览器默认行为\r\n         * @param options.html5Mode 是否采用html5模式，即不使用hash来记录历史，默认false\r\n         * @param options.fireAnchor 决定是否将滚动条定位于与hash同ID的元素上，默认为true\r\n         * @param options.basepath 根目录，默认为\"/\"\r\n         */\r\n        start: function(options) {\r\n            if (History.started)\r\n                throw new Error(\"avalon.history has already been started\")\r\n            History.started = true\r\n            this.options = avalon.mix({}, History.defaults, options)\r\n            //IE6不支持maxHeight, IE7支持XMLHttpRequest, IE8支持window.Element，querySelector, \r\n            //IE9支持window.Node, window.HTMLElement, IE10不支持条件注释\r\n            //确保html5Mode属性存在,并且是一个布尔\r\n            this.html5Mode = !!this.options.html5Mode\r\n            //监听模式\r\n            this.monitorMode = this.html5Mode ? \"popstate\" : \"hashchange\"\r\n            if (!supportPushState) {\r\n                if (this.html5Mode) {\r\n                    avalon.log(\"如果浏览器不支持HTML5 pushState，强制使用hash hack!\")\r\n                    this.html5Mode = false\r\n                }\r\n                this.monitorMode = \"hashchange\"\r\n            }\r\n            if (!supportHashChange) {\r\n                this.monitorMode = \"iframepoll\"\r\n            }\r\n            this.prefix = \"#\" + this.options.hashPrefix + \"/\"\r\n            //确认前后都存在斜线， 如\"aaa/ --> /aaa/\" , \"/aaa --> /aaa/\", \"aaa --> /aaa/\", \"/ --> /\"\r\n            this.basepath = (\"/\" + this.options.basepath + \"/\").replace(/^\\/+|\\/+$/g, \"/\")  // 去最左右两边的斜线\r\n\r\n            this.fragment = this.getFragment()\r\n\r\n            anchorElement.href = this.basepath\r\n            this.rootpath = this._getAbsolutePath(anchorElement)\r\n            var that = this\r\n\r\n            var html = '<!doctype html><html><body>@</body></html>'\r\n            if (this.options.domain) {\r\n                html = html.replace(\"<body>\", \"<script>document.domain =\" + this.options.domain + \"</script><body>\")\r\n            }\r\n            this.iframeHTML = html\r\n            if (this.monitorMode === \"iframepoll\") {\r\n                //IE6,7在hash改变时不会产生历史，需要用一个iframe来共享历史\r\n                avalon.ready(function() {\r\n                    if(that.iframe) return\r\n                    var iframe = that.iframe || document.getElementById(that.iframeID) || document.createElement('iframe')\r\n                    iframe.src = 'javascript:0'\r\n                    iframe.style.display = 'none'\r\n                    iframe.tabIndex = -1\r\n                    document.body.appendChild(iframe)\r\n                    that.iframe = iframe.contentWindow\r\n                    that._setIframeHistory(that.prefix + that.fragment)\r\n                })\r\n\r\n            }\r\n\r\n            // 支持popstate 就监听popstate\r\n            // 支持hashchange 就监听hashchange\r\n            // 否则的话只能每隔一段时间进行检测了\r\n            function checkUrl(e) {\r\n                var iframe = that.iframe\r\n                if (that.monitorMode === \"iframepoll\" && !iframe) {\r\n                    return false\r\n                }\r\n                var pageHash = that.getFragment(), hash\r\n                if (iframe) {//IE67\r\n                    var iframeHash = that.getHash(iframe)\r\n                    //与当前页面hash不等于之前的页面hash，这主要是用户通过点击链接引发的\r\n                    if (pageHash !== that.fragment) {\r\n                        that._setIframeHistory(that.prefix + pageHash)\r\n                        hash = pageHash\r\n                        //如果是后退按钮触发hash不一致\r\n                    } else if (iframeHash !== that.fragment) {\r\n                        that.location.hash = that.prefix + iframeHash\r\n                        hash = iframeHash\r\n                    }\r\n\r\n                } else if (pageHash !== that.fragment) {\r\n                    hash = pageHash\r\n                }\r\n                if (hash !== void 0) {\r\n                    that.fragment = hash\r\n                    that.fireRouteChange(hash, {fromHistory: true})\r\n                }\r\n            }\r\n\r\n            //thanks https://github.com/browserstate/history.js/blob/master/scripts/uncompressed/history.html4.js#L272\r\n\r\n            // 支持popstate 就监听popstate\r\n            // 支持hashchange 就监听hashchange(IE8,IE9,FF3)\r\n            // 否则的话只能每隔一段时间进行检测了(IE6, IE7)\r\n            switch (this.monitorMode) {\r\n                case \"popstate\":\r\n                    this.checkUrl = avalon.bind(window, \"popstate\", checkUrl)\r\n                    this._fireLocationChange = checkUrl\r\n                    break\r\n                case  \"hashchange\":\r\n                    this.checkUrl = avalon.bind(window, \"hashchange\", checkUrl)\r\n                    break;\r\n                case  \"iframepoll\":\r\n                    this.checkUrl = setInterval(checkUrl, this.options.interval)\r\n                    break;\r\n            }\r\n            //根据当前的location立即进入不同的路由回调\r\n            avalon.ready(function() {\r\n                that.fireRouteChange(that.fragment || \"/\", {replace: true})\r\n            })\r\n        },\r\n        fireRouteChange: function(hash, options) {\r\n            var router = avalon.router\r\n            if (router && router.navigate) {\r\n                router.setLastPath(hash)\r\n                router.navigate(hash === \"/\" ? hash : \"/\" + hash, options)\r\n            }\r\n            if (this.options.fireAnchor) {\r\n                scrollToAnchorId(hash.replace(/\\?.*/g,\"\"))\r\n            }\r\n        },\r\n        // 中断URL的监听\r\n        stop: function() {\r\n            avalon.unbind(window, \"popstate\", this.checkUrl)\r\n            avalon.unbind(window, \"hashchange\", this.checkUrl)\r\n            clearInterval(this.checkUrl)\r\n            History.started = false\r\n        },\r\n        updateLocation: function(hash, options, urlHash) {\r\n            var options = options || {},\r\n                rp = options.replace,\r\n                st =    options.silent\r\n            if (this.monitorMode === \"popstate\") {\r\n                // html5 mode 第一次加载的时候保留之前的hash\r\n                var path = this.rootpath + hash + (urlHash || \"\")\r\n                // html5 model包含query\r\n                if(path != this.location.href.split(\"#\")[0]) history[rp ? \"replaceState\" : \"pushState\"]({path: path}, document.title, path)\r\n                if(!st) this._fireLocationChange()\r\n            } else {\r\n                var newHash = this.prefix + hash\r\n                if(st && hash != this.getHash()) {\r\n                    this._setIframeHistory(newHash, rp)\r\n                    if(this.fragment) avalon.router.setLastPath(this.fragment)\r\n                    this.fragment = this._getHash(newHash)\r\n                }\r\n                this._setHash(this.location, newHash, rp)\r\n            }\r\n        },\r\n        _setHash: function(location, hash, replace){\r\n            var href = location.href.replace(/(javascript:|#).*$/, '')\r\n            if (replace){\r\n                location.replace(href + hash)\r\n            }\r\n            else location.hash = hash\r\n        },\r\n        _setIframeHistory: function(hash, replace) {\r\n            if(!this.iframe) return\r\n            var idoc = this.iframe.document\r\n                idoc.open()\r\n                idoc.write(this.iframeHTML)\r\n                idoc.close()\r\n            this._setHash(idoc.location, hash, replace)\r\n        }\r\n    }\r\n\r\n    avalon.history = new History\r\n\r\n    //https://github.com/asual/jquery-address/blob/master/src/jquery.address.js\r\n\r\n    //劫持页面上所有点击事件，如果事件源来自链接或其内部，\r\n    //并且它不会跳出本页，并且以\"#/\"或\"#!/\"开头，那么触发updateLocation方法\r\n    avalon.bind(document, \"click\", function(event) {\r\n        var defaultPrevented = \"defaultPrevented\" in event ? event['defaultPrevented'] : event.returnValue === false,\r\n            routeElementJudger = avalon.history.options.routeElementJudger\r\n        if (defaultPrevented || event.ctrlKey || event.metaKey || event.which === 2)\r\n            return\r\n        var target = event.target\r\n        while (target.nodeName !== \"A\") {\r\n            target = target.parentNode\r\n            if (!target || target.tagName === \"BODY\") {\r\n                return\r\n            }\r\n        }\r\n\r\n        if (targetIsThisWindow(target.target)) {\r\n            var href = oldIE ? target.getAttribute(\"href\", 2) : target.getAttribute(\"href\") || target.getAttribute(\"xlink:href\")\r\n            var prefix = avalon.history.prefix\r\n            if (href === null) { // href is null if the attribute is not present\r\n                return\r\n            }\r\n            var hash = href.replace(prefix, \"\").trim()\r\n            if(!(href.indexOf(prefix) === 0 && hash !== \"\")) {\r\n                hash = routeElementJudger(target, href)\r\n                if(hash === true) hash = href\r\n            }\r\n            if (hash) {\r\n                event.preventDefault()\r\n                avalon.router && avalon.router.navigate(hash)\r\n            }\r\n        }\r\n    })\r\n\r\n    //判定A标签的target属性是否指向自身\r\n    //thanks https://github.com/quirkey/sammy/blob/master/lib/sammy.js#L219\r\n    function targetIsThisWindow(targetWindow) {\r\n        if (!targetWindow || targetWindow === window.name || targetWindow === '_self' || (targetWindow === 'top' && window == window.top)) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    //得到页面第一个符合条件的A标签\r\n    function getFirstAnchor(list) {\r\n        for (var i = 0, el; el = list[i++]; ) {\r\n            if (el.nodeName === \"A\") {\r\n                return el\r\n            }\r\n        }\r\n    }\r\n\r\n    function scrollToAnchorId(hash, el) {\r\n        if ((el = document.getElementById(hash))) {\r\n            el.scrollIntoView()\r\n        } else if ((el = getFirstAnchor(document.getElementsByName(hash)))) {\r\n            el.scrollIntoView()\r\n        } else {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n    return avalon\r\n})\r\n\r\n// 主要参数有 basepath  html5Mode  hashPrefix  interval domain fireAnchor\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/base/js/mmRouter/mmHistory.js\n ** module id = 19\n ** module chunks = 0\n **/","define([\"mmHistory\"], function() {\r\n\r\n    function Router() {\r\n        var table = {}\r\n        \"get,post,delete,put\".replace(avalon.rword, function(name) {\r\n            table[name] = []\r\n        })\r\n        this.routingTable = table\r\n    }\r\n\r\n    function parseQuery(url) {\r\n        var array = url.split(\"?\"), query = {}, path = array[0], querystring = array[1]\r\n        if (querystring) {\r\n            var seg = querystring.split(\"&\"),\r\n                    len = seg.length, i = 0, s;\r\n            for (; i < len; i++) {\r\n                if (!seg[i]) {\r\n                    continue\r\n                }\r\n                s = seg[i].split(\"=\")\r\n                query[decodeURIComponent(s[0])] = decodeURIComponent(s[1])\r\n            }\r\n        }\r\n        return {\r\n            path: path,\r\n            query: query\r\n        }\r\n    }\r\n\r\n\r\n    function queryToString(obj) {\r\n        if(typeof obj == 'string') return obj\r\n        var str = []\r\n        for(var i in obj) {\r\n            if(i == \"query\") continue\r\n            str.push(i + '=' + encodeURIComponent(obj[i]))\r\n        }\r\n        return str.length ? '?' + str.join(\"&\") : ''\r\n    }\r\n\r\n    var placeholder = /([:*])(\\w+)|\\{(\\w+)(?:\\:((?:[^{}\\\\]+|\\\\.|\\{(?:[^{}\\\\]+|\\\\.)*\\})+))?\\}/g\r\n    Router.prototype = {\r\n        error: function(callback) {\r\n            this.errorback = callback\r\n        },\r\n        _pathToRegExp: function(pattern, opts) {\r\n            var keys = opts.keys = [],\r\n                    //      segments = opts.segments = [],\r\n                    compiled = '^', last = 0, m, name, regexp, segment;\r\n\r\n            while ((m = placeholder.exec(pattern))) {\r\n                name = m[2] || m[3]; // IE[78] returns '' for unmatched groups instead of null\r\n                regexp = m[4] || (m[1] == '*' ? '.*' : 'string')\r\n                segment = pattern.substring(last, m.index);\r\n                var type = this.$types[regexp]\r\n                var key = {\r\n                    name: name\r\n                }\r\n                if (type) {\r\n                    regexp = type.pattern\r\n                    key.decode = type.decode\r\n                }\r\n                keys.push(key)\r\n                compiled += quoteRegExp(segment, regexp, false)\r\n                //  segments.push(segment)\r\n                last = placeholder.lastIndex\r\n            }\r\n            segment = pattern.substring(last);\r\n            compiled += quoteRegExp(segment) + (opts.strict ? opts.last : \"\\/?\") + '$';\r\n            var sensitive = typeof opts.caseInsensitive === \"boolean\" ? opts.caseInsensitive : true\r\n            //  segments.push(segment);\r\n            opts.regexp = new RegExp(compiled, sensitive ? 'i' : undefined);\r\n            return opts\r\n\r\n        },\r\n        //添加一个路由规则\r\n        add: function(method, path, callback, opts) {\r\n            var array = this.routingTable[method.toLowerCase()]\r\n            if (path.charAt(0) !== \"/\") {\r\n                throw \"path必须以/开头\"\r\n            }\r\n            opts = opts || {}\r\n            opts.callback = callback\r\n            if (path.length > 2 && path.charAt(path.length - 1) === \"/\") {\r\n                path = path.slice(0, -1)\r\n                opts.last = \"/\"\r\n            }\r\n            avalon.Array.ensure(array, this._pathToRegExp(path, opts))\r\n        },\r\n        //判定当前URL与已有状态对象的路由规则是否符合\r\n        route: function(method, path, query) {\r\n            path = path.trim()\r\n            var states = this.routingTable[method]\r\n            for (var i = 0, el; el = states[i++]; ) {\r\n                var args = path.match(el.regexp)\r\n                if (args) {\r\n                    el.query = query || {}\r\n                    el.path = path\r\n                    el.params = {}\r\n                    var keys = el.keys\r\n                    args.shift()\r\n                    if (keys.length) {\r\n                        this._parseArgs(args, el)\r\n                    }\r\n                    return  el.callback.apply(el, args)\r\n                }\r\n            }\r\n            if (this.errorback) {\r\n                this.errorback()\r\n            }\r\n        },\r\n        _parseArgs: function(match, stateObj) {\r\n            var keys = stateObj.keys\r\n            for (var j = 0, jn = keys.length; j < jn; j++) {\r\n                var key = keys[j]\r\n                var value = match[j] || \"\"\r\n                if (typeof key.decode === \"function\") {//在这里尝试转换参数的类型\r\n                    var val = key.decode(value)\r\n                } else {\r\n                    try {\r\n                        // 大数限制\r\n                        // 是不是应该还限制小数啊\r\n                        if(!(value.match(/^[0-9]{17,}$/g) || value > \"9007199254740992\")) val = JSON.parse(value)\r\n                    } catch (e) {\r\n                        val = value\r\n                    }\r\n                }\r\n                match[j] = stateObj.params[key.name] = val\r\n            }\r\n        },\r\n        getLastPath: function() {\r\n            return getCookie(\"msLastPath\")\r\n        },\r\n        setLastPath: function(path) {\r\n            setCookie(\"msLastPath\", path)\r\n        },\r\n        /*\r\n         *  @interface avalon.router.redirect\r\n         *  @param hash 访问的url hash\r\n         */\r\n        redirect: function(hash) {\r\n            this.navigate(hash, {replace: true})\r\n        },\r\n        /*\r\n         *  @interface avalon.router.navigate\r\n         *  @param hash 访问的url hash\r\n         *  @param options 扩展配置\r\n         *  @param options.replace true替换history，否则生成一条新的历史记录\r\n         *  @param options.silent true表示只同步url，不触发url变化监听绑定\r\n        */\r\n        navigate: function(hash, options) {\r\n            var parsed = parseQuery((hash.charAt(0) !== \"/\" ? \"/\" : \"\") + hash),\r\n                options = options || {}\r\n            if(hash.charAt(0) === \"/\")\r\n                hash = hash.slice(1)// 修正出现多扛的情况 fix http://localhost:8383/mmRouter/index.html#!//\r\n            // 在state之内有写history的逻辑\r\n            if(!avalon.state || options.silent) avalon.history && avalon.history.updateLocation(hash, avalon.mix({}, options, {silent: true}))\r\n            // 只是写历史而已\r\n            if(!options.silent) {\r\n                this.route(\"get\", parsed.path, parsed.query, options)\r\n            }\r\n        },\r\n        /*\r\n         *  @interface avalon.router.when 配置重定向规则\r\n         *  @param path 被重定向的表达式，可以是字符串或者数组\r\n         *  @param redirect 重定向的表示式或者url\r\n        */\r\n        when: function(path, redirect) {\r\n            var me = this,\r\n                path = path instanceof Array ? path : [path]\r\n            avalon.each(path, function(index, p) {\r\n                me.add(\"get\", p, function() {\r\n                    var info = me.urlFormate(redirect, this.params, this.query)\r\n                    me.navigate(info.path + info.query, {replace: true})\r\n                })\r\n            })\r\n            return this\r\n        },\r\n        /*\r\n         *  @interface avalon.router.get 添加一个router规则\r\n         *  @param path url表达式\r\n         *  @param callback 对应这个url的回调\r\n        */\r\n        get: function(path, callback) {},\r\n        urlFormate: function(url, params, query) {\r\n            var query = query ? queryToString(query) : \"\",\r\n                hash = url.replace(placeholder, function(mat) {\r\n                    var key = mat.replace(/[\\{\\}]/g, '').split(\":\")\r\n                    key = key[0] ? key[0] : key[1]\r\n                    return key in params ? params[key] : ''\r\n                }).replace(/^\\//g, '')\r\n            return {\r\n                path: hash,\r\n                query: query\r\n            }\r\n        },\r\n        /* *\r\n         `'/hello/'` - 匹配'/hello/'或'/hello'\r\n         `'/user/:id'` - 匹配 '/user/bob' 或 '/user/1234!!!' 或 '/user/' 但不匹配 '/user' 与 '/user/bob/details'\r\n         `'/user/{id}'` - 同上\r\n         `'/user/{id:[^/]*}'` - 同上\r\n         `'/user/{id:[0-9a-fA-F]{1,8}}'` - 要求ID匹配/[0-9a-fA-F]{1,8}/这个子正则\r\n         `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\r\n         path into the parameter 'path'.\r\n         `'/files/*path'` - ditto.\r\n         */\r\n        // avalon.router.get(\"/ddd/:dddID/\",callback)\r\n        // avalon.router.get(\"/ddd/{dddID}/\",callback)\r\n        // avalon.router.get(\"/ddd/{dddID:[0-9]{4}}/\",callback)\r\n        // avalon.router.get(\"/ddd/{dddID:int}/\",callback)\r\n        // 我们甚至可以在这里添加新的类型，avalon.router.$type.d4 = { pattern: '[0-9]{4}', decode: Number}\r\n        // avalon.router.get(\"/ddd/{dddID:d4}/\",callback)\r\n        $types: {\r\n            date: {\r\n                pattern: \"[0-9]{4}-(?:0[1-9]|1[0-2])-(?:0[1-9]|[1-2][0-9]|3[0-1])\",\r\n                decode: function(val) {\r\n                    return new Date(val.replace(/\\-/g, \"/\"))\r\n                }\r\n            },\r\n            string: {\r\n                pattern: \"[^\\\\/]*\"\r\n            },\r\n            bool: {\r\n                decode: function(val) {\r\n                    return parseInt(val, 10) === 0 ? false : true;\r\n                },\r\n                pattern: \"0|1\"\r\n            },\r\n            int: {\r\n                decode: function(val) {\r\n                    return parseInt(val, 10);\r\n                },\r\n                pattern: \"\\\\d+\"\r\n            }\r\n        }\r\n    }\r\n\r\n    \"get,put,delete,post\".replace(avalon.rword, function(method) {\r\n        return  Router.prototype[method] = function(a, b, c) {\r\n            this.add(method, a, b, c)\r\n        }\r\n    })\r\n    function quoteRegExp(string, pattern, isOptional) {\r\n        var result = string.replace(/[\\\\\\[\\]\\^$*+?.()|{}]/g, \"\\\\$&\");\r\n        if (!pattern)\r\n            return result;\r\n        var flag = isOptional ? '?' : '';\r\n        return result + flag + '(' + pattern + ')' + flag;\r\n    }\r\n    function supportLocalStorage() {\r\n        try {\r\n            localStorage.setItem(\"avalon\", 1)\r\n            localStorage.removeItem(\"avalon\")\r\n            return true\r\n        } catch (e) {\r\n            return false\r\n        }\r\n    }\r\n\r\n    if (supportLocalStorage()) {\r\n        Router.prototype.getLastPath = function() {\r\n            return localStorage.getItem(\"msLastPath\")\r\n        }\r\n        var cookieID\r\n        Router.prototype.setLastPath = function (path) {\r\n            if (cookieID) {\r\n                clearTimeout(cookieID)\r\n                cookieID = null\r\n            }\r\n            localStorage.setItem(\"msLastPath\", path)\r\n            cookieID = setTimeout(function () {\r\n                localStorage.removItem(\"msLastPath\")\r\n            }, 1000 * 60 * 60 * 24)\r\n        }\r\n    }\r\n\r\n       \r\n\r\n    function escapeCookie(value) {\r\n        return String(value).replace(/[,;\"\\\\=\\s%]/g, function(character) {\r\n            return encodeURIComponent(character)\r\n        });\r\n    }\r\n    function setCookie(key, value) {\r\n        var date = new Date()//将date设置为1天以后的时间 \r\n        date.setTime(date.getTime() + 1000 * 60 * 60 * 24)\r\n        document.cookie = escapeCookie(key) + '=' + escapeCookie(value) + \";expires=\" + date.toGMTString()\r\n    }\r\n    function getCookie(name) {\r\n        var m = String(document.cookie).match(new RegExp('(?:^| )' + name + '(?:(?:=([^;]*))|;|$)')) || [\"\", \"\"]\r\n        return decodeURIComponent(m[1])\r\n    }\r\n\r\n    avalon.router = new Router\r\n\r\n    return avalon\r\n})\r\n/*\r\n <!DOCTYPE html>\r\n <html>\r\n <head>\r\n <meta charset=\"utf-8\">\r\n <title>路由系统</title>\r\n <script src=\"avalon.js\"></script>\r\n <script>\r\n require([\"mmRouter\"], function() {\r\n var model = avalon.define('xxx', function(vm) {\r\n vm.currPath = \"\"\r\n })\r\n avalon.router.get(\"/aaa\", function(a) {\r\n model.currPath = this.path\r\n })\r\n avalon.router.get(\"/bbb\", function(a) {\r\n model.currPath = this.path\r\n })\r\n avalon.router.get(\"/ccc\", function(a) {\r\n model.currPath = this.path\r\n })\r\n avalon.router.get(\"/ddd/:ddd\", function(a) {//:ddd为参数\r\n avalon.log(a)\r\n model.currPath = this.path\r\n })\r\n avalon.router.get(\"/eee\", function(a) {\r\n model.currPath = this.path\r\n })\r\n avalon.history.start({\r\n html5Mode: true,\r\n basepath: \"/avalon\"\r\n })\r\n avalon.scan()\r\n })\r\n </script>\r\n </head>\r\n <body >\r\n <div ms-controller=\"xxx\">\r\n <ul>\r\n <li><a href=\"#!/aaa\">aaa</a></li>\r\n <li><a href=\"#!/bbb\">bbb</a></li>\r\n <li><a href=\"#!/ccc\">ccc</a></li>\r\n <li><a href=\"#!/ddd/222\">ddd</a></li>\r\n <li><a href=\"#!/eee\">eee</a></li>\r\n </ul>\r\n <div style=\"color:red\">{{currPath}}</div>\r\n <div style=\"height: 600px;width:1px;\">\r\n \r\n </div>\r\n <p id=\"eee\">会定位到这里</p>\r\n </div>\r\n \r\n </body>\r\n </html>\r\n \r\n */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/base/js/mmRouter/mmRouter.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\r\n * verson 0.9\r\n */\r\ndefine([\"mmPromise\", \"mmRouter\"], function () {\r\n//重写mmRouter中的route方法     \r\n    avalon.router.route = function (method, path, query, options) {\r\n        path = path.trim()\r\n        var states = this.routingTable[method]\r\n        for (var i = 0, el; el = states[i++]; ) {//el为一个个状态对象，状态对象的callback总是返回一个Promise\r\n            var args = path.match(el.regexp)\r\n            if (args && el.abstract !== true) {//不能是抽象状态\r\n                var newParams = {params: {}}\r\n                avalon.mix(newParams.params, el.params)\r\n                newParams.keys = el.keys\r\n                newParams.params.query = query || {}\r\n                args.shift()\r\n                if (el.keys.length) {\r\n                    this._parseArgs(args, newParams)\r\n                }\r\n                if (el.stateName) {\r\n                    mmState.transitionTo(mmState.currentState, el, newParams.params, options)\r\n                } else {\r\n                    el.callback.apply(el, args)\r\n                }\r\n                return\r\n            }\r\n        }\r\n        if (this.errorback) {\r\n            this.errorback()\r\n        }\r\n    }\r\n    var _root, undefine, _controllers = {}, _states = {}\r\n    /*\r\n     *  @interface avalon.router.go 跳转到一个已定义状态上，params对参数对象\r\n     *  @param toName 状态name\r\n     *  @param params 附加参数\r\n     *  @param params.query 在hash后面附加的类似search的参数对\r\n     *  @param options 扩展配置\r\n     *  @param options.reload true强制reload，即便url、参数并未发生变化\r\n     *  @param options.replace true替换history，否则生成一条新的历史记录\r\n     *  @param options.confirmed true不触发onBeforeUnload,$onBeforeUnload,onBeforeExit\r\n     */\r\n    avalon.router.go = function (toName, params, options) {\r\n        var from = mmState.currentState,\r\n                to = StateModel.is(toName) ? toName : getStateByName(toName),\r\n                params = params || {}\r\n        var params = avalon.mix(true, {}, to.params, params)\r\n        if (to) {\r\n            mmState.transitionTo(from, to, params, options)\r\n        }\r\n    }\r\n    // 事件管理器\r\n    var Event = window.$eventManager = avalon.define({\r\n        $id: \"$eventManager\",\r\n        $flag: 0,\r\n        uiqKey: function () {\r\n            Event.$flag++\r\n            return \"flag\" + Event.$flag++\r\n        }\r\n    })\r\n    function removeOld() {\r\n        var nodes = mmState.oldNodes\r\n        while (nodes.length) {\r\n            var i = nodes.length - 1,\r\n                    node = nodes[i]\r\n            node.parentNode && node.parentNode.removeChild(node)\r\n            nodes.splice(i, 1)\r\n            node = null\r\n        }\r\n    }\r\n    Event.$watch(\"onAbort\", removeOld)\r\n    var mmState = window.mmState = {\r\n        prevState: NaN,\r\n        currentState: NaN, // 当前状态，可能还未切换到该状态\r\n        activeState: NaN, // 当前实际处于的状态\r\n        oldNodes: [],\r\n        query: {}, // 从属于currentState\r\n        popOne: function (chain, params, callback, notConfirmed) {\r\n            if (mmState._toParams !== params)\r\n                return callback(false, {type: \"abort\"})\r\n            var cur = chain.pop(), me = this\r\n            if (!cur)\r\n                return callback()\r\n            // 阻止退出\r\n            if (notConfirmed && cur.onBeforeExit() === false)\r\n                return callback(false)\r\n            me.activeState = cur.parentState || _root\r\n            cur.done = function (success) {\r\n                cur._pending = false\r\n                cur.done = null\r\n                cur._local = null\r\n                if (success !== false) {\r\n                    if (me.activeState)\r\n                        return me.popOne(chain, params, callback, notConfirmed)\r\n                }\r\n                return callback(success)\r\n            }\r\n            var success = cur.onExit()\r\n            if (!cur._pending && cur.done)\r\n                cur.done(success)\r\n        },\r\n        pushOne: function (chain, params, callback, _local, toLocals) {\r\n            if (mmState._toParams !== params)\r\n                return callback(false, {type: \"abort\"})\r\n            var cur = chain.shift(), me = this\r\n            // 退出\r\n            if (!cur) {\r\n                chain = null\r\n                return callback()\r\n            }\r\n            cur.syncParams(params)\r\n            // 阻止进入该状态\r\n            if (cur.onBeforeEnter() === false) {\r\n                // 恢复params\r\n                cur.syncParams(cur.oldParams)\r\n                return callback(false)\r\n            }\r\n            var _local = inherit(_local)\r\n            me.activeState = cur // 更新当前实际处于的状态\r\n            cur.done = function (success) {\r\n                // 防止async处触发已经销毁的done\r\n                if (!cur.done)\r\n                    return\r\n                cur._pending = false\r\n                cur.done = null\r\n                cur.visited = true\r\n                // 退出\r\n                if (success === false) {\r\n                    // 这里斟酌一下 - 去掉\r\n                    // cur.callback.apply(cur, [params, _local])\r\n                    return callback(success)\r\n                }\r\n                var resolved = cur.callback.apply(cur, [params, _local])\r\n                resolved.$then(function (res) {\r\n                    // sync params to oldParams\r\n                    avalon.mix(true, cur.oldParams, cur.params)\r\n                    // 继续状态链\r\n                    me.pushOne(chain, params, callback, _local)\r\n                })\r\n            }\r\n            // 一般在这个回调里准备数据\r\n            var args = []\r\n            avalon.each(cur.keys, function (index, item) {\r\n                var key = item.name\r\n                args.push(cur.params[key])\r\n            })\r\n            cur._onEnter.apply(cur, args)\r\n            if (!cur._pending && cur.done)\r\n                cur.done()\r\n        },\r\n        transitionTo: function (fromState, toState, toParams, options) {\r\n            var toParams = toParams || toState.params, fromAbort\r\n            // state machine on transition\r\n            if (this.activeState && (this.activeState != this.currentState)) {\r\n                avalon.log(\"navigating to [\" +\r\n                        this.currentState.stateName +\r\n                        \"] will be stopped, redirect to [\" +\r\n                        toState.stateName + \"] now\")\r\n                this.activeState.done && this.activeState.done(!\"stopped\")\r\n                fromState = this.activeState // 更新实际的fromState\r\n                fromAbort = true\r\n            }\r\n            mmState.oldNodes = []\r\n            var info = avalon.router.urlFormate(toState.url, toParams, toParams.query),\r\n                    me = this,\r\n                    options = options || {},\r\n                    // 是否强制reload，参照angular，这个时候会触发整个页面重刷\r\n                    reload = options.reload,\r\n                    over,\r\n                    fromChain = fromState && fromState.chain || [],\r\n                    toChain = toState.chain,\r\n                    i = 0,\r\n                    changeType, // 是params变化？query变化？这个东西可以用来配置是否屏蔽视图刷新逻辑\r\n                    state = toChain[i],\r\n                    _local = _root.sourceLocal,\r\n                    toLocals = []\r\n            // 初始化可能存在的异步state\r\n            var modulesToLoad = [],\r\n                modulesToLoadObj = {},\r\n                chains = [].concat(fromChain).concat(toChain)\r\n            avalon.each(chains, function(i, state) {\r\n                var stateUrl = state.stateUrl\r\n                if (stateUrl) {\r\n                    state._stateUrl = stateUrl\r\n                    delete state.stateUrl\r\n                    if (!(stateUrl in modulesToLoadObj)) {\r\n                        modulesToLoadObj[stateUrl] = ''\r\n                        modulesToLoad.push(getPromise(function (rs, rj) {\r\n                            avalon.controller.loader(stateUrl, function(stateConfig) {\r\n                                avalon.mix(state, stateConfig)\r\n                                state.initViewsConfig()\r\n                                rs()\r\n                            })\r\n                        }))\r\n                    }\r\n                }\r\n            })\r\n            chains = modulesToLoadObj = null\r\n\r\n            getPromise(modulesToLoad).then(function() {\r\n                if (!reload) {\r\n                    // 找到共有父状态chain，params未变化\r\n                    while (state && state === fromChain[i] && !state.paramsChanged(toParams)) {\r\n                        _local = toLocals[i] = state._local\r\n                        i++\r\n                        state = toChain[i]\r\n                    }\r\n                }\r\n                var exitChain = fromChain.slice(i), // 需要退出的chain\r\n                        enterChain = toChain.slice(i), // 需要进入的chain\r\n                        commonLocal = _local\r\n                // 建立toLocals，用来计算哪些view会被替换\r\n                while (state = toChain[i]) {\r\n                    _local = toLocals[i] = inherit(_local, state.sourceLocal)\r\n                    i++\r\n                }\r\n                mmState._local = _local\r\n                done = function (success, e) {\r\n                    if (over)\r\n                        return\r\n                    over = true\r\n                    me.currentState = me.activeState\r\n                    enterChain = exitChain = commonLocal = _local = toParams = null\r\n                    mmState.oldNodes = []\r\n                    if (success !== false) {\r\n                        mmState.lastLocal = mmState.currentState._local\r\n                        _root.fire(\"updateview\", me.currentState, changeType)\r\n                        avalon.log(\"transitionTo \" + toState.stateName + \" success\")\r\n                        callStateFunc(\"onLoad\", me, fromState, toState)\r\n                    } else {\r\n                        return callStateFunc(\"onError\", me, {\r\n                            type: \"transition\",\r\n                            message: \"transitionTo \" + toState.stateName + \" faild\",\r\n                            error: e,\r\n                            fromState: fromState,\r\n                            toState: toState,\r\n                            params: toParams\r\n                        }, me.currentState)\r\n                    }\r\n                }\r\n                toState.path = (\"/\" + info.path).replace(/^[\\/]{2,}/g, \"/\")\r\n                if (!reload && fromState === toState) {\r\n                    changeType = toState.paramsChanged(toParams)\r\n                    if (!changeType) {\r\n                        // redirect的目的状态 == me.activeState && abort\r\n                        if (toState == me.activeState && fromAbort)\r\n                            return done()\r\n                        // 重复点击直接return\r\n                        return\r\n                    }\r\n                }\r\n\r\n                mmState.query = avalon.mix({}, toParams.query)\r\n\r\n                // onBeforeUnload check\r\n                if (options && !options.confirmed && (callStateFunc(\"onBeforeUnload\", me, fromState, toState) === false || broadCastBeforeUnload(exitChain, enterChain, fromState, toState) === false)) {\r\n                    return callStateFunc(\"onAbort\", me, fromState, toState)\r\n                }\r\n                if (over === true) {\r\n                    return\r\n                }\r\n                avalon.log(\"begin transitionTo \" + toState.stateName + \" from \" + (fromState && fromState.stateName || \"unknown\"))\r\n                callStateFunc(\"onUnload\", me, fromState, toState)\r\n                me.currentState = toState\r\n                me.prevState = fromState\r\n                mmState._toParams = toParams\r\n                if (info && avalon.history) {\r\n                    if (avalon.history.updateLocation) {\r\n                        avalon.history.updateLocation(info.path + info.query,\r\n                                avalon.mix({silent: true}, options), !fromState && location.hash)\r\n                    } else {\r\n                        avalon.history.navigate(info.path + info.query,\r\n                                avalon.mix({silent: true}, options))\r\n                    }\r\n                }\r\n                callStateFunc(\"onBegin\", me, fromState, toState)\r\n                me.popOne(exitChain, toParams, function (success) {\r\n                    // 中断\r\n                    if (success === false)\r\n                        return done(success)\r\n                    me.pushOne(enterChain, toParams, done, commonLocal, toLocals)\r\n                }, !(options && options.confirmed))\r\n            }, function() {\r\n                throw new Error('加载stateUrl资源失败')\r\n            })\r\n        }\r\n    }\r\n    //将template,templateUrl,templateProvider等属性从opts对象拷贝到新生成的view对象上的\r\n    function copyTemplateProperty(newObj, oldObj, name) {\r\n        if (name in oldObj) {\r\n            newObj[name] = oldObj[name]\r\n            delete  oldObj[name]\r\n        }\r\n    }\r\n    function getCacheContainer() {\r\n        return document.getElementsByTagName(\"avalon\")[0]\r\n    }\r\n    var templateCache = {},\r\n            cacheContainer = getCacheContainer()\r\n    function loadCache(name) {\r\n        var fragment = document.createDocumentFragment(),\r\n                divPlaceHolder = document.getElementById(name),\r\n                f,\r\n                eles = divPlaceHolder.eles,\r\n                i = 0\r\n        if (divPlaceHolder) {\r\n            while (f = eles[i]) {\r\n                fragment.appendChild(f)\r\n                i++\r\n            }\r\n        }\r\n        return fragment\r\n    }\r\n    function setCache(name, element) {\r\n        var fragment = document.createDocumentFragment(),\r\n                divPlaceHolder = document.getElementById(name),\r\n                f\r\n        if (!divPlaceHolder) {\r\n            divPlaceHolder = document.createElement(\"div\")\r\n            divPlaceHolder.id = name\r\n            cacheContainer.appendChild(divPlaceHolder)\r\n        }\r\n        // 引用\r\n        if (divPlaceHolder.eles) {\r\n            avalon.each(divPlaceHolder.eles, function (index, ele) {\r\n                fragment.appendChild(ele)\r\n            })\r\n        } else {\r\n            divPlaceHolder.eles = []\r\n            while (f = element.firstChild) {\r\n                fragment.appendChild(f)\r\n                divPlaceHolder.eles.push(f)\r\n            }\r\n            templateCache[name] = true\r\n        }\r\n        divPlaceHolder.appendChild(fragment)\r\n    }\r\n    function broadCastBeforeUnload(exitChain, enterChain, fromState, toState) {\r\n        var lastLocal = mmState.lastLocal\r\n        if (!lastLocal || !enterChain[0] && !exitChain[0])\r\n            return\r\n        var newLocal = mmState._local,\r\n                cacheQueue = []\r\n        for (var i in lastLocal) {\r\n            var local = lastLocal[i]\r\n            // 所有被更新的view\r\n            if (!(i in newLocal) || newLocal[i] != local) {\r\n                if (local.$ctrl && (\"$onBeforeUnload\" in local.$ctrl)) {\r\n                    if (local.$ctrl.$onBeforeUnload(fromState, toState) === false)\r\n                        return false\r\n                }\r\n                if (local.element && (exitChain[0] != enterChain[0]))\r\n                    cacheQueue.push(local)\r\n            }\r\n        }\r\n        avalon.each(cacheQueue, function (index, local) {\r\n            var ele = local.element,\r\n                    name = avalon(ele).data(\"currentCache\")\r\n            if (name) {\r\n                setCache(name, ele)\r\n            }\r\n        })\r\n        cacheQueue = null\r\n    }\r\n    // 靠谱的解决方法\r\n    avalon.bindingHandlers.view = function (data) {\r\n        data.expr = \"'\" + (data.expr || \"\") + \"'\"\r\n        var vmodels = data.vmodels || arguments[1]\r\n        var currentState = mmState.currentState,\r\n                element = data.element,\r\n                $element = avalon(element),\r\n                viewname = (data.value || data.expr || \"\").replace(/['\"]+/g, \"\"),\r\n                comment = document.createComment(\"ms-view:\" + viewname),\r\n                par = element.parentNode,\r\n                defaultHTML = element.innerHTML,\r\n                statename = $element.data(\"statename\") || \"\",\r\n                parentState = getStateByName(statename) || _root,\r\n                currentLocal = {},\r\n                oldElement = element,\r\n                tpl = element.outerHTML\r\n        element.removeAttribute(\"ms-view\") // remove right now\r\n        par.insertBefore(comment, element)\r\n        function update(firsttime, currentState, changeType) {\r\n            // node removed, remove callback\r\n            if (!document.contains(comment)) {\r\n                data = vmodels = element = par = comment = $element = oldElement = update = null\r\n                return !\"delete from watch\"\r\n            }\r\n            var definedParentStateName = $element.data(\"statename\") || \"\",\r\n                    parentState = getStateByName(definedParentStateName) || _root,\r\n                    _local\r\n            if (viewname.indexOf(\"@\") < 0)\r\n                viewname += \"@\" + parentState.stateName\r\n            _local = mmState.currentState._local && mmState.currentState._local[viewname]\r\n            if (firsttime && !_local || currentLocal === _local)\r\n                return\r\n            currentLocal = _local\r\n            _currentState = _local && _local.state\r\n            // 缓存，如果加载dom上，则是全局配置，针对template还可以开一个单独配置\r\n            var cacheTpl = $element.data(\"viewCache\"),\r\n                    lastCache = $element.data(\"currentCache\")\r\n            if (_local) {\r\n                cacheTpl = (_local.viewCache === false ? false : _local.viewCache || cacheTpl) && (viewname + \"@\" + _currentState.stateName)\r\n            } else if (cacheTpl) {\r\n                cacheTpl = viewname + \"@__default__\"\r\n            }\r\n            // stateB->stateB，配置了参数变化不更新dom\r\n            if (_local && _currentState === currentState && _local.ignoreChange && _local.ignoreChange(changeType, viewname))\r\n                return\r\n            // 需要load和使用的cache是一份\r\n            if (cacheTpl && cacheTpl === lastCache)\r\n                return\r\n            compileNode(tpl, element, $element, _currentState)\r\n            var html = _local ? _local.template : defaultHTML,\r\n                    fragment\r\n            if (cacheTpl) {\r\n                if (_local) {\r\n                    _local.element = element\r\n                } else {\r\n                    mmState.currentState._local[viewname] = {\r\n                        state: mmState.currentState,\r\n                        template: defaultHTML,\r\n                        element: element\r\n                    }\r\n                }\r\n            }\r\n            avalon.clearHTML(element)\r\n            // oldElement = element\r\n            element.removeAttribute(\"ms-view\")\r\n            element.setAttribute(\"ui-view\", data.value || data.expr || \"\")\r\n            // 本次更新的dom需要用缓存\r\n            if (cacheTpl) {\r\n                // 已缓存\r\n                if (templateCache[cacheTpl]) {\r\n                    fragment = loadCache(cacheTpl)\r\n                    // 未缓存\r\n                } else {\r\n                    fragment = avalon.parseHTML(html)\r\n                }\r\n                element.appendChild(fragment)\r\n                // 更新现在使用的cache名字\r\n                $element.data(\"currentCache\", cacheTpl)\r\n                if (templateCache[cacheTpl])\r\n                    return\r\n            } else {\r\n                element.innerHTML = html\r\n                $element.data(\"currentCache\", false)\r\n            }\r\n            // default\r\n            if (!_local && cacheTpl)\r\n                $element.data(\"currentCache\", cacheTpl)\r\n            avalon.each(getViewNodes(element), function (i, node) {\r\n                avalon(node).data(\"statename\", _currentState && _currentState.stateName || \"\")\r\n            })\r\n            // merge上下文vmodels + controller指定的vmodels\r\n            avalon.scan(element, (_local && _local.vmodels || []).concat(vmodels || []))\r\n            // 触发视图绑定的controller的事件\r\n            if (_local && _local.$ctrl) {\r\n                _local.$ctrl.$onRendered && _local.$ctrl.$onRendered.apply(element, [_local])\r\n            }\r\n        }\r\n        update(\"firsttime\")\r\n        _root.watch(\"updateview\", function (state, changeType) {\r\n            return update.call(this, undefine, state, changeType)\r\n        })\r\n    }\r\n    if (avalon.directives) {\r\n        avalon.directive(\"view\", {\r\n            init: avalon.bindingHandlers.view\r\n        })\r\n    }\r\n    function compileNode(tpl, element, $element, _currentState) {\r\n        if ($element.hasClass(\"oni-mmRouter-slide\")) {\r\n            // 拷贝一个镜像\r\n            var copy = element.cloneNode(true)\r\n            copy.setAttribute(\"ms-skip\", \"true\")\r\n            avalon(copy).removeClass(\"oni-mmRouter-enter\").addClass(\"oni-mmRouter-leave\")\r\n            avalon(element).addClass(\"oni-mmRouter-enter\")\r\n            element.parentNode.insertBefore(copy, element)\r\n            mmState.oldNodes.push(copy)\r\n            callStateFunc(\"onViewEnter\", _currentState, element, copy)\r\n        }\r\n        return element\r\n    }\r\n\r\n    function inherit(parent, extra) {\r\n        return avalon.mix(new (avalon.mix(function () {\r\n        }, {prototype: parent}))(), extra);\r\n    }\r\n\r\n    /*\r\n     * @interface avalon.state 对avalon.router.get 进行重新封装，生成一个状态对象\r\n     * @param stateName 指定当前状态名\r\n     * @param opts 配置\r\n     * @param opts.url  当前状态对应的路径规则，与祖先状态们组成一个完整的匹配规则\r\n     * @param {Function} opts.ignoreChange 当mmState.currentState == this时，更新视图的时候调用该函数，return true mmRouter则不会去重写视图和scan，请确保该视图内用到的数据没有放到avalon vmodel $skipArray内\r\n     * @param opts.controller 如果不写views属性,则默认view为\"\"，为默认的view指定一个控制器，该配置会直接作为avalon.controller的参数生成一个$ctrl对象\r\n     * @param opts.controllerUrl 指定默认view控制器的路径，适用于模块化开发，该情形下默认通过avalon.controller.loader去加载一个符合amd规范，并返回一个avalon.controller定义的对象，传入opts.params作参数\r\n     * @param opts.controllerProvider 指定默认view控制器的提供者，它可以是一个Promise，也可以为一个函数，传入opts.params作参数\r\n     @param opts.viewCache 是否缓存这个模板生成的dom，设置会覆盖dom元素上的data-view-cache，也可以分别配置到views上每个单独的view上\r\n     * @param opts.views: 如果不写views属性,则默认view【ms-view=\"\"】为\"\"，也可以通过指定一个viewname属性来配置【ms-view=\"viewname\"】，对多个[ms-view]容器进行处理,每个对象应拥有template, templateUrl, templateProvider，可以给每个对象搭配一个controller||controllerUrl||controllerProvider属性\r\n     *     views的结构为\r\n     *<pre>\r\n     *     {\r\n     *        \"\": {template: \"xxx\"}\r\n     *        \"aaa\": {template: \"xxx\"}\r\n     *        \"bbb@\": {template: \"xxx\"}\r\n     *     }\r\n     *</pre>\r\n     *     views的每个键名(keyname)的结构为viewname@statename，\r\n     *         如果名字不存在@，则viewname直接为keyname，statename为opts.stateName\r\n     *         如果名字存在@, viewname为match[0], statename为match[1]\r\n     * @param opts.views.{viewname}.template 指定当前模板，也可以为一个函数，传入opts.params作参数，* @param opts.views.viewname.cacheController 是否缓存view的控制器，默认true\r\n     * @param opts.views.{viewname}.templateUrl 指定当前模板的路径，也可以为一个函数，传入opts.params作参数\r\n     * @param opts.views.{viewname}.templateProvider 指定当前模板的提供者，它可以是一个Promise，也可以为一个函数，传入opts.params作参数\r\n     * @param opts.views.{viewname}.ignoreChange 用法同state.ignoreChange，只是针对的粒度更细一些，针对到具体的view\r\n     * @param {Function} opts.onBeforeEnter 切入某个state之前触发，this指向对应的state，如果return false则会中断并退出整个状态机\r\n     * @param {Function} opts.onEnter 进入状态触发，可以返回false，或任意不为true的错误信息或一个promise对象，用法跟视图的$onEnter一致\r\n     * @param {Function} onEnter.params 视图所属的state的参数\r\n     * @param {Function} onEnter.resolve $onEnter return false的时候，进入同步等待，直到手动调用resolve\r\n     * @param {Function} onEnter.reject 数据加载失败，调用\r\n     * @param {Function} opts.onBeforeExit state退出前触发，this指向对应的state，如果return false则会中断并退出整个状态机\r\n     * @param {Function} opts.onExit 退出后触发，this指向对应的state\r\n     * @param opts.ignoreChange.changeType 值为\"param\"，表示params变化，值为\"query\"，表示query变化\r\n     * @param opts.ignoreChange.viewname 关联的ms-view name\r\n     * @param opts.abstract  表示它不参与匹配，this指向对应的state\r\n     * @param {private} opts.parentState 父状态对象（框架内部生成）\r\n     */\r\n    avalon.state = function (stateName, opts) {\r\n        var state = StateModel(stateName, opts)\r\n        avalon.router.get(state.url, function (params, _local) {\r\n            var me = this, promises = [], _resovle, _reject, _data = [], _callbacks = []\r\n            state.resolved = getPromise(function (rs, rj) {\r\n                _resovle = rs\r\n                _reject = rj\r\n            })\r\n            avalon.each(state.views, function (name, view) {\r\n                var params = me.params,\r\n                        reason = {\r\n                            type: \"view\",\r\n                            name: name,\r\n                            params: params,\r\n                            state: state,\r\n                            view: view\r\n                        },\r\n                viewLocal = _local[name] = {\r\n                    name: name,\r\n                    state: state,\r\n                    params: state.filterParams(params),\r\n                    ignoreChange: \"ignoreChange\" in view ? view.ignoreChange : me.ignoreChange,\r\n                    viewCache: \"viewCache\" in view ? view.viewCache : me.viewCache\r\n                },\r\n                promise = fromPromise(view, params, reason)\r\n                promises.push(promise)\r\n                // template不能cache\r\n                promise.then(function (s) {\r\n                    viewLocal.template = s\r\n                }, avalon.noop) // 捕获模板报错\r\n                var prom,\r\n                        callback = function ($ctrl) {\r\n                            viewLocal.vmodels = $ctrl.$vmodels\r\n                            view.$controller = viewLocal.$ctrl = $ctrl\r\n                            resolveData()\r\n                        },\r\n                        resolveData = function () {\r\n                            var $onEnter = view.$controller && view.$controller.$onEnter\r\n                            if ($onEnter) {\r\n                                var innerProm = getPromise(function (rs, rj) {\r\n                                    var reason = {\r\n                                        type: \"data\",\r\n                                        state: state,\r\n                                        params: params\r\n                                    },\r\n                                    res = $onEnter(params, rs, function (message) {\r\n                                        reason.message = message\r\n                                        rj(reason)\r\n                                    })\r\n                                    // if promise\r\n                                    if (res && res.then) {\r\n                                        _data.push(res)\r\n                                        res.then(function () {\r\n                                            rs(res)\r\n                                        })\r\n                                        // error msg\r\n                                    } else if (res && res !== true) {\r\n                                        reason.message = res\r\n                                        rj(reason)\r\n                                    } else if (res === undefine) {\r\n                                        rs()\r\n                                    }\r\n                                    // res === false will pause here\r\n                                })\r\n                                innerProm = innerProm.then(function (cb) {\r\n                                    avalon.isFunction(cb) && _callbacks.push(cb)\r\n                                })\r\n                                _data.push(innerProm)\r\n                            }\r\n                        }\r\n                // controller似乎可以缓存着\r\n                if (view.$controller && view.cacheController !== false) {\r\n                    return callback(view.$controller)\r\n                }\r\n                // 加载controller模块\r\n                if (view.controller) {\r\n                    prom = promise.then(function () {\r\n                        callback(avalon.controller(view.controller))\r\n                    })\r\n                } else if (view.controllerUrl) {\r\n                    prom = getPromise(function (rs, rj) {\r\n                        var url = avalon.isFunction(view.controllerUrl) ? view.controllerUrl(params) : view.controllerUrl\r\n                        url = url instanceof Array ? url : [url]\r\n                        avalon.controller.loader(url, function ($ctrl) {\r\n                            promise.then(function () {\r\n                                callback($ctrl)\r\n                                rs()\r\n                            })\r\n                        })\r\n                    })\r\n                } else if (view.controllerProvider) {\r\n                    var res = avalon.isFunction(view.controllerProvider) ? view.controllerProvider(params) : view.controllerProvider\r\n                    prom = getPromise(function (rs, rj) {\r\n                        // if promise\r\n                        if (res && res.then) {\r\n                            _data.push(res)\r\n                            res.then(function (r) {\r\n                                promise.then(function () {\r\n                                    callback(r)\r\n                                    rs()\r\n                                })\r\n                            }, function (e) {\r\n                                reason.message = e\r\n                                rj(reason)\r\n                            })\r\n                            // error msg\r\n                        } else {\r\n                            promise.then(function () {\r\n                                callback(res)\r\n                                rs()\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n                // is promise\r\n                if (prom && prom.then) {\r\n                    promises.push(prom)\r\n                }\r\n            })\r\n            // 模板和controller就绪\r\n            getPromise(promises).$then(function (values) {\r\n                state._local = _local\r\n                // 数据就绪\r\n                getPromise(_data).$then(function () {\r\n                    avalon.each(_callbacks, function (i, func) {\r\n                        func()\r\n                    })\r\n                    promises = _data = _callbacks = null\r\n                    _resovle()\r\n                })\r\n            })\r\n            return state.resolved\r\n\r\n        }, state)\r\n\r\n        return this\r\n    }\r\n\r\n    function isError(e) {\r\n        return e instanceof Error\r\n    }\r\n\r\n    // 将所有的promise error适配到这里来\r\n    function promiseError(e) {\r\n        if (isError(e)) {\r\n            throw e\r\n        } else {\r\n            callStateFunc(\"onError\", mmState, e, e && e.state)\r\n        }\r\n    }\r\n\r\n    function getPromise(excutor) {\r\n        var prom = avalon.isFunction(excutor) ? new Promise(excutor) : Promise.all(excutor)\r\n        return prom\r\n    }\r\n    Promise.prototype.$then = function (onFulfilled, onRejected) {\r\n        var prom = this.then(onFulfilled, onRejected)\r\n        prom[\"catch\"](promiseError)\r\n        return prom\r\n    }\r\n    avalon.state.onViewEntered = function (newNode, oldNode) {\r\n        if (newNode != oldNode)\r\n            oldNode.parentNode.removeChild(oldNode)\r\n    }\r\n    /*\r\n     *  @interface avalon.state.config 全局配置\r\n     *  @param {Object} config 配置对象\r\n     *  @param {Function} config.onBeforeUnload 开始切前的回调，this指向router对象，第一个参数是fromState，第二个参数是toState，return false可以用来阻止切换进行\r\n     *  @param {Function} config.onAbort onBeforeUnload return false之后，触发的回调，this指向mmState对象，参数同onBeforeUnload\r\n     *  @param {Function} config.onUnload url切换时候触发，this指向mmState对象，参数同onBeforeUnload\r\n     *  @param {Function} config.onBegin  开始切换的回调，this指向mmState对象，参数同onBeforeUnload，如果配置了onBegin，则忽略begin\r\n     *  @param {Function} config.onLoad 切换完成并成功，this指向mmState对象，参数同onBeforeUnload\r\n     *  @param {Function} config.onViewEnter 视图插入动画函数，有一个默认效果\r\n     *  @param {Node} config.onViewEnter.arguments[0] 新视图节点\r\n     *  @param {Node} config.onViewEnter.arguments[1] 旧的节点\r\n     *  @param {Function} config.onError 出错的回调，this指向对应的state，第一个参数是一个object，object.type表示出错的类型，比如view表示加载出错，object.name则对应出错的view name，object.xhr则是当使用默认模板加载器的时候的httpRequest对象，第二个参数是对应的state\r\n     */\r\n    avalon.state.config = function (config) {\r\n        avalon.mix(avalon.state, config || {})\r\n        return avalon\r\n    }\r\n    function callStateFunc(name, state) {\r\n        Event.$fire.apply(Event, arguments)\r\n        return avalon.state[name] ? avalon.state[name].apply(state || mmState.currentState, [].slice.call(arguments, 2)) : 0\r\n    }\r\n    // 状态原型，所有的状态都要继承这个原型\r\n    function StateModel(stateName, options) {\r\n        if (this instanceof StateModel) {\r\n            this.stateName = stateName\r\n            this.formate(options)\r\n        } else {\r\n            var state = _states[stateName] = new StateModel(stateName, options || {})\r\n            return state\r\n        }\r\n    }\r\n    StateModel.is = function (state) {\r\n        return state instanceof StateModel\r\n    }\r\n    StateModel.prototype = {\r\n        formate: function (options) {\r\n            avalon.mix(true, this, options)\r\n            var stateName = this.stateName,\r\n                me = this,\r\n                chain = stateName.split(\".\"),\r\n                len = chain.length - 1/*,\r\n                sourceLocal = me.sourceLocal = {}*/\r\n            this.chain = []\r\n            avalon.each(chain, function (key, name) {\r\n                if (key == len) {\r\n                    me.chain.push(me)\r\n                } else {\r\n                    var n = chain.slice(0, key + 1).join(\".\"),\r\n                            state = getStateByName(n)\r\n                    if (!state)\r\n                        throw new Error(\"必须先定义\" + n)\r\n                    me.chain.push(state)\r\n                }\r\n            })\r\n            if (this.url === void 0) {\r\n                this.abstract = true\r\n            }\r\n            var _parent = this.chain[len - 1] || _root\r\n            if (_parent) {\r\n                this.url = _parent.url + (this.url || \"\")\r\n                this.parentState = _parent\r\n            }\r\n            // state的views等属性需要异步按需加载\r\n            if (!this.stateUrl) this.initViewsConfig()\r\n            this._self = options\r\n            this._pending = false\r\n            this.visited = false\r\n            this.params = inherit(_parent && _parent.params || {})\r\n            this.oldParams = {}\r\n            this.keys = []\r\n\r\n            this.events = {}\r\n        },\r\n        initViewsConfig: function () {\r\n            var me = this,\r\n                sourceLocal = this.sourceLocal = {},\r\n                stateName = this.statename,\r\n                _parent = this.parentState\r\n            if (!this.views && stateName != \"\") {\r\n                var view = {}\r\n                \"template,templateUrl,templateProvider,controller,controllerUrl,controllerProvider,viewCache\".replace(/\\w+/g, function (prop) {\r\n                    copyTemplateProperty(view, me, prop)\r\n                })\r\n                var viewname = \"viewname\" in this ? this.viewname : \"\"\r\n                this.views = {}\r\n                this.views[viewname] = view\r\n            }\r\n            var views = {},\r\n                viewsIsArray = this.views instanceof Array // 如果是一个数组\r\n\r\n            avalon.each(this.views, function (maybeName, view) {\r\n                var name = viewsIsArray ? view.name || \"\" : maybeName // 默认缺省\r\n                if (name.indexOf(\"@\") < 0) {\r\n                    name += \"@\" + (_parent ? _parent.stateName || \"\" : \"\")\r\n                }\r\n                views[name] = view\r\n                sourceLocal[name] = {}\r\n            })\r\n            this.views = views\r\n        },\r\n        watch: function (eventName, func) {\r\n            var events = this.events[eventName] || []\r\n            this.events[eventName] = events\r\n            events.push(func)\r\n            return func\r\n        },\r\n        fire: function (eventName, state) {\r\n            var events = this.events[eventName] || [], i = 0\r\n            while (events[i]) {\r\n                var res = events[i].apply(this, [].slice.call(arguments, 1))\r\n                if (res === false) {\r\n                    events.splice(i, 1)\r\n                } else {\r\n                    i++\r\n                }\r\n            }\r\n        },\r\n        unwatch: function (eventName, func) {\r\n            var events = this.events[eventName]\r\n            if (!events)\r\n                return\r\n            var i = 0\r\n            while (events[i]) {\r\n                if (events[i] == func)\r\n                    return events.splice(i, 1)\r\n                i++\r\n            }\r\n        },\r\n        paramsChanged: function (toParams) {\r\n            var changed = false, keys = this.keys, me = this, params = this.params\r\n            avalon.each(keys, function (index, item) {\r\n                var key = item.name\r\n                if (params[key] != toParams[key])\r\n                    changed = \"param\"\r\n            })\r\n            // query\r\n            if (!changed && mmState.currentState === this) {\r\n                changed = !objectCompare(toParams.query, mmState.query) && \"query\"\r\n            }\r\n            return changed\r\n        },\r\n        filterParams: function (toParams) {\r\n            var params = avalon.mix(true, {}, this.params), keys = this.keys\r\n            avalon.each(keys, function (index, item) {\r\n                params[item.name] = toParams[item.name]\r\n            })\r\n            return params\r\n        },\r\n        syncParams: function (toParams) {\r\n            var me = this\r\n            avalon.each(this.keys, function (index, item) {\r\n                var key = item.name\r\n                if (key in toParams)\r\n                    me.params[key] = toParams[key]\r\n            })\r\n        },\r\n        _onEnter: function () {\r\n            this.query = this.getQuery()\r\n            var me = this,\r\n                    arg = Array.prototype.slice.call(arguments),\r\n                    done = me._async(),\r\n                    prom = getPromise(function (rs, rj) {\r\n                        var reason = {\r\n                            type: \"data\",\r\n                            state: me,\r\n                            params: me.params\r\n                        },\r\n                        _reject = function (message) {\r\n                            reason.message = message\r\n                            done.apply(me, [false])\r\n                            rj(reason)\r\n                        },\r\n                                _resovle = function () {\r\n                                    done.apply(me)\r\n                                    rs()\r\n                                },\r\n                                res = me.onEnter.apply(me, arg.concat([_resovle, _reject]))\r\n                        // if promise\r\n                        if (res && res.then) {\r\n                            res.then(_resovle)[\"catch\"](promiseError)\r\n                            // error msg\r\n                        } else if (res && res !== true) {\r\n                            _reject(res)\r\n                        } else if (res === undefine) {\r\n                            _resovle()\r\n                        }\r\n                        // res === false will pause here\r\n                    })\r\n        },\r\n        /*\r\n         * @interface state.getQuery 获取state的query，等价于state.query\r\n         *<pre>\r\n         *  onEnter: function() {\r\n         *      var query = this.getQuery()\r\n         *      or\r\n         *      this.query\r\n         *  }\r\n         *</pre> \r\n         */\r\n        getQuery: function () {\r\n            return mmState.query\r\n        },\r\n        /*\r\n         * @interface state.getParams 获取state的params，等价于state.params\r\n         *<pre>\r\n         *  onEnter: function() {\r\n         *      var params = this.getParams()\r\n         *      or\r\n         *      this.params\r\n         *  }\r\n         *</pre> \r\n         */\r\n        getParams: function () {\r\n            return this.params\r\n        },\r\n        _async: function () {\r\n            // 没有done回调的时候，防止死球\r\n            if (this.done)\r\n                this._pending = true\r\n            return this.done || avalon.noop\r\n        },\r\n        onBeforeEnter: avalon.noop, // 切入某个state之前触发\r\n        onEnter: avalon.noop, // 切入触发\r\n        onBeforeExit: avalon.noop, // state退出前触发\r\n        onExit: avalon.noop // 退出后触发\r\n    }\r\n\r\n    _root = StateModel(\"\", {\r\n        url: \"\",\r\n        views: null,\r\n        \"abstract\": true\r\n    })\r\n\r\n    /*\r\n     * @interface avalon.controller 给avalon.state视图对象配置控制器\r\n     * @param name 控制器名字\r\n     * @param {Function} factory 控制器函数，传递一个内部生成的控制器对象作为参数\r\n     * @param {Object} factory.arguments[0] $ctrl 控制器的第一个参数：实际生成的控制器对象\r\n     * @param {Object} $ctrl.$vmodels 给视图指定一个scan的vmodels数组，实际scan的时候$vmodels.concat(dom树上下文继承的vmodels)\r\n     * @param {Function} $ctrl.$onBeforeUnload 该视图被卸载前触发，return false可以阻止视图卸载，并阻止跳转\r\n     * @param {Function} $ctrl.$onEnter 给该视图加载数据，可以返回false，或任意不为true的错误信息或一个promise对象，传递3个参数\r\n     * @param {Object} $ctrl.$onEnter.arguments[0] params第一个参数：视图所属的state的参数\r\n     * @param {Function} $ctrl.$onEnter.arguments[1] resolve $onEnter 第二个参数：return false的时候，进入同步等待，直到手动调用resolve\r\n     * @param {Function} $ctrl.$onEnter.arguments[2] reject 第三个参数：数据加载失败，调用\r\n     * @param {Function} $ctrl.$onRendered 视图元素scan完成之后，调用\r\n     */\r\n    avalon.controller = function () {\r\n        var first = arguments[0],\r\n                second = arguments[1]\r\n        if (first && (first instanceof _controller))\r\n            return first\r\n        var $ctrl = _controller()\r\n        if (avalon.isFunction(first)) {\r\n            first($ctrl)\r\n        } else if (avalon.isFunction(second)) {\r\n            $ctrl.name = first\r\n            second($ctrl)\r\n        } else if (typeof first == \"string\" || typeof first == \"object\") {\r\n            first = first instanceof Array ? first : Array.prototype.slice.call(arguments)\r\n            avalon.each(first, function (index, item) {\r\n                if (typeof item == \"string\") {\r\n                    first[index] = avalon.vmodels[item]\r\n                }\r\n                item = first[index]\r\n                if (\"$onRendered\" in item)\r\n                    $ctrl.$onRendered = item[\"$onRendered\"]\r\n                if (\"$onEnter\" in  item)\r\n                    $ctrl.$onEnter = item[\"$onEnter\"]\r\n            })\r\n            $ctrl.$vmodels = first\r\n        } else {\r\n            throw new Error(\"参数错误\" + arguments)\r\n        }\r\n        return $ctrl\r\n    }\r\n    /*\r\n     *  @interface avalon.controller.loader avalon.controller异步引入模块的加载器，默认是通过avalon.require加载\r\n     */\r\n    avalon.controller.loader = function (url, callback) {\r\n        // 没有错误回调...\r\n        function wrapper($ctrl) {\r\n            callback && callback($ctrl)\r\n        }\r\n        url = url instanceof Array ? url : [url]\r\n        if (window.requirejs) {\r\n            requirejs(url, wrapper)\r\n        } else if (typeof require === \"function\" && require.ensure) {\r\n            require.ensure(url, wrapper)\r\n        } else if (avalon.require) {\r\n            avalon.require(url, wrapper)\r\n        } else { // 抛个错误，方便调试\r\n            throw Error('未能找有效的模块加载器异步加载\"' + url + '\"，请参照mmState.js的avalon.controller.loader源码进行修改')\r\n        }\r\n    }\r\n\r\n    function _controller() {\r\n        if (!(this instanceof _controller))\r\n            return new _controller\r\n        this.$vmodels = []\r\n    }\r\n    _controller.prototype = {\r\n    }\r\n\r\n    function objectCompare(objA, objB) {\r\n        if (!objA || !objB) return false\r\n        for (var i in objA) {\r\n            if (!(i in objB) || objA[i] !== objB[i])\r\n                return false\r\n        }\r\n        for (var i in objB) {\r\n            if (!(i in objA) || objA[i] !== objB[i])\r\n                return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    //【avalon.state】的辅助函数，确保返回的是函数\r\n    function getFn(object, name) {\r\n        return typeof object[name] === \"function\" ? object[name] : avalon.noop\r\n    }\r\n\r\n    function getStateByName(stateName) {\r\n        return _states[stateName]\r\n    }\r\n    function getViewNodes(node, query) {\r\n        var nodes, query = query || \"ms-view\"\r\n        if (node.querySelectorAll) {\r\n            nodes = node.querySelectorAll(\"[\" + query + \"]\")\r\n        } else {\r\n            nodes = Array.prototype.filter.call(node.getElementsByTagName(\"*\"), function (node) {\r\n                return typeof node.getAttribute(query) === \"string\"\r\n            })\r\n        }\r\n        return nodes\r\n    }\r\n\r\n    // 【avalon.state】的辅助函数，opts.template的处理函数\r\n    function fromString(template, params, reason) {\r\n        var promise = getPromise(function (resolve, reject) {\r\n            var str = typeof template === \"function\" ? template(params) : template\r\n            if (typeof str == \"string\") {\r\n                resolve(str)\r\n            } else {\r\n                reason.message = \"template必须对应一个字符串或一个返回字符串的函数\"\r\n                reject(reason)\r\n            }\r\n        })\r\n        return promise\r\n    }\r\n    // 【fromUrl】的辅助函数，得到一个XMLHttpRequest对象\r\n    var getXHR = function () {\r\n        return new (window.XMLHttpRequest || ActiveXObject)(\"Microsoft.XMLHTTP\")\r\n    }/*\r\n     *  @interface avalon.state.templateLoader 通过url异步加载模板的函数，默认是通过内置的httpRequest去加载，但是在node-webkit环境是不work的，因此开放了这个配置，用以自定义url模板加载器，会在一个promise实例里调用这个方法去加载模板\r\n     *  @param url 模板地址\r\n     *  @param resolve 加载成功，如果需要缓存模板，请调用<br>\r\n     resolve(avalon.templateCache[url] = templateString)<br>\r\n     否则，请调用<br>\r\n     resolve(templateString)<br>\r\n     *  @param reject 加载失败，请调用reject(reason)\r\n     *  @param reason 挂在失败原因的对象\r\n     */\r\n    avalon.state.templateLoader = function (url, resolve, reject, reason) {\r\n        var xhr = getXHR()\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                var status = xhr.status;\r\n                if (status > 399 && status < 600) {\r\n                    reason.message = \"templateUrl对应资源不存在或没有开启 CORS\"\r\n                    reason.status = status\r\n                    reason.xhr = xhr\r\n                    reject(reason)\r\n                } else {\r\n                    resolve(avalon.templateCache[url] = xhr.responseText)\r\n                }\r\n            }\r\n        }\r\n        xhr.open(\"GET\", url, true)\r\n        if (\"withCredentials\" in xhr) {\r\n            xhr.withCredentials = true\r\n        }\r\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n        xhr.send()\r\n    }\r\n    // 【avalon.state】的辅助函数，opts.templateUrl的处理函数\r\n    function fromUrl(url, params, reason) {\r\n        var promise = getPromise(function (resolve, reject) {\r\n            if (typeof url === \"function\") {\r\n                url = url(params)\r\n            }\r\n            if (typeof url !== \"string\") {\r\n                reason.message = \"templateUrl必须对应一个URL\"\r\n                return reject(reason)\r\n            }\r\n            if (avalon.templateCache[url]) {\r\n                return  resolve(avalon.templateCache[url])\r\n            }\r\n            avalon.state.templateLoader(url, resolve, reject, reason)\r\n        })\r\n        return promise\r\n    }\r\n    // 【avalon.state】的辅助函数，opts.templateProvider的处理函数\r\n    function fromProvider(fn, params, reason) {\r\n        var promise = getPromise(function (resolve, reject) {\r\n            if (typeof fn === \"function\") {\r\n                var ret = fn(params)\r\n                if (ret && ret.then || typeof ret == \"string\") {\r\n                    resolve(ret)\r\n                } else {\r\n                    reason.message = \"templateProvider为函数时应该返回一个Promise或thenable对象或字符串\"\r\n                    reject(reason)\r\n                }\r\n            } else if (fn && fn.then) {\r\n                resolve(fn)\r\n            } else {\r\n                reason.message = \"templateProvider不为函数时应该对应一个Promise或thenable对象\"\r\n                reject(reason)\r\n            }\r\n        })\r\n        return promise\r\n    }\r\n    // 【avalon.state】的辅助函数，将template或templateUrl或templateProvider转换为可用的Promise对象\r\n    function fromPromise(config, params, reason) {\r\n        return config.template ? fromString(config.template, params, reason) :\r\n                config.templateUrl ? fromUrl(config.templateUrl, params, reason) :\r\n                config.templateProvider ? fromProvider(config.templateProvider, params, reason) :\r\n                getPromise(function (resolve, reject) {\r\n                    reason.message = \"必须存在template, templateUrl, templateProvider中的一个\"\r\n                    reject(reason)\r\n                })\r\n    }\r\n})\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/base/js/mmRouter/mmState.js\n ** module id = 21\n ** module chunks = 0\n **/","var map = {\n\t\"./mmHistory\": 19,\n\t\"./mmHistory.js\": 19,\n\t\"./mmPromise\": 23,\n\t\"./mmPromise.js\": 23,\n\t\"./mmRouter\": 20,\n\t\"./mmRouter.js\": 20,\n\t\"./mmState\": 21,\n\t\"./mmState.js\": 21\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 22;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/base/js/mmRouter ^\\.\\/.*$\n ** module id = 22\n ** module chunks = 0\n **/","define([\"avalon\"], function (avalon) {\n//chrome36的原生Promise还多了一个defer()静态方法，允许不通过传参就能生成Promise实例，\n//另还多了一个chain(onSuccess, onFail)原型方法，意义不明\n//目前，firefox24, opera19也支持原生Promise(chrome32就支持了，但需要打开开关，自36起直接可用)\n//本模块提供的Promise完整实现ECMA262v6 的Promise规范\n//2015.3.12 支持async属性\n    function ok(val) {\n        return val\n    }\n    function ng(e) {\n        throw e\n    }\n\n    function done(onSuccess) {//添加成功回调\n        return this.then(onSuccess, ng)\n    }\n    function fail(onFail) {//添加出错回调\n        return this.then(ok, onFail)\n    }\n    function defer() {\n        var ret = {};\n        ret.promise = new this(function (resolve, reject) {\n            ret.resolve = resolve\n            ret.reject = reject\n        });\n        return ret\n    }\n    var msPromise = function (executor) {\n        this._callbacks = []\n        var me = this\n        if (typeof this !== \"object\")\n            throw new TypeError(\"Promises must be constructed via new\")\n        if (typeof executor !== \"function\")\n            throw new TypeError(\"not a function\")\n\n        executor(function (value) {\n            _resolve(me, value)\n        }, function (reason) {\n            _reject(me, reason)\n        })\n    }\n    function fireCallbacks(promise, fn) {\n        if (typeof promise.async === \"boolean\") {\n            var isAsync = promise.async\n        } else {\n            isAsync = promise.async = true\n        }\n        if (isAsync) {\n            window.setTimeout(fn, 0)\n        } else {\n            fn()\n        }\n    }\n//返回一个已经处于`resolved`状态的Promise对象\n    msPromise.resolve = function (value) {\n        return new msPromise(function (resolve) {\n            resolve(value)\n        })\n    }\n//返回一个已经处于`rejected`状态的Promise对象\n    msPromise.reject = function (reason) {\n        return new msPromise(function (resolve, reject) {\n            reject(reason)\n        })\n    }\n\n    msPromise.prototype = {\n//一个Promise对象一共有3个状态：\n//- `pending`：还处在等待状态，并没有明确最终结果\n//- `resolved`：任务已经完成，处在成功状态\n//- `rejected`：任务已经完成，处在失败状态\n        constructor: msPromise,\n        _state: \"pending\",\n        _fired: false, //判定是否已经被触发\n        _fire: function (onSuccess, onFail) {\n            if (this._state === \"rejected\") {\n                if (typeof onFail === \"function\") {\n                    onFail(this._value)\n                } else {\n                    throw this._value\n                }\n            } else {\n                if (typeof onSuccess === \"function\") {\n                    onSuccess(this._value)\n                }\n            }\n        },\n        _then: function (onSuccess, onFail) {\n            if (this._fired) {//在已有Promise上添加回调\n                var me = this\n                fireCallbacks(me, function () {\n                    me._fire(onSuccess, onFail)\n                });\n            } else {\n                this._callbacks.push({onSuccess: onSuccess, onFail: onFail})\n            }\n        },\n        then: function (onSuccess, onFail) {\n            onSuccess = typeof onSuccess === \"function\" ? onSuccess : ok\n            onFail = typeof onFail === \"function\" ? onFail : ng\n            var me = this//在新的Promise上添加回调\n            var nextPromise = new msPromise(function (resolve, reject) {\n                me._then(function (value) {\n                    try {\n                        value = onSuccess(value)\n                    } catch (e) {\n                        // https://promisesaplus.com/#point-55\n                        reject(e)\n                        return\n                    }\n                    resolve(value)\n                }, function (value) {\n                    try {\n                        value = onFail(value)\n                    } catch (e) {\n                        reject(e)\n                        return\n                    }\n                    resolve(value)\n                })\n            })\n            for (var i in me) {\n                if (!personal[i]) {\n                    nextPromise[i] = me[i]\n                }\n            }\n            return nextPromise\n        },\n        \"done\": done,\n        \"catch\": fail,\n        \"fail\": fail\n    }\n    var personal = {\n        _state: 1,\n        _fired: 1,\n        _value: 1,\n        _callbacks: 1\n    }\n    function _resolve(promise, value) {//触发成功回调\n        if (promise._state !== \"pending\")\n            return;\n        if (value && typeof value.then === \"function\") {\n//thenable对象使用then，Promise实例使用_then\n            var method = value instanceof msPromise ? \"_then\" : \"then\"\n            value[method](function (val) {\n                _transmit(promise, val, true)\n            }, function (reason) {\n                _transmit(promise, reason, false)\n            });\n        } else {\n            _transmit(promise, value, true);\n        }\n    }\n    function _reject(promise, value) {//触发失败回调\n        if (promise._state !== \"pending\")\n            return\n        _transmit(promise, value, false)\n    }\n//改变Promise的_fired值，并保持用户传参，触发所有回调\n    function _transmit(promise, value, isResolved) {\n        promise._fired = true;\n        promise._value = value;\n        promise._state = isResolved ? \"fulfilled\" : \"rejected\"\n        fireCallbacks(promise, function () {\n            promise._callbacks.forEach(function (data) {\n                promise._fire(data.onSuccess, data.onFail);\n            })\n        })\n    }\n    function _some(any, iterable) {\n        iterable = Array.isArray(iterable) ? iterable : []\n        var n = 0, result = [], end\n        return new msPromise(function (resolve, reject) {\n            // 空数组直接resolve\n            if (!iterable.length)\n                resolve(result)\n            function loop(a, index) {\n                a.then(function (ret) {\n                    if (!end) {\n                        result[index] = ret//保证回调的顺序\n                        n++\n                        if (any || n >= iterable.length) {\n                            resolve(any ? ret : result)\n                            end = true\n                        }\n                    }\n                }, function (e) {\n                    end = true\n                    reject(e)\n                })\n            }\n            for (var i = 0, l = iterable.length; i < l; i++) {\n                loop(iterable[i], i)\n            }\n        })\n    }\n\n    msPromise.all = function (iterable) {\n        return _some(false, iterable)\n    }\n    msPromise.race = function (iterable) {\n        return _some(true, iterable)\n    }\n    msPromise.defer = defer\n\n\n\n    avalon.Promise = msPromise\n    var nativePromise = window.Promise\n    if (/native code/.test(nativePromise)) {\n        nativePromise.prototype.done = done\n        nativePromise.prototype.fail = fail\n        if (!nativePromise.defer) { //chrome实现的私有方法\n            nativePromise.defer = defer\n        }\n    }\n    return window.Promise = nativePromise || msPromise\n\n})\n//https://github.com/ecomfe/er/blob/master/src/Deferred.js\n//http://jser.info/post/77696682011/es6-promises\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/base/js/mmRouter/mmPromise.js\n ** module id = 23\n ** module chunks = 0\n **/","define(['avalon', 'text!./mc.accordion.html', './mc.accordion.min.css'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:accordion\", {\r\n        //外部属性\r\n        tindex: -1, //组件在表格中行index\r\n        tdata: \"\",\r\n        active: 0, //表示当前激活项\r\n        padding: 15, //panel-body 的 padding\r\n        //外部参数\r\n        panels: [],\r\n        onChanged: _interface,\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        $allPanelBody: null,\r\n\r\n        //view接口\r\n        renderTestIn: _interface,\r\n        renderTest: _interface,\r\n\r\n        onInit: _interface, //必须定义此接口\r\n        initTableData: _interface,\r\n        renderContent: _interface,\r\n        clickPanel: _interface,\r\n        _trigger: _interface,\r\n        setActive: _interface,\r\n        getActive: _interface,\r\n\r\n        //默认配置\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            if (vmOpts.panels != undefined) {\r\n                //初始化slot标签页内容用属性\r\n                for (var i = 0; i < vmOpts.panels.length; i++) {\r\n                    hooks['content' + i] = '';\r\n                }\r\n            }\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = '';\r\n        },\r\n        $init: function (vm, elem) {\r\n            //内部方法\r\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case 'changed':\r\n                        if (typeof vm.onChanged == 'function') {\r\n                            vm.onChanged(ev, {\r\n                                \"setActive\": vm.setActive,\r\n                                \"getActive\": vm.getActive\r\n                            });\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            //接口方法\r\n            vm.renderContent = function (idx) {\r\n                return vm['content' + idx];\r\n            }\r\n            vm.clickPanel = function (ev, idx) {\r\n                if (idx != vm.active) { //判断点击的是否是当前项\r\n                    //非当前项\r\n                    vm.$allPanelBody.eq(vm.active).slideUp(300); //收起上一项\r\n                    vm.$allPanelBody.eq(idx).slideDown(300); //展开当前项\r\n                    vm.active = idx;\r\n                } else {\r\n                    //当前项\r\n                    vm.$allPanelBody.eq(idx).slideUp(300); //收起当前项\r\n                    vm.active = -1; //激活项置为-1\r\n                }\r\n            }\r\n            //对外方法\r\n            vm.setActive = function (idx) {\r\n                if (idx != vm.active) { //判断是否是当前项\r\n                    //非当前项\r\n                    vm.$allPanelBody.eq(vm.active).slideUp(300); //收起上一项\r\n                    vm.$allPanelBody.eq(idx).slideDown(300); //展开当前项\r\n                    vm.active = idx;\r\n                }\r\n            }\r\n            vm.getActive = function () {\r\n                return vm.active;\r\n            }\r\n            //观测方法\r\n            vm.$watch('active', function (newVal, oldVal) {\r\n                if (newVal == -1 || oldVal == -1) return;\r\n                vm._trigger({ newVal: newVal, oldVal: oldVal }, 'changed');\r\n                if (typeof vm.panels[newVal].fun == 'function') {\r\n                    vm.panels[newVal].fun({ newVal: newVal, oldVal: oldVal }, vm);\r\n                }\r\n            });\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.$allPanelBody = $(elem).find(\".panel-body\"); //缓存$allPanelBody\r\n            vm.$allPanelBody.eq(vm.active).slideDown(0); //展开当前项\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.initTableData(vm, elem);\r\n            vm.isInit = false;\r\n            if (typeof vm.panels[vm.active].fun == 'function') {\r\n                vm.panels[vm.active].fun({}, vm);\r\n            }\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:accordion\"];\r\n    widget.regionals = {};\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/accordion/mc.accordion.js\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-accordion-cotar\\\">\\r\\n    <div class=\\\"panel-wrap\\\" ms-repeat=\\\"panels\\\" ms-class=\\\"last:$last\\\" ms-class-1=\\\"active:$index==active\\\">\\r\\n        <div class=\\\"panel-header\\\" ms-click=\\\"clickPanel($event, $index)\\\">\\r\\n            <!--<h4 class=\\\"panel-title\\\">\\r\\n                <a href=\\\"javascript:void(0)\\\">{{el.title}}</a>\\r\\n            </h4>-->\\r\\n            <a href=\\\"javascript:void(0)\\\">{{el.title}}</a>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\" ms-css-padding=\\\"padding\\\">\\r\\n            {{renderContent($index)|html}}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/accordion/mc.accordion.html\n ** module id = 25\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/accordion/mc.accordion.min.css\n ** module id = 26\n ** module chunks = 0\n **/","toSideBarData = function (data) {\r\n    var result = [];\r\n    //has checked end\r\n    avalon.each(data, function (i, item) {\r\n        result.push(item);\r\n        item.select = item.select || false;\r\n        item.children = item.children || [];\r\n        //递归赋值 \r\n        if (item.children.length) {\r\n            item.children = toSideBarData(item.children);\r\n        }\r\n    });\r\n    return result;\r\n};\r\n\r\ndefine(['avalon', 'text!./mc.sidebar.html', './mc.sidebar.min.css'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:sidebar\", {\r\n        //外部属性\r\n        active: 0, //表示当前激活项\r\n        padding: 0, //panel-body 的 padding\r\n        //外部参数\r\n        sidebarList: [],\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        $allPanel: null,\r\n        $allPanelBody: null,\r\n        //view接口\r\n        onInit: _interface, //必须定义此接口\r\n        changeData: _interface,\r\n        renderContent: _interface,\r\n        clickPanel: _interface,\r\n        _trigger: _interface,\r\n        setActive: _interface,\r\n        getActive: _interface,\r\n        setSelect: _interface,\r\n        //默认配置\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            if (vmOpts.data) {\r\n                if (typeof (vmOpts.data) === 'function') {\r\n                    vmOpts.data = vmOpts.data();\r\n                }\r\n                vmOpts.data = toSideBarData(vmOpts.data);\r\n            }\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //内部方法\r\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case 'changed':\r\n                        if (typeof vm.onChanged == 'function') {\r\n                            vm.onChanged(ev, {\r\n                                \"setActive\": vm.setActive,\r\n                                \"getActive\": vm.getActive\r\n                            });\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            //接口方法\r\n            vm.renderContent = function (idx) {\r\n                return vm['content' + idx];\r\n            }\r\n            vm.changeData = function (newData) {\r\n                //trans\r\n                vm.sidebarList = toSideBarData(newData);\r\n            }\r\n            vm.clickPanel = function (ev, idx) {\r\n                avalon.log(idx);\r\n                if (idx != vm.active) { //判断点击的是否是当前项\r\n                    //非当前项\r\n                    vm.$allPanelBody.eq(vm.active).slideUp(300); //收起上一项\r\n                    vm.$allPanelBody.eq(idx).slideDown(300); //展开当前项\r\n                    vm.active = idx;\r\n                } else {\r\n                    //当前项\r\n                    vm.$allPanelBody.eq(idx).slideUp(300); //收起当前项\r\n                    vm.active = -1; //激活项置为-1\r\n                }\r\n            }\r\n            //对外方法\r\n            vm.setActive = function (idx) {\r\n                if (idx != vm.active) { //判断是否是当前项\r\n                    //非当前项\r\n                    vm.$allPanelBody.eq(vm.active).slideUp(300); //收起上一项\r\n                    vm.$allPanelBody.eq(idx).slideDown(300); //展开当前项\r\n                    vm.active = idx;\r\n                }\r\n            }\r\n            vm.getActive = function () {\r\n                return vm.active;\r\n            }\r\n            vm.setSelect = function (href) {\r\n                //todo find\r\n                vm.sidebarList.forEach(function (pat) {\r\n                    //菜单文件位置但是一个文件菜单需要选中\r\n                    if (pat.href) {\r\n                        //判断href是否存在,判断是否为菜单文件还是菜单文件夹\r\n                        pat.select = false;\r\n                        if (pat.href.toLowerCase().indexOf(href.toLowerCase()) > -1) {\r\n                            pat.select = true;\r\n                        }\r\n                    }\r\n                    //子节点选中（因为只支持2级..就类似写死）\r\n                    //todo remove\r\n                    _.each(pat.children, function (child) {\r\n                        child.select = false;\r\n                    });\r\n                    //remove end\r\n                    _.find(pat.children, function (child) {\r\n                        if (child.href.toLowerCase().indexOf(href.toLowerCase()) > -1) {\r\n                            child.select = true;\r\n                            return false;\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n            \r\n            //观测方法\r\n            vm.$watch('sidebarList', function (newVal, oldVal) {\r\n                setTimeout(function() {\r\n                    vm.$allPanelBody = $(\".mc-accordion-cotar .panel-body\"); //缓存$allPanelBody\r\n                    //vm.$allPanelBody.eq(vm.active).slideDown(0); //展开当前项\r\n                }, 500);\r\n            });\r\n\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            //vm.$allPanel = $(elem);\r\n            vm.$allPanelBody = $(elem).find(\".panel-body\"); //缓存$allPanelBody\r\n            vm.$allPanelBody.eq(vm.active).slideDown(0); //展开当前项\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n            //if (typeof vm.panels[vm.active].fun == 'function') {\r\n            //    vm.panels[vm.active].fun({}, vm);\r\n            //}\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:sidebar\"];\r\n    widget.regionals = {};\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/sidebar/mc.sidebar.js\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-sidebar-cotar\\\" ms-class=\\\"mc-loading: isInit\\\">\\r\\n    <div class=\\\"mc-accordion-cotar\\\" ms-repeat=\\\"sidebarList\\\">\\r\\n        <div class=\\\"panel-wrap\\\" ms-class=\\\"last:$last\\\" ms-class-1=\\\"active:$index==active\\\" ms-if=\\\"el.children.length>0\\\">\\r\\n            <div class=\\\"panel-header\\\" ms-click=\\\"clickPanel($event, $index)\\\">\\r\\n                <a href=\\\"javascript:void(0)\\\">{{el.text}}</a>\\r\\n            </div>\\r\\n            <div class=\\\"panel-body\\\" ms-css-padding=\\\"padding\\\">\\r\\n                <div class=\\\"mc-accordion-cotar\\\" ms-repeat-el=\\\"el.children\\\">\\r\\n                    <div class=\\\"link-bar hf\\\" ms-class-1=\\\"select:el.select\\\">\\r\\n                        <a class=\\\"fp\\\" ms-attr-href=\\\"el.href ? el.href : 'javascript:void(0)'\\\">{{el.text}}</a>\\r\\n                        <div class=\\\"fp\\\" ms-if=\\\"el.$btn_opt\\\">\\r\\n                            <mc:button ms-attr-config=\\\"el.$btn_opt\\\"></mc:button>\\r\\n                            <!--<mc:droplist config=\\\"$droplist_opt\\\"></mc:droplist>-->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"panel-wrap\\\" ms-class=\\\"last:$last\\\" ms-class-1=\\\"active:$index==active\\\" ms-if=\\\"el.children.length==0\\\">\\r\\n            <div class=\\\"panel-header\\\" ms-class-1=\\\"select:el.select\\\">\\r\\n                <a ms-attr-href=\\\"el.href ? el.href : 'javascript:void(0)'\\\">{{el.text}}</a>\\r\\n            </div>\\r\\n            <div class=\\\"panel-body\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/sidebar/mc.sidebar.html\n ** module id = 28\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/sidebar/mc.sidebar.min.css\n ** module id = 29\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.sidepop.html\", \"./mc.sidepop.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:sidepop\", {\r\n        //外部参数\r\n        headerHeight: 0, //header高度\r\n        footerHeight: 0, //footer高度\r\n        size: \"normal\", //large, small\r\n        padding: 15, //cbody面板的padding\r\n        show: false, //是否显示,默认隐藏\r\n        \r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onShow: null, //侧边弹出层显示\r\n        onClose: null, //侧边弹出层关闭\r\n        onChange: null, //侧边弹出层状态改变\r\n\r\n        //外部接口\r\n        sidePopShow: _interface, //显示侧边弹出层\r\n        sidePopHide: _interface, //隐藏侧边弹出层\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        $scrollBody: $({}), //滚动层\r\n        showAnimate: false, //显示动画\r\n        hideAnimate: false, //关闭动画\r\n\r\n        //内部事件\r\n        clickSidePop: _interface, //侧边弹出层被点击事件\r\n\r\n        //内部接口\r\n        _trigger: _interface, //内部触发器\r\n\r\n        //slot\r\n        cheader: \"\",\r\n        cbody: \"\",\r\n        cfooter: \"\",\r\n\r\n        //默认配置\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //======= 内部事件 START =======//\r\n            vm.clickSidePop = function (ev) {\r\n                if (ev.target.id.indexOf(\"_ueditor\") === -1) {\r\n                    //阻止冒泡(避免点击弹出框时 弹出框关闭)\n                    ev.cancelBubble = true;\r\n                    window.event.cancelBubble = true;\r\n                }\r\n            }\r\n            //======= 内部事件 END =======//\r\n\r\n\r\n            //======= 内部接口 START =======//\r\n            /**doc\r\n             * @description {事件触发器}\r\n             * @param {ev} {动作类型}\r\n             * @param {type} {事件类型}\r\n             * @returns {} \r\n             */\r\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"show\":\r\n                        if (typeof vm.onShow == \"function\") {\r\n                            vm.onShow(ev, vm);\r\n                        }\r\n                        break;\r\n                    case \"close\":\r\n                        if (typeof vm.onClose == \"function\") {\r\n                            vm.onClose(ev, vm);\r\n                        }\r\n                        break;\r\n                    case \"change\":\r\n                        if (typeof vm.onChanger == \"function\") {\r\n                            vm.onChanger(ev, vm);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            //======= 内部接口 END =======//\r\n\r\n\r\n            //======= 外部接口 START =======//\r\n            vm.sidePopShow = function () {\r\n                if (!vm.show) {\r\n                    vm.show = true;\r\n                    vm.showAnimate = true;\r\n                    setTimeout(function() {\r\n                        vm.showAnimate = false;\r\n                    }, 350);\r\n                    vm._trigger({}, \"show\");\r\n                } else {\r\n                    vm.$scrollBody.scrollTop(0); //滚动条滚回顶部\r\n                }\r\n            }\r\n            vm.sidePopHide = function () {\r\n                if (vm.show) {\r\n                    vm.hideAnimate = true;\r\n                    setTimeout(function () {\r\n                        vm.hideAnimate = false;\r\n                        vm.show = false;\r\n                    }, 350);\r\n                    vm._trigger({}, \"hide\");\r\n                }\r\n            }\r\n            //======= 外部接口 END =======//\r\n\r\n\r\n            //======= 观测方法 START =======//\r\n            //弹出层显示时回调\r\n            vm.$watch(\"show\", function (newVal, oldVal) {\r\n                vm.$scrollBody.scrollTop(0); //滚动条滚回顶部\r\n                vm._trigger({ newState: newVal, oldState: oldVal }, \"change\");\r\n            });\r\n            //======= 观测方法 END =======//\r\n        },\r\n        $ready: function (vm, elem) {\r\n            vm.$scrollBody = $(elem).find(\".mc-scroll-wrap\");\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n            McAvalon.$window.on(\"window_click\", function (trigger, ev) {\r\n                if (ev.target.id.indexOf(\"_ueditor\") === -1) {\r\n                    vm.sidePopHide();\r\n                }\r\n            });\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:sidepop\"];\r\n    widget.regionals = {};\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/sidepop/mc.sidepop.js\n ** module id = 30\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-sidepop-cotar\\\" ms-class-1=\\\"mc-sidepop-lg: size=='large'\\\" ms-class-2=\\\"mc-sidepop-sm: size=='small'\\\"\\r\\n     ms-class-3=\\\"mc-sidepop-page: size=='page'\\\" ms-class-4=\\\"mc-sidepop-show: show\\\"\\r\\n     ms-class-5=\\\"mc-hide-animate: hideAnimate\\\" ms-class-6=\\\"mc-show-animate: showAnimate\\\" ms-class-7=\\\"mc-loading: isInit\\\"\\r\\n     ms-click=\\\"clickSidePop($event)\\\">\\r\\n    <div class=\\\"mc-sidepop-wrap\\\">\\r\\n        <div class=\\\"mc-sidepop-header\\\" ms-if=\\\"headerHeight\\\" ms-css-height=\\\"headerHeight\\\">\\r\\n            {{cheader|html}}\\r\\n        </div>\\r\\n        <div class=\\\"mc-scroll-wrap\\\" ms-css-top=\\\"headerHeight\\\" ms-css-bottom=\\\"footerHeight\\\">\\r\\n            <div class=\\\"mc-sidepop-body\\\" ms-css-padding=\\\"padding\\\">\\r\\n                {{cbody|html}}\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"mc-sidepop-footer\\\" ms-if=\\\"footerHeight\\\" ms-css-height=\\\"footerHeight\\\">\\r\\n            {{cfooter|html}}\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/sidepop/mc.sidepop.html\n ** module id = 31\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/sidepop/mc.sidepop.min.css\n ** module id = 32\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.datagrid.html\", \"./mc.datagrid.min.css\", \"mcCheckbox\", \"mcButton\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:datagrid\", {\r\n        //外部参数\r\n        title: \"\", //数据表名 //del - 有表头slot 代替\r\n        name: null, //样式名 - 防止动态生成的style冲突\r\n        tableConfig: [], //表格配置项 [headTxt - 标题信息][dataId - 绑定列id][width - 列宽][type - 列类型]\r\n        data: [], //数据源\r\n        minWidth: 0, //最小宽度\r\n        sortActive: true, //排序激活项 //todo 实现排序\r\n        //tbody: false,\r\n\r\n        dataGridState: 0, //表格状态, [0 - 数据加载中][1 - 有数据(显示数据)][2 - 无数据]\r\n\r\n        $checkBoxAllVm: null,\r\n        getCheckBoxAllVm: _interface,\r\n        $childCheckBoxVm: [],\r\n        $CheckBoxBaseIndex: -1,\r\n        getChildCheckBoxVm: _interface,\r\n        $childButtonVm: [],\r\n        $buttonBaseIndex: -1,\r\n        getChildButtonVm: _interface,\r\n        selectAll: _interface,\r\n        selectRow: _interface,\r\n        setSwitch: _interface,\r\n        clickSwitch: _interface,\r\n        setSelect: _interface,\r\n        changeSelect: _interface,\r\n        clickButton: _interface,\r\n\r\n\r\n        formName: \"\", //表单setValue使用\r\n        bindSize: \"\", //跟linearlayout布局大小层绑定的class名\r\n\r\n        allHasWidth: true, //每列是否指定了列宽\r\n        otherOffset: 0, //其他外部偏移（跟linearlayout内部包括的relativelayout的padding有关,暂定待修改,relativelayout跟滚动结合）\r\n        scrollContentOffset: 37, //滚动内容偏移值（跟样式有关系）\r\n        extendOffset: 0,\r\n\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onSelected: null, //行选中事件\r\n        onChanged: null, //改变事件(include 行选中,行取消选中)\r\n        onClickRow: null, //行点击事件（不论是否有复选框,当点击行的时候触发事件）\r\n\r\n        //外部接口\r\n        getData: _interface, //获取表格数据\r\n        setData: _interface, //设置表格数据\r\n        getSelectedRow: _interface, //获取选中列\r\n        getSelectedValue: _interface, //获取选中列数据(返回数组)\r\n        setRowState: _interface, //设置指定列的状态\r\n        setRowSelected: _interface, //设置选中的列\r\n        removeRow: _interface, //移除列\r\n        insertRow: _interface, //插入列\r\n        deleteRow: _interface, //删除列\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        selected: [], //选中项\r\n        lindex: -1, //布局中的序号\r\n        $headerContent: \"\", //数据表头部内容\r\n        $headTypeList: { //标题类型列表\r\n            \"checkbox\": 1\r\n        },\r\n        $typeList: { //列表类型列表\r\n            \"checkbox\": 1,\r\n            \"btn\": 2,\r\n            \"img\": 3,\r\n            \"time\": 4,\r\n            \"switch\": 5,\r\n            \"selectbox\": 6,\r\n            \"icon\": 7,\r\n            \"html\": 8\r\n        },\r\n        $datagridBody: null, //datagrid body 的 jQuery 对象\r\n\r\n        //内部事件\r\n        sort: _interface, //排序接口\r\n        clickRow: _interface, //行点击事件\r\n\r\n        //内部接口\r\n        _trigger: _interface, //内部触发器\r\n        datagridRendered: _interface,\r\n        hideDataGrid: _interface,\r\n        renderHeader: _interface, //渲染头部\r\n        renderContent: _interface, //渲染内容\r\n        renderHref: _interface, //渲染链接\r\n        renderBtn: _interface, //渲染按钮内容\r\n        renderStyle: _interface, //渲染样式\r\n        isSelected: _interface, //是否选中\r\n        dataHeadType: _interface, //表头类型判断\r\n        datagridType: _interface, //列内容类型判断(含链接判断)\r\n        updateSelected: _interface, //更新选择项\r\n        updateChildVm: _interface, //更新子项vm方法\r\n        removeChildVm: _interface, //移除子项vm方法\r\n        addChildVm: _interface, //添加子项vm\r\n        //表单设置数据接口\r\n        setValue: _interface,\r\n\r\n        //默认配置\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            //if (vmOpts.tableConfig != undefined) {\r\n            //    //初始化slot标签页内容用属性\r\n            //    for (var i = 0; i < vmOpts.tableConfig.length; i++) {\r\n            //        hooks['content' + i] = '';\r\n            //    }\r\n            //}\r\n\r\n            //根据data设置表格状态\r\n            if (vmOpts.data) {\r\n                if (vmOpts.data.length) {\r\n                    hooks.dataGridState = 1; //有数据\r\n                } else {\r\n                    hooks.dataGridState = 2; //无数据\r\n                }\r\n            } else {\r\n                hooks.dataGridState = 0; //异步加载数据\r\n            }\r\n\r\n            //没有设置name的话动态生成一个\r\n            vmOpts.name || elemOpts.name || (hooks.name = McAvalon.util.genId(\"datagrid\"));\r\n\r\n            if (vmOpts.data) {\r\n                vmOpts.data = toDatagridData(vmOpts.data, hooks);\r\n                //vmOpts.data = datagridData(vmOpts.data, function () {\r\n                //    hooks.selected.push(false);\r\n                //});\r\n                //avalon.each(vmOpts.data, function (i, val) {\r\n                //    hooks.selected.push(false);\r\n                //    val.selected = false;\r\n                //});\r\n            }\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            vm.$checkBoxAllVm = null,\r\n            //全选按钮vm\r\n            vm.getCheckBoxAllVm = function (_vm, elem) {\r\n                vm.$checkBoxAllVm = _vm;\r\n            },\r\n            vm.$childCheckBoxVm = [],\r\n            vm.$CheckBoxBaseIndex = -1,\r\n            //获得子项checkBox的vm\r\n            vm.getChildCheckBoxVm = function (_vm, elem) {\r\n                //if (vm.$CheckBoxBaseIndex === -1) vm.$CheckBoxBaseIndex = _vm.tdindex;\r\n                //vm.$childCheckBoxVm[_vm.tdindex - vm.$CheckBoxBaseIndex] || vm.$childCheckBoxVm.push(new Array());\r\n                //vm.$childCheckBoxVm[_vm.tdindex - vm.$CheckBoxBaseIndex].push(_vm);\r\n                //todo 修改tableChildVM的存储\r\n                vm.data[_vm.trindex].$tableChildVM.checkboxVM || avalon.mix(vm.data[_vm.trindex].$tableChildVM, {\r\n                    checkboxVM: []\r\n                });\r\n                vm.data[_vm.trindex].$tableChildVM.checkboxVM.push(_vm);\r\n            },\r\n            vm.$childButtonVm = [],\r\n            vm.$buttonBaseIndex = -1,\r\n            //获得子项checkBox的vm\r\n            vm.getChildButtonVm = function (_vm, elem) {\r\n                //if (vm.$buttonBaseIndex === -1) vm.$buttonBaseIndex = _vm.tdindex;\r\n                //vm.$childButtonVm[_vm.tdindex - vm.$buttonBaseIndex] || vm.$childButtonVm.push(new Array());\r\n                //vm.$childButtonVm[_vm.tdindex - vm.$buttonBaseIndex].push(_vm);\r\n                //todo 修改tableChildVM的存储\r\n                vm.data[_vm.trindex].$tableChildVM.ButtonVM || avalon.mix(vm.data[_vm.trindex].$tableChildVM, {\r\n                    ButtonVM: []\r\n                });\r\n                vm.data[_vm.trindex].$tableChildVM.ButtonVM.push(_vm);\r\n                //console.log(vm.data[_vm.trindex].$tableChildVM);\r\n            },\r\n            //全选\r\n            vm.selectAll = function (ev, _vm) {\r\n                if (_vm.isChecked()) { //全选\r\n                    avalon.each(vm.data, function (i, val) {\r\n                        avalon.each(val.$tableChildVM.checkboxVM, function (i, val) {\r\n                            val.setChecked(true);\r\n                        });\r\n                    });\r\n                    vm.setRowState(true);\r\n                } else { //取消全选\r\n                    avalon.each(vm.data, function (i, val) {\r\n                        avalon.each(val.$tableChildVM.checkboxVM, function (i, val) {\r\n                            val.setChecked(false);\r\n                        });\r\n                    });\r\n                    vm.setRowState(false);\r\n                }\r\n            },\r\n            //选择行\r\n            vm.selectRow = function (ev, _vm) {\r\n                if (_vm.isChecked()) { //选中\r\n                    vm.setRowState(_vm.trindex, true);\r\n                } else { //取消选中\r\n                    if (vm.$checkBoxAllVm && vm.$checkBoxAllVm.isChecked()) { //如果全选按钮选中则取消其选择\r\n                        vm.$checkBoxAllVm.setChecked(false);\r\n                    }\r\n                    vm.setRowState(_vm.trindex, false);\r\n                }\r\n            },\r\n            //switch ini\r\n            vm.setSwitch = function (_vm, elem) {\r\n                var trIdx = _vm.trindex;\r\n                var tdIdx = _vm.tdindex;\r\n                var isReadonly = vm.tableConfig[tdIdx].readonly ? true : false;\r\n                //todo 调用renderContent(或者和renderContent调用同一个底层函数,获取数据,传入trIdx和tdIdx)来获得数据\r\n                _vm.setValue(vm.data[trIdx] && vm.data[trIdx][vm.tableConfig[tdIdx].dataId], isReadonly);\r\n                //todo 修改tableChildVM的存储\r\n                vm.data[_vm.trindex].$tableChildVM.switchVM || avalon.mix(vm.data[_vm.trindex].$tableChildVM, {\r\n                    switchVM: []\r\n                });\r\n                vm.data[_vm.trindex].$tableChildVM.switchVM.push(_vm);\r\n            },\r\n            //click switch\r\n            vm.clickSwitch = function (ev, _vm) {\r\n                if (typeof vm.tableConfig[_vm.tdindex].onClick === \"function\") {\r\n                    vm.tableConfig[_vm.tdindex].onClick(vm, _vm);\r\n                }\r\n            },\r\n            //selectbox config\r\n            vm.$selectbox_opt = vm.$selectbox_opt,\r\n            //selectbox ini\r\n            vm.setSelect = function (_vm, elem) {\r\n                var trIdx = _vm.trindex;\r\n                var tdIdx = _vm.tdindex;\r\n                var isReadonly = vm.tableConfig[tdIdx].readonly ? true : false;\r\n                var tdSelectboxOpt = vm.tableConfig[tdIdx].$selectbox_opt; //当前列的选择框配置项\r\n                _vm.data = tdSelectboxOpt && tdSelectboxOpt.data;\r\n                //todo 调用renderContent(或者和renderContent调用同一个底层函数,获取数据,传入trIdx和tdIdx)来获得数据\r\n                _vm.setValue(vm.data[trIdx] && vm.data[trIdx][vm.tableConfig[tdIdx].dataId], isReadonly);\r\n                //todo 修改tableChildVM的存储\r\n                vm.data[_vm.trindex].$tableChildVM.selectboxVM || avalon.mix(vm.data[_vm.trindex].$tableChildVM, {\r\n                    selectboxVM: []\r\n                });\r\n                vm.data[_vm.trindex].$tableChildVM.selectboxVM.push(_vm);\r\n            },\r\n            //change selectbox\r\n            vm.changeSelect = function (ev, _vm) {\r\n                if (typeof vm.tableConfig[_vm.tdindex].onClick === \"function\") {\r\n                    vm.tableConfig[_vm.tdindex].onClick(vm, _vm);\r\n                }\r\n            },\r\n            //按钮点击事件\r\n            vm.clickButton = function (ev, _vm) {\r\n                if (typeof vm.tableConfig[_vm.tdindex].onClick === \"function\") {\r\n                    vm.tableConfig[_vm.tdindex].onClick(vm, _vm);\r\n                }\r\n            }\r\n\r\n            //vm.datagridRendered = function (action, offset, length) {\r\n            //    vm.tbody = true;\r\n            //},\r\n\r\n            //======= 内部事件 START =======//\r\n            /**doc\r\n             * @description {行点击事件}\r\n             * @param {ev} {动作类型动作类型}\r\n             * @param {trIdx} {点击的行index}\r\n             * @returns {}\r\n             */\r\n            vm.clickRow = function (ev, trIdx) {\r\n                //if (vm.data[trIdx].$tableChildVM.checkboxVM && vm.data[trIdx].$tableChildVM.checkboxVM[0]) {\r\n                //    vm.data[trIdx].$tableChildVM.checkboxVM[0].clickCheckbox(ev); //触发当前行复选框点击事件\r\n                //    ev.stopPropagation();\r\n                //}\r\n                vm._trigger(ev, \"clickRow\", trIdx);\r\n                ev.stopPropagation();\r\n                return vm;\r\n            }\r\n            /**doc\r\n             * @description {排序事件 todo 未完成}\r\n             * @param {ev} {动作类型}\r\n             * @param {idx} {点击的列index}\r\n             * @returns {} \r\n             */\r\n            vm.sort = function (ev, idx) {\r\n                if (typeof vm.tableConfig[idx].sort == \"function\") {\r\n                    vm.data.sort(function (a, b) {\r\n                        if (vm.sortActive) {\r\n                            return vm.tableConfig[idx].sort(a, b);\r\n                        } else {\r\n                            return !vm.tableConfig[idx].sort(a, b);\r\n                        }\r\n                    });\r\n                    vm.sortActive = !vm.sortActive;\r\n                    ev.stopPropagation();\r\n                }\r\n            }\r\n            //======= 内部事件 END =======//\r\n\r\n\r\n            //======= 内部接口 START =======//\r\n            /**doc\r\n             * @description {事件触发器}\r\n             * @param {ev} {动作类型}\r\n             * @param {type} {事件类型}\r\n             * @returns {} \r\n             */\r\n            vm._trigger = function (ev, type, extend) {\r\n                switch (type) {\r\n                    case \"selected\":\r\n                        if (typeof vm.onSelected == \"function\") {\r\n                            vm.onSelected(ev, vm, extend);\r\n                        }\r\n                        break;\r\n                    case \"changed\":\r\n                        if (typeof vm.onChanged == \"function\") {\r\n                            vm.onChanged(ev, vm, extend);\r\n                        }\r\n                        break;\r\n                    case \"clickRow\":\r\n                        if (typeof vm.onClickRow == \"function\") {\r\n                            vm.onClickRow(ev, vm, extend);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            /**doc\r\n             * @description {渲染表格头部}\r\n             * @returns {String} {表格头部HTML}\r\n             */\r\n            vm.renderHeader = function () {\r\n                return vm.$headerContent;\r\n            }\r\n            /**doc\r\n             * @description {渲染表格单元格内容}\r\n             * @param {trIdx} {行index}\r\n             * @param {tdIdx} {列index}\r\n             * @returns {String} {表格单元格内容HTML}\r\n             */\r\n            vm.renderContent = function (trIdx, tdIdx) {\r\n                var V = vm.data[trIdx] && vm.data[trIdx][vm.tableConfig[tdIdx].dataId];\r\n                if (vm.tableConfig[tdIdx].type === \"time\") {\r\n                    return (V >> 0) * 1000;\r\n                } else if (vm.tableConfig[tdIdx].type === \"img\") {\r\n                    if (V.indexOf(\",\") !== -1) {\r\n                        //如果多图取第一张\r\n                        return V.split(\",\")[0];\r\n                    }\r\n                    return V;\r\n                } {\r\n                    //oriV| filter \r\n                    if (vm.tableConfig[tdIdx].filter) {\r\n                        V = vm.tableConfig[tdIdx].filter(V);\r\n                    }\r\n                    return V;\r\n                }\r\n                //if (vm['content' + idx] == '') {\r\n                //    return vm.data[outIdx][vm.tableConfig[idx].dataId];\r\n                //} else {\r\n                //    //vm['content' + idx].childNodes[0].setAttribute('index', outIdx);\r\n                //    $(vm['content' + idx].childNodes[0]).find('.' + vm.$tableElem).attr(\"tindex\", outIdx);\r\n                //    return vm['content' + idx].childNodes[0].outerHTML;\r\n                //}\r\n            }\r\n            vm.renderHref = function (trIdx, tdIdx) {\r\n                if (vm.data[trIdx]) {\r\n                    var params = vm.tableConfig[tdIdx].$params;\r\n                    var url = vm.tableConfig[tdIdx].tdlink;\r\n                    if (params && params.length) {\r\n                        url += \"?\";\r\n                        $.each(params, function (i, val) {\r\n                            if (i !== 0) url += \"&\";\r\n                            url += val + \"=\" + vm.data[trIdx][val];\r\n                        });\r\n                    }\r\n                    return url;\r\n                }\r\n            }\r\n            /**doc\r\n             * @description {渲染按钮文本}\r\n             * @param {trIdx} {按钮所在行index}\r\n             * @param {tdIdx} {按钮所在列index}\r\n             * @returns {String} {按钮文本HTML}\r\n             */\r\n            vm.renderBtn = function (trIdx, tdIdx) {\r\n                return vm.tableConfig[tdIdx].label;\r\n            }\r\n            /**doc\r\n             * @description {渲染表格样式}\r\n             * @returns {String} {样式HTML}\r\n             */\r\n            vm.renderStyle = function () {\r\n                var styleHtml = \"\";\r\n                if (vm.name) {\r\n                    styleHtml += \"<style>\";\r\n                    var allWidth = 0;\r\n                    vm.allHasWidth = true;\r\n                    for (var i = 0; i < vm.tableConfig.length; i++) {\r\n                        var elWidth = vm.tableConfig[i].width >> 0;\r\n                        if (elWidth) {\r\n                            styleHtml += \".\" + vm.name + \" .col-\" + i + \"{width:\" + elWidth + \"px}\";\r\n                            allWidth += elWidth;\r\n                        } else {\r\n                            vm.allHasWidth = false;\r\n                        }\r\n                    }\r\n                    styleHtml += \".\" + vm.name + \" .mc-datagrid-scroll-cotar{\";\r\n                    if (vm.allHasWidth) {\r\n                        styleHtml += \"width:\" + allWidth + \"px;\";\r\n                        vm.extendOffset = 18; //滚动条高度\r\n                    }\r\n                    styleHtml += \"min-width:\" + (vm.minWidth >> 0) + \"px;\";\r\n                    styleHtml += \"}\";\r\n                    styleHtml += \"</style>\";\r\n                }\r\n                return styleHtml;\r\n            }\r\n            /**doc\r\n             * @description {判断行是否选中}\r\n             * @param {idx} {要判断的行index}\r\n             * @returns {Boolean} {是否选中}\r\n             */\r\n            vm.isSelected = function (idx) {\r\n                return vm.data[idx].selected;\r\n            }\r\n            /**doc\r\n             * @description {判断数据表格表头类型}\r\n             * @param {tdIdx} {要判断的列index}\r\n             * @returns {String} {返回$headTypeList内对应的值 默认 [data:显示文本]}\r\n             */\r\n            vm.dataHeadType = function (tdIdx) {\r\n                return vm.$headTypeList[vm.tableConfig[tdIdx].type] || \"data\";\r\n            }\r\n            /**doc\r\n             * @description {判断数据表单元格类型}\r\n             * @param {trIdx} {要判断的行index}\r\n             * @param {tdIdx} {要判断的列index}\r\n             * @returns {String||Boolean} {[false:数据] [true:带连接的数据] [数字:$typeList内对应的值]}\r\n             */\r\n            //todo 修改 带外链的数据显示，链接字段不一定是tdlink,要分离\r\n            vm.datagridType = function (trIdx, tdIdx) {\r\n                var type = vm.$typeList[vm.tableConfig[tdIdx].type] || 0;\r\n                if (type !== 0) {\r\n                    return type;\r\n                } else if (vm.tableConfig[tdIdx].tdlink) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n            /**doc\r\n             * @description {更新选中项所对应的内部selected数组内容}\r\n             * @param {newVal} {新值 [true:选中][false:未选中][新的selected数组,仅当全部更新时启用]}\r\n             * @param {singleUpdate} {是否单个更新 [true:单个更新][不传或false全部更新]}\r\n             * @param {idx} {要更新的行index}\r\n             * @returns {} \r\n             */\r\n            vm.updateSelected = function (newVal, singleUpdate, idx) {\r\n                if (singleUpdate) { //单个更新\r\n                    vm.selected.set(idx, newVal);\r\n                } else {\r\n                    vm.selected = newVal;\r\n                }\r\n            }\r\n            /**doc\r\n             * @description {更新数据表内组件的vm (添加行,删除行时)}\r\n             * @param {idx} {要更新的起始行index,包含当前index的行}\r\n             * @param {nbr} {变动值 (新增的行数,或删除的行数)}\r\n             * @param {add} {是否添加 [true:添加][false:删除]}\r\n             * @returns {} \r\n             */\r\n            vm.updateChildVm = function (idx, nbr, add) {\r\n                for (var i = idx; i < vm.data.length; i++) {\r\n                    avalon.each(vm.data[i].$tableChildVM.checkboxVM, function (i, val) {\r\n                        add ? val.trindex += nbr : val.trindex -= nbr;\r\n                    });\r\n                    avalon.each(vm.data[i].$tableChildVM.ButtonVM, function (i, val) {\r\n                        add ? val.trindex += nbr : val.trindex -= nbr;\r\n                    });\r\n                }\r\n            }\r\n            //vm.updateChildVm = function (target, idx, add) {\r\n            //    avalon.each(target, function (i, val) {\r\n            //        for (var j = idx; j < val.length; j++) {\r\n            //            add ? val[j].trindex++ : val[j].trindex--;\r\n            //        }\r\n            //    });\r\n            //}\r\n            /**doc\r\n             * @description {移除数据表内组件的vm}\r\n             * @param {idx} {移除的行的index}\r\n             * @returns {} \r\n             */\r\n            vm.removeChildVm = function (idx) {\r\n                //todo 销毁子组件的vm\r\n                vm.updateChildVm(idx + 1, 1);\r\n            }\r\n            //vm.removeChildVm = function (target, idx) {\r\n            //    vm.updateChildVm(target, idx + 1);\r\n            //    avalon.each(target, function (i, val) {\r\n            //        avalon.Array.removeAt(val, idx);\r\n            //    });\r\n            //}\r\n            /**doc\r\n             * @description {添加数据表内组件的vm}\r\n             * @param {nbr} {新增行数}\r\n             * @returns {} \r\n             */\r\n            vm.addChildVm = function (nbr) {\r\n                vm.updateChildVm(0, nbr, true);\r\n            }\r\n            /**\r\n             * 表单调用接口\r\n             * @param {} val \r\n             * @returns {} \r\n             */\r\n            vm.setValue = function (val) {\r\n                vm.setData(val);\r\n            }\r\n            //======= 内部接口 END =======//\r\n\r\n\r\n            //======= 外部接口 START =======//\r\n            vm.getData = function () {\r\n                return vm.data.$model;\r\n            }\r\n            //vm.hideDataGrid = function () {\r\n            //    vm.tbody = false;\r\n            //    console.log(213);\r\n            //}\r\n            vm.setData = function (data, callback) {\r\n                //判断表格状态\r\n                if (data.length) {\r\n                    vm.dataGridState = 1; //有数据\r\n                } else {\r\n                    vm.dataGridState = 2; //无数据\r\n                }\r\n\r\n                //vm.hideDataGrid();\r\n                setTimeout(function() {\r\n                    vm.selected = [];\r\n                    var newData = toDatagridData(data, vm);\r\n                    //todo 优化数据diff\r\n                    var newDataLength = newData.length;\r\n                    var oldDataLength = vm.data.length;\r\n                    var changeDataLength = Math.min(newDataLength, oldDataLength);\r\n                    var i;\r\n                    //替换记录\r\n                    //debugger;\r\n                    for (i = 0; i < changeDataLength; i++) {\r\n                        //vm.data.set(i, newData[i]);\r\n                        //普通数据替换\r\n                        var oldItem = vm.data[i];\r\n                        var newItem = newData[i];\r\n                        for (k in newItem) {\r\n                            if (newItem.hasOwnProperty(k)) {\r\n                                //替换时不对$tableChildVM进行处理,否则会丢失之前的$tableChildVM\r\n                                if (k !== \"$tableChildVM\") {\r\n                                    //todo 优化赋值,进行diff处理,首先测试avalon框架是否有做diff优化处理\r\n                                    oldItem[k] = newItem[k];\r\n                                }\r\n                            }\r\n                        }\r\n                        //特殊类型值变化（switch，selectbox）\r\n                        var itemTableChildVM = oldItem.$tableChildVM;\r\n                        //switch\r\n                        itemTableChildVM.switchVM && $.each(itemTableChildVM.switchVM, function(i, val) {\r\n                            //todo 调用内部的子组件内部的update方法去更新数据,先手动传\r\n                            var trIdx = val.trindex;\r\n                            var tdIdx = val.tdindex;\r\n                            val.setValue(vm.data[trIdx] && vm.data[trIdx][vm.tableConfig[tdIdx].dataId]);\r\n                        });\r\n                        //selectbox\r\n                        itemTableChildVM.selectboxVM && $.each(itemTableChildVM.selectboxVM, function(i, val) {\r\n                            //todo 调用内部的子组件内部的update方法去更新数据,先手动传\r\n                            var trIdx = val.trindex;\r\n                            var tdIdx = val.tdindex;\r\n                            val.setValue(vm.data[trIdx] && vm.data[trIdx][vm.tableConfig[tdIdx].dataId]);\r\n                        });\r\n                    }\r\n                    if (newDataLength > oldDataLength) {\r\n                        //增加记录条数\r\n                        //console.time(\"add\");\r\n                        vm.data.pushArray(newData.slice(oldDataLength, newDataLength));\r\n                        //console.timeEnd(\"add\");\r\n                        //for (i = oldDataLength; i < newDataLength; i++) {\r\n                        //    vm.data.set(i, newData[i]);\r\n                        //    //vm.data.push(newData[i]);\r\n                        //}\r\n                    } else {\r\n                        //减少记录条数\r\n                        //console.time(\"remove\");\r\n                        vm.data.splice(newDataLength, oldDataLength);\r\n                        //console.timeEnd(\"remove\");\r\n                        //for (i = newDataLength; i < oldDataLength; i++) {\r\n                        //    avalon.Array.removeAt(vm.data, newDataLength);\r\n                        //}\r\n                    }\r\n                    typeof callback === \"function\" && callback.call(this, vm);\r\n                    //vm.data = newData;\r\n                    //表格滚回顶部\r\n                    //vm.$datagridBody.animate({ scrollTop: 0 }, 500);\r\n                    vm.$datagridBody.scrollTop(0);\r\n                }, 300);\r\n            }\r\n            /**doc\r\n             * @description {获取选择的列}\r\n             * @returns {数组} {返回index数组}\r\n             */\r\n            vm.getSelectedRow = function () {\r\n                var s = [];\r\n                avalon.each(vm.data, function (i, val) {\r\n                    val.selected && s.push(i);\r\n                });\r\n                return s;\r\n            }\r\n            /**doc\r\n             * @description {获取选择的列的值}\r\n             * @returns {数组} {返回数据对象数组}\r\n             */\r\n            vm.getSelectedValue = function () {\r\n                var d = [];\r\n                avalon.each(vm.data, function (i, val) {\r\n                    val.selected && d.push(val.$model);\r\n                });\r\n                return d;\r\n            }\r\n            /**doc\r\n             * @description {设置行状态,选中或者不选中}\r\n             * @param {trIdx} {要选中的行index 特殊:[true:全选][false:全不选],此时第二个参数可不传}\r\n             * @param {check} {是否选中 [true:选中][false:不选中]}\r\n             * @returns {vm} {当前调用的vm对象} \r\n             */\r\n            vm.setRowState = function (trIdx, check) {\r\n                var t = [];\r\n                if (trIdx === true) { //全选\r\n                    avalon.each(vm.data, function (i, val) {\r\n                        if (!val.selected) {\r\n                            //var t = deepCopy(val);\r\n                            //t.selected = true;\r\n                            val.selected = true;\r\n                            //vm.selected.set(i, true);\r\n                        }\r\n                        t.push(true);\r\n                    });\r\n                    vm.updateSelected(t);\r\n                } else if (trIdx === false) { //全不选\r\n                    avalon.each(vm.data, function (i, val) {\r\n                        if (val.selected) {\r\n                            val.selected = false;\r\n                            //vm.selected.set(i, false);\r\n                        }\r\n                        t.push(false);\r\n                        //val.selected && (val.selected = false);\r\n                    });\r\n                    vm.updateSelected(t);\r\n                } else { //单选\r\n                    if (check) {\r\n                        t = true;\r\n                        vm.data[trIdx].selected = true;\r\n                    } else {\r\n                        t = false;\r\n                        vm.data[trIdx].selected = false;\r\n                    }\r\n                    vm.updateSelected(t, true, trIdx);\r\n                }\r\n                return vm;\r\n            }\r\n            /**\r\n             * 设置选中的列\r\n             * @param {} selectedArr \r\n             * @returns {} \r\n             */\r\n            vm.setRowSelected = function (selectedArr) {\r\n                avalon.each(vm.data, function (i, val) {\r\n                    avalon.each(val.$tableChildVM.checkboxVM, function (i, val) {\r\n                        val.setChecked(false);\r\n                    });\r\n                });\r\n                vm.setRowState(false);\r\n                for (var i = 0; i < selectedArr.length; i++) {\r\n                    if (vm.data[selectedArr[i]]) {\r\n                        avalon.each(vm.data[selectedArr[i]].$tableChildVM.checkboxVM, function (i, val) {\r\n                            val.setChecked(true);\r\n                        });\r\n                        vm.setRowState(selectedArr[i], true);\r\n                    }\r\n                }\r\n            }\r\n            /**doc\r\n             * @description  {移除行}\r\n             * @param {trIdx} {要移除的行的行号}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\r\n            vm.removeRow = function (trIdx) {\r\n                //todo 取消全选按钮选中状态\r\n                vm.removeChildVm(trIdx);\r\n                avalon.Array.removeAt(vm.data, trIdx);\r\n                //vm.$childButtonVm[trIdx].$dispose();\r\n                //vm.removeChildVm(vm.$childCheckBoxVm, trIdx);\r\n                //vm.removeChildVm(vm.$childButtonVm, trIdx);\r\n                avalon.Array.removeAt(vm.selected, trIdx);\r\n                //console.log(vm.$childButtonVm);\r\n                //console.log(vm.selected);\r\n                return vm;\r\n            }\r\n            /**doc\r\n             * @description {插入行}\r\n             * @param {newData} {要插入的新行的数据}\r\n             * @param {append} {是否追加[true:追加,添加到末行][不传或者false:则默认插入到首行]}\r\n             * @returns {vm} {当前调用的vm对象} \r\n             */\r\n            vm.insertRow = function (newData, append) {\r\n                newData = toDatagridData(newData); //转换为表格数据\r\n                //todo 取消全选按钮选中状态\r\n                if (append) { //添加到末尾\r\n                    avalon.each(newData, function (i, val) {\r\n                        vm.data.push(val);\r\n                        vm.selected.push(false);\r\n                    });\r\n                } else { //添加到首行\r\n                    avalon.each(newData, function (i, val) {\r\n                        vm.data.unshift(val);\r\n                        vm.selected.unshift(false);\r\n                    });\r\n                    vm.addChildVm(newData.length);\r\n                    //vm.addChildVm(vm.$childCheckBoxVm);\r\n                    //vm.addChildVm(vm.$childButtonVm);\r\n                }\r\n                return vm;\r\n            }\r\n            /**doc\r\n             * @description {删除行}\r\n             * @param {newData} {删除行后需要追加的新数据}\r\n             * @param {trIdx} {要删除的行的index}\r\n             * @returns {vm} {当前调用的vm对象} \r\n             */\r\n            vm.deleteRow = function (newData, trIdx) {\r\n                vm.removeRow(trIdx);\r\n                vm.insertRow(newData, true);\r\n                return vm;\r\n            }\r\n            //======= 外部接口 END =======//\r\n\r\n\r\n            //======= 观测方法 START =======//\r\n            /**\r\n             * @description {数据源更换监听} \r\n             */\r\n            vm.$watch(\"data\", function (newVal, oldVal) {\r\n                if (newVal) {\r\n                    //var _this = this;\r\n                    //datagridData(newVal, function () {\r\n                    //    _this.selected.push(false);\r\n                    //});\r\n                    //avalon.each(newVal, function (i, val) {\r\n                    //    _this.selected.push(false);\r\n                    //    val.selected = false;\r\n                    //});\r\n                }\r\n            });\r\n            /**\r\n             * @description {全选监听}\r\n             */\r\n            vm.$watch(\"selected\", function (newVal, oldVal) {\r\n                vm._trigger({ newVal: newVal, oldVal: oldVal }, \"selected\");\r\n            });\r\n            /**\r\n             * @description {单选监听}\r\n             */\r\n            vm.$watch(\"selected.*\", function (newVal, oldVal) {\r\n                //等待vm.selected对象改变,延迟50毫秒触发回调 - 可能有BUG\r\n                setTimeout(function () {\r\n                    vm._trigger({ newVal: newVal, oldVal: oldVal }, \"selected\");\r\n                }, 50);\r\n            });\r\n            //vm.$watch('active', function (newVal, oldVal) {\r\n            //    if (newVal == -1 || oldVal == -1) return;\r\n            //    vm._trigger({ newVal: newVal, oldVal: oldVal }, 'changed');\r\n            //    if (typeof vm.panels[newVal].fun == 'function') {\r\n            //        vm.panels[newVal].fun({ newVal: newVal, oldVal: oldVal }, vm);\r\n            //    }\r\n            //});\r\n            //======= 观测方法 END =======//\r\n\r\n        },\r\n        $ready: function (vm, elem) {\r\n            vm.$datagridBody = $(elem).find(\".mc-tbody\");\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            //if (typeof vm.panels[vm.active].fun == 'function') {\r\n            //    vm.panels[vm.active].fun({}, vm);\r\n            //}\r\n            //注册布局大小变动事件\r\n            McAvalon.$window.on(\"layout_resize\", function (event, layoutSizeObj) {\r\n                if (layoutSizeObj[\"mc_li\" + vm.bindSize]) {\r\n                    var vmHeight = layoutSizeObj[\"mc_li\" + vm.bindSize].height;\r\n                    var vmWidth = layoutSizeObj[\"mc_li\" + vm.bindSize].width;\r\n                    //宽度小于最小宽度时高度减去滚动条区域,每列指定了列宽则必定横向滚动条\r\n                    //todo 每列指定了列宽的时候自动生成最小宽度\r\n                    if (vm.allHasWidth || vmWidth < vm.minWidth) {\r\n                        vm.extendOffset = 18;\r\n                    } else {\r\n                        vm.extendOffset = 0;\r\n                    }\r\n                    vm.$datagridBody.css(\"height\", vmHeight - vm.otherOffset - vm.scrollContentOffset - vm.extendOffset);\r\n                }\r\n            });\r\n            //触发布局初始化事件\r\n            McAvalon.$window.trigger(\"layout_ini\");\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:datagrid\"];\r\n    widget.regionals = {};\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/datagrid/mc.datagrid.js\n ** module id = 33\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-datagrid-cotar\\\" ms-class-1=\\\"{{name}}\\\" ms-class-2=\\\"mc-hide:isInit\\\">\\r\\n    <div class=\\\"mc-datagrid-scroll-cotar\\\">\\r\\n        {{renderHeader()|html}}\\r\\n        <table class=\\\"data-table\\\">\\r\\n            <tr>\\r\\n                <th ms-repeat=\\\"tableConfig\\\" ms-class=\\\"col-{{$index}}\\\" ms-class-1=\\\"active:sortActive\\\" ms-click=\\\"sort($event, $index)\\\">\\r\\n                    <span class=\\\"vm-cotar\\\" ms-if=\\\"dataHeadType($index)==='data'\\\">{{el.headTxt}}</span>\\r\\n                    <!-- 复选框 -->\\r\\n                    <div class=\\\"vm-cotar checkbox-wrap\\\" ms-if=\\\"dataHeadType($index)===1\\\">\\r\\n                        <mc:checkbox on-changed=\\\"selectAll\\\" on-init=\\\"getCheckBoxAllVm\\\" ms-attr-config=\\\"checkbox_opt{{$outer.$index}}\\\"></mc:checkbox>\\r\\n                    </div>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </table>\\r\\n        <div class=\\\"mc-tbody\\\">\\r\\n            <div class=\\\"mc-no-data\\\" ms-if=\\\"dataGridState === 0\\\">\\r\\n                <div class=\\\"h1\\\">数据加载中</div>\\r\\n            </div>\\r\\n            <table class=\\\"data-table\\\" ms-if=\\\"dataGridState === 1\\\">\\r\\n                <tr ms-repeat=\\\"data\\\" ms-class=\\\"active:selected[$index]\\\" ms-click=\\\"clickRow($event, $index)\\\">\\r\\n                    <!-- 数据内容 -->\\r\\n                    <td ms-repeat-el=\\\"tableConfig\\\" ms-class=\\\"col-{{$index}}\\\">\\r\\n                        <!-- 正常数据 -->\\r\\n                        <span class=\\\"vm-cotar\\\" ms-if=\\\"datagridType($outer.$index,$index)===false\\\">{{renderContent($outer.$index,$index)}}</span>\\r\\n                        <!-- html数据 -->\\r\\n                        <span class=\\\"vm-cotar\\\" ms-if=\\\"datagridType($outer.$index,$index)===8\\\">{{renderContent($outer.$index,$index) | html }}</span>\\r\\n                        <!-- 时间数据 -->\\r\\n                        <span class=\\\"vm-cotar\\\" ms-if=\\\"datagridType($outer.$index,$index)===4\\\">{{renderContent($outer.$index,$index)| date(\\\"yyyy-MM-dd HH:mm:ss\\\")}}</span>\\r\\n                        <!-- 带连接数据 -->\\r\\n                        <a class=\\\"vm-cotar\\\" ms-if=\\\"datagridType($outer.$index,$index)===true\\\" ms-attr-href=\\\"{{renderHref($outer.$index,$index)}}\\\">{{renderContent($outer.$index,$index)}}</a>\\r\\n                        <!-- 复选框 -->\\r\\n                        <div class=\\\"vm-cotar checkbox-wrap\\\" ms-if=\\\"datagridType($outer.$index,$index)===1\\\">\\r\\n                            <mc:checkbox on-changed=\\\"selectRow\\\" on-init=\\\"getChildCheckBoxVm\\\" ms-attr-trindex=\\\"$outer.$index\\\" ms-attr-tdindex=\\\"$index\\\"></mc:checkbox>\\r\\n                        </div>\\r\\n                        <!-- switch -->\\r\\n                        <div class=\\\"vm-cotar switch-wrap\\\" ms-if=\\\"datagridType($outer.$index,$index)===5\\\">\\r\\n                            <mc:switch on-click=\\\"clickSwitch\\\" on-init=\\\"setSwitch\\\" ms-attr-trindex=\\\"$outer.$index\\\" ms-attr-tdindex=\\\"$index\\\"></mc:switch>\\r\\n                        </div>\\r\\n                        <!-- select box -->\\r\\n                        <div class=\\\"vm-cotar\\\" ms-if=\\\"datagridType($outer.$index,$index)===6\\\">\\r\\n                            <mc:selectbox config=\\\"$selectbox_opt\\\" on-selected=\\\"changeSelect\\\" on-init=\\\"setSelect\\\" ms-attr-trindex=\\\"$outer.$index\\\" ms-attr-tdindex=\\\"$index\\\"></mc:selectbox>\\r\\n                        </div>\\r\\n                        <!-- icon -->\\r\\n                        <div class=\\\"vm-cotar\\\" ms-if=\\\"datagridType($outer.$index,$index) === 7\\\">\\r\\n                            <span class=\\\"vm-cotar iconfont\\\"> {{renderContent($outer.$index,$index)|html}} </span>\\r\\n                        </div>\\r\\n                        <!-- 按钮 -->\\r\\n                        <div class=\\\"vm-cotar button-wrap\\\" ms-if=\\\"datagridType($outer.$index,$index)===2 && ( el.filter ?  el.filter($outer.el.$model) : true )\\\">\\r\\n                            <mc:button on-click=\\\"clickButton\\\" on-init=\\\"getChildButtonVm\\\" ms-attr-trindex=\\\"$outer.$index\\\" ms-attr-tdindex=\\\"$index\\\" ms-attr-label=\\\"{{renderBtn($outer.$index,$index)}}\\\"></mc:button>\\r\\n                        </div>\\r\\n                        <!-- 图片 -->\\r\\n                        <div class=\\\"vm-cotar img-wrap\\\" ms-if=\\\"datagridType($outer.$index,$index)===3\\\"><div class=\\\"mc-img-cotar\\\"><img ms-attr-src=\\\"renderContent($outer.$index,$index)\\\"></div></div>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </table>\\r\\n            <div class=\\\"mc-no-data\\\" ms-if=\\\"dataGridState === 2\\\">\\r\\n                <img src=\\\"/Content/Include/img/img_no_data.jpg\\\" />\\r\\n                <!--<div class=\\\"h1\\\">暂无数据</div>-->\\r\\n            </div>\\r\\n        </div>\\r\\n        {{renderStyle()|html}}\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/datagrid/mc.datagrid.html\n ** module id = 34\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/datagrid/mc.datagrid.min.css\n ** module id = 35\n ** module chunks = 0\n **/","define(['avalon', 'text!./mc.checkbox.html', './mc.checkbox.min.css'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:checkbox\", {\r\n        //外部参数\r\n        label: \"\", //复选框后面文本\r\n        checked: false, //是否选中\r\n        disabled: false, //是否禁用\r\n        readonly: false, //只读\r\n\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onChecked: null, //当复选框选中时触发事件\n        onCancel: null, //当复选框取消选中时触发事件\n        onChanged: null, //当复选框状态改变时触发事件\n\n        //外部接口\n        isChecked: _interface, //是否选中\n        setChecked: _interface, //设置选择\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        formName: \"\", //表单data的key,输入框name\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\n\n        //内部属性\n        isInit: true,\r\n        extend: {},\n        lindex: -1, //布局中的序号\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\n\n        //内部事件\n        clickCheckbox: _interface, //复选框点击事件\n\n        //内部接口\n        _trigger: _interface, //内部触发器\r\n\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options;\r\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\r\n            //内部事件(changed事件先于checked和cancel事件触发)\r\n            vm.clickCheckbox = function (ev) {\r\n                if (!vm.disabled && !vm.readonly) {\r\n                    if (vm._trigger(ev, \"changed\")) {\r\n                        if (vm.checked) {\r\n                            vm._trigger(ev, \"cancel\") && (vm.checked = false);\n                        } else {\r\n                            vm._trigger(ev, \"checked\") && (vm.checked = true);\n                        }\r\n                    }\r\n                    ev.stopPropagation();\r\n                }\r\n            }\r\n\r\n            //内部接口\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"checked\":\n                        if (typeof vm.onChecked == \"function\") {\r\n                            return vm.onChecked(ev, vm) !== false ? true : false;\r\n                        }\n                        break;\n                    case \"cancel\":\n                        if (typeof vm.onCancel == \"function\") {\r\n                            return vm.onCancel(ev, vm) !== false ? true : false;\r\n                        }\n                        break;\n                    case \"changed\":\n                        if (typeof vm.onChanged == \"function\") {\r\n                            return vm.onChanged(ev, vm) !== false ? true : false;\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n                return true;\r\n            }\n\n            //外部接口\n            vm.isChecked = function () {\r\n                return vm.checked;\r\n            }\n            vm.setChecked = function (val) {\r\n                val ? vm.checked = true : vm.checked = false;\r\n            }\n            vm.getValue = function () {\r\n                return vm.isChecked() ? 1 : 0;\r\n            }\r\n            vm.setValue = function (val) {\r\n                vm.setChecked(val);\r\n            }\r\n        },\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:checkbox\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/checkbox/mc.checkbox.js\n ** module id = 36\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"form-group mc-checkbox-cotar\\\" ms-class-1=\\\"mc-checkbox-disabled: disabled\\\"\\r\\n     ms-class-2=\\\"mc-loading: isInit\\\" ms-click=\\\"clickCheckbox($event)\\\">\\r\\n    <i class=\\\"mc-checkbox\\\" ms-class-1=\\\"mc-active: checked&&!disabled\\\"></i>\\r\\n    <span class=\\\"mc-checkbox-label\\\">{{label}}</span>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/checkbox/mc.checkbox.html\n ** module id = 37\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/checkbox/mc.checkbox.min.css\n ** module id = 38\n ** module chunks = 0\n **/","define(['avalon', 'text!./mc.popmenu.html', './mc.popmenu.min.css'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:popmenu\", {\r\n        //外部参数\r\n        size: \"normal\", //large, small, tiny\r\n        padding: 10,\r\n        position: {\r\n            top: 0,\r\n            left: 0\r\n        },\r\n        track: false, //自动追踪鼠标位置弹出\r\n        show: false, //是否显示,默认隐藏\n\r\n        //外部事件\r\n        onShowed: null,\r\n        onHided: null,\r\n\r\n        //外部接口\r\n        setPosition: _interface,\r\n        showDialog: _interface,\r\n        hideDialog: _interface,\n        setCallback: _interface,\r\n\r\n        //内部属性\r\n        content: \"\",\n        lindex: -1, //布局中的序号\n\r\n        //内部事件\r\n        clickBg: _interface,\n        clickDialog: _interface,\n\r\n        //内部接口\r\n        _trigger: _interface,\r\n        jBtnType: _interface,\r\n\n        //默认配置\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options; //返回VM的定义对象\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\n            //======= 内部事件 START =======//\r\n            vm.clickBg = function (ev) {\r\n                vm.hideDialog();\r\n                ev.cancelBubble = true;\r\n            }\r\n            /**\r\n             * 模态窗口点击时事件\r\n             * @param {} ev 动作类型\r\n             * @returns {} \r\n             */\n            vm.clickDialog = function (ev) {\n                //阻止冒泡(避免点击弹出框时 弹出框关闭)\n                ev.cancelBubble = true;\r\n            }\n            //======= 内部事件 END =======//\r\n\n            //======= 内部接口 START =======//\r\n            /**\r\n             * 事件触发器\r\n             * @param {} ev 动作类型\r\n             * @param {} type 事件类型\r\n             * @returns {} \r\n             */\r\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"showed\":\n                        if (typeof vm.onshowed == \"function\") {\r\n                            vm.onShowed(ev, vm);\r\n                        }\n                        break;\n                    case \"hided\":\n                        if (typeof vm.onhided == \"function\") {\r\n                            vm.onHided(ev, vm);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n            //======= 内部接口 END =======//\r\n\r\n            //======= 外部接口 START =======//\n            /**doc\r\n             * @newPosition {新的位置坐标对象,需包括top和left两个值}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\r\n            vm.setPosition = function (newPosition,offsetTop,offsetLeft) {\r\n                vm.position = {\r\n                    top: newPosition.top - (offsetTop || 0),\r\n                    left: newPosition.left - (offsetLeft || 0)\r\n                };\r\n                return vm;\r\n            }\n            /**doc\r\n             * @description {显示模态窗口}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\n            vm.showDialog = function () {\r\n                vm.show = true;\n                vm._trigger({}, \"showed\");\r\n                return vm;\r\n            }\n            /**doc\r\n             * @description {隐藏模态窗口}\r\n             * @param {ev} {动作类型}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\n            vm.hideDialog = function (ev) {\r\n                vm.show = false;\n                vm._trigger(ev, \"hided\");\r\n                return vm;\r\n            }\r\n            /**doc\r\n             * @description {设置回调}\r\n             * @param {idx} {设置的按钮index}\r\n             * @param {callback} {对应的回调函数}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\r\n            vm.setCallback = function (idx, callback) {\r\n                vm.buttons[idx].callback = callback;\r\n                return vm;\r\n            }\r\n            //======= 外部接口 END =======//\n        },\n        $ready: function (vm) {\r\n\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:popmenu\"];\n    widget.regionals = {};\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/popmenu/mc.popmenu.js\n ** module id = 39\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-popmenu-cotar fade\\\" ms-click=\\\"hideDialog($event)\\\" ms-class-1=\\\"mc-dialog-show:show\\\"\\r\\n        ms-class-2=\\\"mc-dialog-hide:!show\\\">\\r\\n    <div class=\\\"mc-popmenu-content\\\" ms-click=\\\"clickDialog($event)\\\" ms-class-1=\\\"mc-popmenu-lg: size=='large'\\\"\\r\\n         ms-class-2=\\\"mc-popmenu-sm: size=='small'\\\" ms-class-3=\\\"mc-popmenu-st: size=='tiny'\\\" ms-css-top=\\\"position.top\\\" ms-css-left=\\\"position.left\\\">\\r\\n        <!-- popmenu body -->\\r\\n        <div class=\\\"mc-popmenu-body\\\" ms-css-padding=\\\"padding\\\">{{content|html}}</div>\\r\\n    </div>\\r\\n    <!-- popmenu bg -->\\r\\n    <div class=\\\"mc-popmenu-bg\\\"></div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/popmenu/mc.popmenu.html\n ** module id = 40\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/popmenu/mc.popmenu.min.css\n ** module id = 41\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.pop.html\", \"./mc.pop.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:pop\", {\r\n        //#region 外部参数\r\n        mcstyle: \"\", //风格\r\n        disabled: false, //是否禁用\r\n        //#endregion\r\n\r\n        //#region 外部事件\r\n        onInit: _interface, //初始化接口\r\n        //#endregion\r\n\r\n        //#region 外部接口\r\n        isDisable: _interface, //是否禁用\r\n        showTip: _interface, //显示提示\r\n        showSuccessTip: _interface, //显示成功提示\r\n        showFailTip: _interface, //显示失败提示\r\n        showConfirm: _interface, //显示操作确认\r\n        //#endregion\r\n\r\n        //#region 内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\r\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\r\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\r\n        //#endregion\r\n\r\n        //#region 内部事件\r\n\r\n        //#endregion\r\n\r\n        //#region 内部接口\r\n        _trigger: _interface, //内部触发器\r\n        //#endregion\r\n\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options;\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //#region 外部事件\r\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 外部接口\r\n\r\n            vm.showTip = function (msg, time) {\r\n                if (time === undefined) {\r\n                    swal(msg);\r\n                } else {\r\n                    swal({ title: msg, timer: time });\r\n                }\r\n            }\r\n            vm.showSuccessTip = function (msg, time) {\r\n                if (time === undefined) {\r\n                    swal({ title: msg, type: \"success\" });\r\n                } else {\r\n                    swal({ title: msg, type: \"success\", timer: time });\r\n                }\r\n            }\r\n            vm.showFailTip = function (msg, time) {\r\n                if (time === undefined) {\r\n                    swal({ title: msg, type: \"error\" });\r\n                } else {\r\n                    swal({ title: msg, type: \"error\", timer: time });\r\n                }\r\n            }\r\n            /**doc\r\n             * 显示确认框\r\n             * @param {} title 确认框标题\r\n             * @param {} text 确认框内容\r\n             * @returns {Defferred对象} done执行confirm按钮事件,fail执行cancel按钮事件\r\n             */\r\n            vm.showConfirm = function (title, text) {\r\n                var def = $.Deferred();\r\n                swal({\r\n                    title: title,\r\n                    text: text,\r\n                    type: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#DD6B55\",\r\n                    confirmButtonText: \"确认\",\r\n                    cancelButtonText: \"取消\",\r\n                    closeOnConfirm: false, //bug 依照confirm回调函数的调用时间,todo loading?\r\n                    closeOnCancel: true\r\n                }, function (isConfirm) {\r\n                    if (isConfirm) {\r\n                        vm._trigger({}, \"confirm\");\r\n                        def.resolve();\r\n                    } else {\r\n                        vm._trigger({}, \"cancel\");\r\n                        def.reject();\r\n                    }\r\n                });\r\n                return def;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部事件\r\n\r\n            //#endregion\r\n\r\n            //#region 内部接口\r\n            vm._trigger = function (ev, type, _this) {\r\n                switch (type) {\r\n                    case \"confirm\":\r\n                        if (typeof vm.onConfirm == \"function\") {\r\n                            vm.onConfirm(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    case \"cancel\":\r\n                        if (typeof vm.onCancel == \"function\") {\r\n                            vm.onCancel(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n\r\n            //#endregion\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:pop\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/pop/mc.pop.js\n ** module id = 42\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-pop-cotar\\\"></div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/pop/mc.pop.html\n ** module id = 43\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/pop/mc.pop.min.css\n ** module id = 44\n ** module chunks = 0\n **/","define(['avalon', 'mmRequest', 'text!./mc.form.html', './mc.form.min.css'], function (avalon, req, template) {\r\n    var _interface = function () { };\r\n    /**\r\n     * 判断子组件内是否有某个属性\r\n     * @param {} comp 子组件vm\r\n     * @param {} val 属性名\r\n     * @returns {} \r\n     */\n    function _hasProperty(comp, propertyName) {\r\n        return comp.hasOwnProperty(propertyName) && comp[propertyName] !== \"\";\r\n    }\r\n    avalon.component(\"mc:form\", {\r\n        //外部属性\r\n        title: \"\", //标题\r\n        cpadding: 15, //组件内边距\r\n        labelSize: 240,\r\n        //buttons: true,  //是否存在submit、reset按钮\r\n        hasButtons: true, //是否存在按钮\n        leftLabel: \"确定\", //左边按钮\n        rightLabel: \"取消\", //右边按钮\n        border: false,\n        btnSize: 'normal',\n        btnPos: 'left',\n        submitMode: 'ajax',\n        //autoAjaxFirst: true, //是否自动发起第一次请求\r\n        $defaultData: null, //默认数据\r\n        defaultData: null, //暴露给外部进行绑定\r\n        //外部参数\n        submitUrl: '',\n        loadUrl: '',\n        loadParam: {},\n        onoksubmited: null,\n        onerrsubmited: null,\n        onsubmited: null,\n        onBeforeSubmit: null,\n        onreseted: null,\n        onloaded: null,\n        onDataChange: null, //当请求到新数据时触发事件\r\n        onFail: null,\r\n        onInit: _interface, //初始化接口\r\n\n        //ajax相关\r\n        $ajaxTmpData: null, //ajax获取到的临时数据\r\n        $ajaxConfig: {\r\n            url: \"\",\r\n            data: {},\r\n            dataType: \"json\"\r\n        },\n        isLoadingData: false, //是否正在加载数据\n\n        //内部属性\n        isInit: true,\r\n        //oriData: {},\n        //view属性\n        isLoading: false,\n        //view接口\n        doSubmit: _interface,\n        doReset: _interface,\n        _trigger: _interface,\n        _ajax: _interface,\n        _checkValid: _interface,\n\n        ajaxData: _interface, //请求数据\n        checkData: _interface, //验证数据\n        $$checkData: _interface, //验证数据\n\n        getAjaxData: _interface, //获取上次ajax返回的数据\n        setAjaxData: _interface, //设置ajax返回的数据\n\n        getDefaultData: _interface, //获得表单默认数据\n        setDefaultData: _interface, //设置表单默认数据\n\n        getData: _interface,\n        $$getData: _interface,\n\n        setData: _interface,\n        submit: _interface,\n        reset: _interface,\n        reload: _interface,\n        getElements: _interface,\n        //slot\n        content: \"\",\n\n        $template: template,\n        $replace: true,\r\n        //hooks : 定义component中的属性\n        //vmOpts : 引用component时的js配置$opt \n        //eleOpts: 使用component时标签中的属性\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options;\r\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\n            //内部方法\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"data\":\n                        if (typeof vm.onDataChange == \"function\") {\r\n                            vm.onDataChange(vm);\r\n                        }\n                        break;\r\n                    case \"fail\":\n                        if (typeof vm.onFail == \"function\") {\r\n                            vm.onFail(vm);\r\n                        }\n                        break;\r\n                    case \"loaded\":\n                        if (typeof vm.onloaded == \"function\") {\r\n                            vm.onloaded(ev, vm);\r\n                        }\n                        break;\n                    case \"submited\":\n                        if (typeof vm.onsubmited == \"function\") {\r\n                            vm.onsubmited(ev, vm);\r\n                        }\n                        break;\n                    case \"beforeSubmit\":\n                        if (typeof vm.onBeforeSubmit == \"function\") {\r\n                            vm.onBeforeSubmit(ev, vm);\r\n                        }\n                        break;\n                    case \"reseted\":\n                        if (typeof vm.onreseted == \"function\") {\r\n                            vm.onreseted(ev, vm);\r\n                        }\n                        break;\n                    case \"ok\":\n                        if (typeof vm.onoksubmited == \"function\") {\r\n                            vm.onoksubmited(ev, vm);\r\n                        }\n                    case \"err\":\n                        if (typeof vm.onerrsubmited == \"function\") {\r\n                            vm.onerrsubmited(ev, vm);\r\n                        }\n                    default: break;\r\n                }\r\n            }\n            vm._ajax = function (url, data, successCallback) {\r\n                if (url != \"\") {\r\n                    vm.isLoading = true;\n                    req.ajax({\r\n                        type: \"POST\",\n                        url: url,\n                        data: {\r\n                            data: JSON.stringify(data)\r\n                        },\n                        dataType: \"json\",\n                        headers: {},\n                        success: function (d, status, xhr) {\r\n                            vm.isLoading = false;\n                            successCallback(d);\r\n                        },\n                        error: function (d) {\r\n                            vm.isLoading = false;\n                            vm._trigger(d, \"err\");\r\n                        }\r\n                    });\r\n                }\r\n            }\n            vm._checkValid = function () {\r\n                var result = true;\n                for (k in vm.$refs) {\r\n                    var comp = vm.$refs[k];\n                    if (comp.isValid != undefined && comp.isValid === false) {\r\n                        result = false; break;\r\n                    }\r\n                }\n                return result;\r\n            }\n\n            vm.ajaxData = function (data) {\r\n                var config = vm.$ajaxConfig;\r\n                if (config.url !== \"\") {\r\n                    var param = $.extend(data, config.data);\r\n                    Mc.Ajax({\r\n                        url: config.url,\r\n                        data: param,\r\n                        success: function (response) {\r\n                            vm.isLoadingData = false;\r\n                            vm.setAjaxData(response);\r\n                            vm._trigger({}, \"data\");\r\n                        },\r\n                        beforeSend: function () {\r\n                            vm.isLoadingData = true;\r\n                        },\r\n                        fail: function (response) {\r\n                            vm.isLoadingData = false;\r\n                            vm._trigger({}, \"fail\");\r\n                        }\r\n                    });\r\n                }\r\n            }\n            vm.getAjaxData = function () {\r\n                return vm.$ajaxTmpData;\r\n            }\r\n            vm.setAjaxData = function (val) {\r\n                vm.$ajaxTmpData = val;\r\n            }\n\n            vm.$$checkData = function (curVm) {\r\n                var result = true;\n                for (k in curVm) {\r\n                    var comp = curVm[k];\n                    //todo 验证重构，子组件提供是否带验证，是否验证通过的方法\n                    if (comp.hasOwnProperty(\"validValue\")) {\r\n                        comp.validValue(); //执行数据验证\r\n                        if (comp.hasOwnProperty(\"isValid\") && !comp.isValid) {\r\n                            result = false;\r\n                            //验证单个后结束，还是验证全部\r\n                            //break;\r\n                        }\r\n                    }\r\n                }\n                return result;\r\n            }\n\n            vm.checkData = function () {\r\n                var result = true;\n                for (k in vm.$refs) {\r\n                    var comp = vm.$refs[k];\n                    //todo 验证重构，子组件提供是否带验证，是否验证通过的方法\n                    if (comp.hasOwnProperty(\"validValue\")) {\r\n                        comp.validValue(); //执行数据验证\r\n                        if (comp.hasOwnProperty(\"isValid\") && !comp.isValid) {\r\n                            result = false;\r\n                            //验证单个后结束，还是验证全部\r\n                            //break;\r\n                        }\r\n                    }\r\n                }\n                return result;\r\n            }\n\n            vm.doSubmit = function (ev) {\r\n                vm._trigger(ev, \"submited\");\n                var curVm = vm.getCurVm();\r\n                if (vm.$$checkData(curVm)) {\r\n                    //var data = vm.getData();\r\n                    var data = vm.$$getData(curVm);\r\n                    vm._trigger(ev, \"beforeSubmit\");\r\n                    vm.ajaxData(data);\r\n                }\r\n            }\n            vm.doReset = function (ev) {\r\n                vm.setData();\n                vm._trigger(ev, \"reseted\");\r\n            }\n            \n            vm.getCurVm = function () {\r\n                var vmArr = [];\r\n                var tmpData = [];\r\n                var judgeStateList = []; //判断statelist\r\n                for (k in vm.$refs) {\r\n                    if (vm.$refs.hasOwnProperty(k)) {\r\n                        var comp = vm.$refs[k];\r\n                        //todo 如果不跟外部switch关联(即不在外部更新字段值,则直接去获取defaultdata内该字段的值) \r\n                        if (_hasProperty(comp, \"judgeName\")) {\r\n                            judgeStateList.push({\r\n                                \"judge\": comp.judgeName,\r\n                                \"state\": comp.getValue() + \"\"\r\n                            });\r\n                        }\r\n                        if (_hasProperty(comp, \"fJudge\")) {\r\n                            tmpData.push({\r\n                                \"vm\": comp,\r\n                                \"judge\": comp.fJudge,\r\n                                \"state\": comp.fState + \"\"\r\n                            });\r\n                        } else {\r\n                            vmArr.push(comp);\r\n                        }\r\n                    }\r\n                }\r\n                $.each(tmpData, function (i, dataVal) {\r\n                    $.each(judgeStateList, function (i, judgeVal) {\r\n                        if (dataVal.judge === judgeVal.judge) {\r\n                            var stateList = dataVal.state.split(\",\");\r\n                            $.each(stateList, function (i, stateVal) {\r\n                                if (stateVal === judgeVal.state) {\r\n                                    vmArr.push(dataVal.vm);\r\n                                    return false;\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                });\r\n                return vmArr;\r\n            }\n\n            vm.$$getData = function (curVm) {\r\n                //todo 组件是否有judgeName,submitName,formName在初始化的时候判断组装\r\n                var data = {};\n                for (k in curVm) {\r\n                    if (curVm.hasOwnProperty(k)) {\r\n                        var comp = curVm[k];\r\n                        //submitName优先级高于formName\r\n                        if (_hasProperty(comp, \"submitName\") && typeof comp.getValue == \"function\") {\r\n                            data[comp.submitName] = comp.getValue();\r\n                        } else if (_hasProperty(comp, \"formName\") && typeof comp.getValue == \"function\") {\r\n                            data[comp.formName] = comp.getValue();\r\n                        }\r\n                    }\r\n                }\r\n                return data;\r\n            }\n\n            //对外方法\n            vm.getData = function () {\r\n                //todo 组件是否有judgeName,submitName,formName在初始化的时候判断组装\r\n                var data = {};\r\n                var tmpData = [];\r\n                var judgeStateList = []; //判断statelist\n                for (k in vm.$refs) {\r\n                    if (vm.$refs.hasOwnProperty(k)) {\r\n                        var comp = vm.$refs[k];\r\n                        //submitName优先级高于formName\r\n                        if (_hasProperty(comp, \"submitName\") && typeof comp.getValue == \"function\") {\r\n                            if (_hasProperty(comp, \"fJudge\")) {\r\n                                tmpData.push({\r\n                                    \"key\": comp.submitName,\r\n                                    \"value\": comp.getValue(),\r\n                                    \"judge\": comp.fJudge,\r\n                                    \"state\": comp.fState + \"\"\r\n                                });\r\n                            } else {\r\n                                tmpData.push({\r\n                                    \"key\": comp.submitName,\r\n                                    \"value\": comp.getValue()\r\n                                });\r\n                            }\r\n                        } else if (_hasProperty(comp, \"formName\") && typeof comp.getValue == \"function\") {\r\n                            if (_hasProperty(comp, \"fJudge\")) {\r\n                                tmpData.push({\r\n                                    \"key\": comp.formName,\r\n                                    \"value\": comp.getValue(),\r\n                                    \"judge\": comp.fJudge,\r\n                                    \"state\": comp.fState + \"\"\r\n                                });\r\n                            } else {\r\n                                tmpData.push({\r\n                                    \"key\": comp.formName,\r\n                                    \"value\": comp.getValue()\r\n                                });\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                $.each(tmpData, function (i, dataVal) {\r\n                    if (dataVal.judge) {\r\n                        $.each(judgeStateList, function (i, judgeVal) {\r\n                            if (dataVal.judge === judgeVal.judge) {\r\n                                var stateList = dataVal.state.split(\",\");\r\n                                $.each(stateList, function(i, stateVal) {\r\n                                    if (stateVal === judgeVal.state) {\r\n                                        data[dataVal.key] = dataVal.value;\r\n                                        return false;\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                    } else {\r\n                        data[dataVal.key] = dataVal.value;\r\n                    }\r\n                });\r\n                return data;\r\n            }\n            vm.setData = function () {\r\n                var data = vm.getDefaultData();\r\n                for (k in vm.$refs) {\r\n                    if (vm.$refs.hasOwnProperty(k)) {\r\n                        var comp = vm.$refs[k];\r\n                        if (_hasProperty(comp, \"formName\") && typeof comp.setValue == \"function\") {\r\n                            var formNameList = comp.formName.split(\",\");\r\n                            var dataList = formNameList.map(function(val, i) {\r\n                                var dataVal = data[val];\r\n                                return dataVal !== null && dataVal !== undefined ? data[val] : \"\";\r\n                            });\r\n                            comp.setValue.apply(vm, dataList);\r\n                            //comp.setValue(data[comp.formName] ? data[comp.formName] : \"\");\r\n                        }\r\n                    }\r\n                }\r\n                return vm;\r\n            }\n\n            vm.getDefaultData = function () {\r\n                return vm.$defaultData;\r\n            }\r\n            vm.setDefaultData = function (val) {\r\n                vm.$defaultData = val;\r\n                vm.defaultData = val;\r\n                return vm;\r\n            }\n\n            vm.submit = function () {\r\n                vm.doSubmit({});\r\n            }\n            vm.reset = function () {\r\n                vm.doReset({});\r\n            }\n            vm.reload = function () {\r\n                if (vm.loadUrl != \"\") {\r\n                    vm._ajax(vm.loadUrl, vm.loadParam, function (d) {\r\n                        if (d.response.state == \"success\") {\r\n                            //vm.setData(d.response.data);\r\n                        }\n                        vm._trigger(d, \"loaded\");\r\n                    });\r\n                }\r\n            }\n            vm.getElements = function () {\r\n                var arr = [];\n                for (k in vm.$refs) {\r\n                    var comp = vm.$refs[k];\n                    if (comp.name != undefined && typeof comp.setValue == \"function\") {\r\n                        arr.push(comp);\r\n                    }\r\n                }\n                return arr;\r\n            }\r\n        },\n        $ready: function (vm, elem) {\r\n            //$.each(vm.$refs, function (val, i) {\r\n            //    var childVm = avalon.vmodels[val];\r\n            //    childVm.labelSize != undefined && (childVm.labelSize = vm.labelSize);\r\n            //});\r\n            for (k in vm.$refs) {\r\n                var comp = vm.$refs[k];\n                if (comp.hasOwnProperty(\"labelSize\") && typeof comp.getValue == \"function\") {\r\n                    comp.labelSize = vm.labelSize;\r\n                }\r\n            }\r\n            //if (vm.autoAjaxFirst) {\r\n            //    vm.getData();\r\n            //} else {\r\n            //    vm.setData();\r\n            //}\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            //vm.oriData = vm.getData();\n            //vm.reload();\r\n            vm.isInit = false;\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:form\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/mc.form.js\n ** module id = 45\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-container mc-animate\\\" ms-class-1=\\\"mc-loading: isInit\\\" ms-class-2=\\\"mc-animate-content-show: !isInit\\\" \\n        ms-css-padding=\\\"cpadding\\\">\\n\\t<div class=\\\"mc-form-title\\\" ms-if=\\\"title!=''\\\">{{title}}</div>\\r\\n    <div ms-class-1=\\\"padding_left2: border===true\\\" ms-class-2=\\\"padding_right2: border===true\\\" ms-class-3=\\\"padding_bottom: border===true\\\">\\r\\n        {{content|html}}\\r\\n    </div>\\n\\t<!--<div class=\\\"form-group no_margin padding_top padding_bottom\\\" ms-class-1=\\\"padding_left2: border===true\\\" ms-class-2=\\\"padding_right2: border===true\\\" ms-class-3=\\\"td_form_background: border===true\\\" ms-class-4=\\\"td_form_border_top:border===true\\\" ms-if=\\\"buttons===true\\\">\\n\\t\\t<a ms-if=\\\"btnPos=='right'\\\" class=\\\"btn btn-default btn-primary waves-effect waves-light no_margin\\\" ms-class-1=\\\"btn-sm: btnSize=='small'\\\" style=\\\"visibility:hidden;\\\">&nbsp;</a>\\n\\t\\t<a class=\\\"btn btn-default btn-primary waves-effect waves-light no_margin\\\" href=\\\"javascript:void(0)\\\" ms-class-1=\\\"btn-sm: btnSize=='small'\\\" ms-class-2=\\\"pull-right: btnPos=='right'\\\" ms-class-3=\\\"margin_left: btnPos=='right'\\\" ms-click=\\\"doSubmit($event)\\\">&nbsp;提&nbsp;&nbsp;交&nbsp;</a>\\n\\t\\t<a class=\\\"btn btn-default waves-effect waves-light no_margin\\\" href=\\\"javascript:void(0)\\\" ms-class-1=\\\"btn-sm: btnSize=='small'\\\" ms-class-2=\\\"pull-right: btnPos=='right'\\\" ms-class-3=\\\"margin_left: btnPos=='left'\\\" ms-click=\\\"doReset($event)\\\">&nbsp;重&nbsp;&nbsp;置&nbsp;</a>\\n\\t</div>-->\\n\\t<!--<div class=\\\"loading-mask\\\" ms-visible=\\\"isLoading\\\">\\n\\t\\t<div class=\\\"loading-container\\\">\\n\\t\\t\\t<div class=\\\"loading-speeding-wheel\\\"></div><strong>数据加载中,请稍后…</strong>\\n\\t\\t</div>\\n\\t</div>-->\\n    <div class=\\\"btn-wrap hf\\\" ms-if=\\\"hasButtons\\\" ms-css-padding-left=\\\"labelSize\\\">\\r\\n        <mc:button on-click=\\\"doSubmit\\\" ms-attr-label=\\\"{{leftLabel}}\\\" type=\\\"success\\\" size=\\\"wide\\\"></mc:button>\\r\\n        <mc:button on-click=\\\"doReset\\\" ms-attr-label=\\\"{{rightLabel}}\\\" size=\\\"wide\\\"></mc:button>\\r\\n    </div>\\r</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/mc.form.html\n ** module id = 46\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/mc.form.min.css\n ** module id = 47\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.searchbox.html\", \"./mc.searchbox.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:searchbox\", {\r\n        //#region 外部参数\r\n        mcstyle: \"\", //风格\r\n        disabled: false, //是否禁用\r\n        placeholder: \"请输入要搜索的数据\",\r\n\r\n        //搜索类型配置项\r\n        $search_type_opt: {},\r\n        //#endregion\r\n\r\n        //#region 外部事件\r\n        /**doc\r\n         * @description {初始化接口}\r\n         * @param {vm} {组件的vm}\r\n         * @param {elem} {组件的elem}\r\n         */\r\n        onInit: _interface, //初始化接口\r\n        /**doc\r\n         * @description {当按钮点击时触发事件}\r\n         * @param {ev} {事件类型,js触发的话为空对象}\r\n         * @param {elem} {组件的elem}\r\n         */\r\n        onSearch: null, //当按钮点击时触发事件\r\n        onCleanSearch: null, //全部数据按钮点击时触发事件\r\n        //#endregion\r\n\r\n        //#region 外部接口\r\n        isDisable: _interface, //是否禁用\r\n        search: _interface, //搜索\r\n        cleanSearch: _interface, //清除搜索\r\n        getSearchData: _interface, //获取搜索数据data\r\n        setSearchData: _interface, //设置搜索数据data\r\n        //#endregion\r\n\r\n        //#region 内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        $searchType: \"\", //搜索类型\r\n        $searchData: {}, //搜索data\r\n        $searchTypeVm: null, //搜索类型下拉选择框vm\r\n        $searchIptVm: null, //搜索内容输入框vm\r\n        lindex: -1, //布局中的序号\r\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\r\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\r\n        //#endregion\r\n\r\n        //#region 内部事件\r\n        changeSearchType: _interface, //搜索类型改变事件\r\n        getSearchTypeVM: _interface, //获取搜索类型下拉选择框的vm\r\n        getSearchIptVM: _interface, //获取搜索输入框的vm\r\n        doSearch: _interface, //搜索事件\r\n        doGetAll: _interface, //全部数据事件\r\n        //#endregion\r\n\r\n        //#region 内部接口\r\n        _trigger: _interface, //内部触发器\r\n        setSearchType: _interface, //设置搜索类型\r\n        //#endregion\r\n\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options;\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //#region 外部事件\r\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 外部接口\r\n            /**doc\r\n             * @description {搜索接口,触发onSearch回调}\r\n             * @returns {} \r\n             */\r\n            vm.search = function () {\r\n                vm._trigger({}, \"search\");\r\n            }\r\n            /**doc\r\n             * @description {不搜索显示全部数据}\r\n             * @returns {} \r\n             */\r\n            vm.cleanSearch = function () {\r\n                vm.$searchTypeVm.setSelectByIndex(0); //搜索类型返回第0个\r\n                vm.$searchIptVm.setData(\"\"); //清空搜索框数据\r\n                vm._trigger({}, \"cleanSearch\");\r\n            }\r\n            /**doc\r\n             * @description {获取待搜索的数据}\r\n             * @returns {object} {结构key:value} \r\n             */\r\n            vm.getSearchData = function () {\r\n                vm.$searchData = {};\r\n                vm.$searchData[vm.$searchType] = vm.$searchIptVm.getValue();\r\n                return vm.$searchData;\r\n            }\r\n            /**doc\r\n             * @description {设置搜索数据}\r\n             * @param {newData} {object} {结构key:value,key对应搜索类型下拉选择框的可选项,value对应搜索输入框的值}\r\n             * @returns {} \r\n             */\r\n            vm.setSearchData = function(newData) {\r\n                vm.$searchData = {};\r\n                vm.$searchData = newData;\r\n                //同步new到view,只赋值newData里的第一对键值\r\n                $.each(newData, function (key, val) {\r\n                    vm.setSearchType(key);\r\n                    vm.$searchIptVm.setValue(val);\r\n                    return false;\r\n                });\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部事件\r\n            vm.getSearchTypeVM = function(_vm,elem) {\r\n                vm.$searchType = _vm.getValue();\r\n                vm.$searchTypeVm = _vm;\r\n            }\r\n            vm.changeSearchType = function (ev, _vm) {\r\n                vm.$searchType = _vm.getValue();\r\n                vm.$searchIptVm.setData(\"\"); //清空搜索框数据\r\n            }\r\n            vm.getSearchIptVM = function (_vm, elem) {\r\n                vm.$searchIptVm = _vm;\r\n            }\r\n            vm.doSearch = function(ev) {\r\n                vm.search();\r\n            }\r\n            vm.doGetAll = function (ev) {\r\n                vm.cleanSearch();\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部接口\r\n            vm._trigger = function (ev, type, _this) {\r\n                switch (type) {\r\n                    case \"search\":\r\n                        if (typeof vm.onSearch == \"function\") {\r\n                            vm.onSearch(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    case \"cleanSearch\":\r\n                        if (typeof vm.onCleanSearch == \"function\") {\r\n                            vm.onCleanSearch(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            vm.setSearchType = function(val) {\r\n                vm.$searchTypeVm.setValue(val);\r\n            }\r\n            //#endregion\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:searchbox\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/searchbox/mc.searchbox.js\n ** module id = 48\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-searchbox-cotar hf\\\" ms-class=\\\"mc-loading: isInit\\\">\\r\\n    <mc:selectbox class=\\\"fp\\\" config=\\\"$search_type_opt\\\" label=\\\"搜索\\\" label-size=\\\"40\\\" on-init=\\\"getSearchTypeVM\\\" on-selected=\\\"changeSearchType\\\"></mc:selectbox>\\r\\n    <mc:text class=\\\"fp\\\" width=\\\"150\\\" on-init=\\\"getSearchIptVM\\\" ms-attr-placeholder=\\\"placeholder\\\"></mc:text>\\r\\n    <mc:button class=\\\"fp no-radius no-lr-border\\\" label=\\\"搜索\\\" on-click=\\\"doSearch\\\"></mc:button>\\r\\n    <mc:button class=\\\"fp no-left-radius\\\" label=\\\"全部数据\\\" on-click=\\\"doGetAll\\\"></mc:button>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/searchbox/mc.searchbox.html\n ** module id = 49\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/searchbox/mc.searchbox.min.css\n ** module id = 50\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.tabs.html\", \"./mc.tabs.min.css\"], function (avalon, template) {\r\n    function setContentHeight(vm, elem) {\r\n        var vmHeight = $(elem).css(\"height\").replace(\"px\", \"\") >>> 0; //组件高度\r\n        $(elem).find(\".mc-tabs-body\").css(\"height\", vmHeight - vm.otherOffset - vm.scrollContentOffset);\r\n    }\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:tabs\", {\r\n        //外部参数\r\n        tabsName: \"\",\r\n        tabConfig: [], //tab配置项 [label: 文字信息] [callback: 回调函数]\r\n        activeIndex: 0, //tab激活的index\r\n        disabled: false, //是否禁用\r\n\r\n        bindSize: \"\", //跟linearlayout布局大小层绑定的class名\r\n\r\n        otherOffset: 0, //其他外部偏移（跟linearlayout内部包括的relativelayout的padding有关,暂定待修改,relativelayout跟滚动结合）\r\n        scrollContentOffset: 31, //滚动内容偏移值（跟样式有关系）\r\n\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onClick: null, //当tab项点击时触发事件\r\n\r\n        //外部接口\r\n        isDisable: _interface, //是否禁用\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\n        $tabsBody: null, //tabs body 的 jQuery 对象\n\n        //内部事件\n        clickTab: _interface, //按钮点击事件\n\n        //内部接口\n        _trigger: _interface, //内部触发器\r\n        renderContent: _interface, //渲染tab内容\r\n\r\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            if (vmOpts.tabConfig != undefined) {\r\n                for (var i = 0; i < vmOpts.tabConfig.length; i++) {\r\n                    hooks[\"content\" + i] = \"\";\r\n                }\r\n            }\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options;\r\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\r\n            //内部事件\r\n            vm.clickTab = function (ev, tabIdx) {\r\n                if (!vm.disabled) {\r\n                    if (vm.activeIndex !== tabIdx) {\r\n                        vm.activeIndex = tabIdx;\r\n                        typeof vm.tabConfig[tabIdx].callback === \"function\" && vm.tabConfig[tabIdx].callback(ev, vm);\r\n                        vm._trigger(ev, \"click\");\r\n                        ev.stopPropagation();\r\n                    }\r\n                }\r\n            }\r\n\r\n            //内部接口\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"click\":\n                        if (typeof vm.onClick == \"function\") {\r\n                            vm.onClick(ev, vm);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n            vm.renderContent = function(tabIdx) {\r\n                return vm[\"content\" + tabIdx];\r\n            }\n\n            //外部事件\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n        },\n        $ready: function (vm, elem) {\r\n            vm.$tabsBody = $(elem).find(\".mc-tabs-body\");\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n            console.log(\"tabs ini\");\r\n            //setContentHeight(vm, elem);\r\n            //注册布局大小变动事件\r\n            McAvalon.$window.on(\"layout_resize\", function (event, layoutSizeObj) {\r\n                console.log(layoutSizeObj);\r\n                if (layoutSizeObj[\"mc_li\" + vm.bindSize]) {\r\n                    var vmHeight = layoutSizeObj[\"mc_li\" + vm.bindSize].height;\r\n                    vm.$tabsBody.css(\"height\", vmHeight - vm.otherOffset - vm.scrollContentOffset);\r\n                }\r\n            });\r\n            //触发布局初始化事件\r\n            McAvalon.$window.trigger(\"layout_ini\");\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:tabs\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/tabs/mc.tabs.js\n ** module id = 51\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-tabs-cotar\\\" ms-class-1=\\\"mc_li{{bindSize}}\\\" ms-class-2=\\\"mc-loading: isInit\\\">\\r\\n    <div class=\\\"mc-tabs-switch-wrap hf\\\">\\r\\n        <div class=\\\"mc-switch-item fp\\\" ms-repeat=\\\"tabConfig\\\" ms-class=\\\"active:$index === activeIndex\\\" ms-click=\\\"clickTab($event,$index)\\\">\\r\\n            <span>{{el.label}}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"mc-tabs-body\\\" ms-repeat=\\\"tabConfig\\\" ms-class=\\\"active:$index === activeIndex\\\" ms-visible=\\\"$index === activeIndex\\\">\\r\\n        {{renderContent($index)|html}}\\r\\n    </div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/tabs/mc.tabs.html\n ** module id = 52\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/tabs/mc.tabs.min.css\n ** module id = 53\n ** module chunks = 0\n **/","toCheckBoxData = function (data) {\r\n\r\n    avalon.each(data, function (i, item) {\r\n        item.checked = false;\r\n    })\r\n    return data;\r\n};\r\ndefine(['avalon', 'text!./mc.checkboxgroup.html', './mc.checkboxgroup.min.css'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:checkboxgourp\", {\r\n        //表单相关\r\n        formName: \"\", //表单data的key,输入框name\r\n        judgeName: \"\", //有不同状态的form组件,用来判断的字段\r\n        readonly: false, //是否只读，只读就无法修改\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        //表单相关 end\r\n\r\n        //外部参数\r\n        label: \"\", //复选框后面文本\r\n        labelSize:0,\r\n        checked: false, //是否选中\r\n        disabled: false, //是否禁用,包括全部\r\n        muilt: false,// 默认多选\r\n        idName: \"id\",// \r\n        textName: \"text\",// \r\n        data: [],//数据源 [text,value,checked]\r\n        valid: \"\", //验证类型\r\n        must: false, //是否必填,也可为数字 代表必须的长度(会将覆盖length)\r\n        tip: \"\", //填写提示信息\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onChecked: null, //当复选框选中时触发事件\r\n        onCancel: null, //当复选框取消选中时触发事件\r\n        onChanged: null, //当复选框状态改变时触发事件\r\n\r\n        //外部接口\r\n        isChecked: _interface, //是否有选中的东西 \r\n        getCheckedData: _interface, //获取选中的数据 array \r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\r\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\r\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\r\n        checkedList: [],\r\n        isValid: true, //是否正在验证\r\n        validInfo: \"\", //错误信息\r\n        //内部事件\r\n        clickCheckbox: _interface, //选项点击事件\r\n        validValue: _interface,\r\n        //内部接口\r\n        _trigger: _interface, //内部触发器\r\n        setCheckedState: _interface, //设置选中状态\r\n        //单向流\r\n        //  updateAllState: _interface, //单向流总函数\r\n        // updateCheckedState: _interface, //更新Checked\r\n\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            if (vmOpts.data) {\r\n                vmOpts.data = toCheckBoxData(vmOpts.data);\r\n            }\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象 \r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //#region outer\r\n            vm.getValue = function () {\r\n                var r = vm.getCheckedData();\r\n                if (r && r.length) {\r\n                    if (vm.muilt) {\r\n                        //todo 格式\r\n                        return r.join(';');\r\n                    } else {\r\n                        return r[0][vm.idName];\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n            vm.setValue = function (val) {\r\n                //init\r\n                vm.validInfo = \"\";\r\n                //todo clr fn\r\n                vm.data.forEach(function (item, i) {\r\n                    item.checked = false;\r\n                })\r\n                //select\r\n                vm.setCheckedStateById(val,true);\r\n            }\r\n\r\n\r\n            //#endregion\r\n\r\n\r\n\r\n            //内部事件\r\n            vm.clickCheckbox = function (ev, item) {\r\n                if (!(vm.disabled || vm.readonly)) {\r\n                    if (vm.muilt) {\r\n                        //多选\r\n                        var state = !item.checked;\r\n                        //set state\r\n                        vm.setCheckedState(item, state);\r\n                        //trigger\r\n                        if (state) {\r\n                            //      vm._trigger(ev, \"checked\");\r\n                        } else {\r\n                            //    vm._trigger(ev, \"cancel\");\r\n                        }\r\n                        //   vm._trigger(ev, \"changed\");\r\n                    } else {\r\n                        //single \r\n                        var state = item.checked;\r\n                        if (state) {\r\n                            //已经选中 没操作的\r\n                        } else {\r\n                            //单选逻辑 \r\n                            avalon.each(vm.data, function (k, _item) {\r\n                                _item[vm.idName] === item[vm.idName]\r\n                                //self\r\n                                ? vm.setCheckedState(item, true)\r\n                                //other\r\n                                : vm.setCheckedState(_item, false);\r\n                            })\r\n                        }\r\n                    }\r\n                    ev.stopPropagation();\r\n                }\r\n            }\r\n            vm.setCheckedState = function (item, state) {\r\n                item.checked = state;\r\n                vm._trigger({}, \"changed\");\r\n                // vm.updateAllState();\r\n            };\r\n            vm.setCheckedStateById = function (id, state) {\r\n                var r = _.find(vm.data, function (item, i) {\r\n                    return item[vm.idName] === id\r\n                })\r\n                if (r)\r\n                    vm.setCheckedState(r, state)\r\n            };\r\n            //内部接口\r\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"checked\":\r\n                        if (typeof vm.onChecked == \"function\") {\r\n                            vm.onChecked(ev, vm);\r\n                        }\r\n                        break;\r\n                    case \"cancel\":\r\n                        if (typeof vm.onCancel == \"function\") {\r\n                            vm.onCancel(ev, vm);\r\n                        }\r\n                        break;\r\n                    case \"changed\":\r\n                        if (typeof vm.onChanged == \"function\") {\r\n                            vm.onChanged(ev, vm);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            vm.validValue = function (ev) {\r\n                var value = vm.getValue();\r\n                \r\n                vm.validInfo = McAvalon.validata(value, vm.valid);\n                vm.isValid = vm.validInfo === \"\" ? true : false;\n                if (vm.isValid) {\r\n                    //fix 0 \r\n                    if (vm.must === true && value!==0 && (!value) ) {\r\n                        vm.isValid = false; vm.validInfo = \"该字段为必填字段\";\r\n                    }\r\n                }\r\n            }\r\n            //单向流\r\n            //vm.updateAllState = function () {\r\n            //    vm.updateCheckedState();\r\n            //}\r\n            ////更新选中\r\n            //vm.updateCheckedState = function () {\r\n            //    setTimeout(function () {\r\n            //        vm.checkedList = [];\r\n            //        avalon.each(vm.data, function (i, item) {\r\n            //            //第一次需要加false..\r\n            //            item.checked = item.checked || false\r\n            //            vm.checkedList[i] = item.checked;\r\n            //        });\r\n            //    }, 0)\r\n            //};\r\n            //外部接口 \r\n            //是否有选中的\r\n            vm.isChecked = function () {\r\n                //every unchecked\r\n                var r = vm.data.every(function (item) {\r\n                    return !item.checked;\r\n                });\r\n                return !r;\r\n            };\r\n            //获取选中vals\r\n            vm.getCheckedData = function () {\r\n                var r = vm.data.$model.filter(function (item) {\r\n                    return   item.checked\r\n                });\r\n                return r;\r\n            };\r\n\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n            //传入数据需要更新..\r\n            //vm.updateCheckedState();\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:checkboxgourp\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/checkboxGroup/mc.checkboxgroup.js\n ** module id = 54\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-checkboxgroup-cotar mc-form-group\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <div class=\\\"check-list\\\">\\r\\n        <div class=\\\"form-group form-control mc-checkbox-cotar\\\"\\r\\n             ms-repeat-checkbox=\\\"data\\\"\\r\\n             ms-class=\\\"disabled: disabled||readonly\\\"\\r\\n             ms-click=\\\"clickCheckbox($event,checkbox,checkbox.value)\\\">\\r\\n            <i class=\\\"mc-checkbox\\\" ms-class-1=\\\"mc-active: checkbox.checked\\\"\\r\\n               ms-class-2=\\\"single-mode: !muilt\\\"\\r\\n               ms-class-3=\\\"disabled: disabled||readonly\\\"></i>\\r\\n            <span class=\\\"mc-checkbox-label\\\">{{checkbox.text}}</span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <span class=\\\"mc-text-valid-info ftp\\\" ms-if=\\\"!isValid && validInfo != ''\\\">{{validInfo}}</span>\\r\\n    <div class=\\\"mc-text-field-tip\\\" ms-css-padding-left=\\\"labelSize\\\" ms-if=\\\"tip\\\">{{tip}}</div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/checkboxGroup/mc.checkboxgroup.html\n ** module id = 55\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/checkboxGroup/mc.checkboxgroup.min.css\n ** module id = 56\n ** module chunks = 0\n **/","\r\n//todata\r\ntoListAddData = function (data, cullOrigin) {\r\n    var r = [];\r\n    avalon.each(data, function (i, item) {\r\n        item.selected = false;\r\n        item.checked = item.checked || false;\r\n        if (cullOrigin) {\r\n            if (!item.checked) {\r\n                r.push(item);\r\n            }\r\n        } else {\r\n            r.push(item);\r\n        }\r\n\r\n    });\r\n\r\n    return r;\r\n};\r\n//todo 搜索只有indexof,全拼音后台没给 这也没做\r\ndefine(['avalon', 'text!./mc.listDataAdd.html', './mc.listDataAdd.min.css', 'mcButton', 'underscore'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:listdataadd\", {\r\n        //外部参数\r\n        data: [],//数据源 [text,id,checked,key] todo-->inside\r\n        dataConfirmConfig: null,//提交参数\r\n        ajax: false,//内置ajax开罐\r\n        idName: \"id\",//id name\r\n        textName: \"text\",//显示 name\r\n        keyName: \"key\", //key name \r\n        cullOrigin: false,\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onDataChange: _interface, //数据改变\r\n        //外部接口 \r\n        setData: _interface, //设置数据源\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\r\n        allLen: { left: 0, right: 0 },//全部 \r\n        addedList: [],//本次操作记录 ,todo\r\n        deledList: [],\r\n        seletedLen: { left: 0, right: 0 }, //在选中\r\n        selectedAll: { left: false, right: false },\r\n        originData: [],\r\n        diffData: [],\r\n        leftObj: {},//左右列表\r\n        rightObj: {},//\r\n        q: { left: \"\", right: \"\" },//搜索参数\r\n        r: null,//最终输出结果存储\r\n        $skipArray: ['data', 'r', 'originData', 'diffData'],\r\n        //内部事件 \r\n\r\n        //内部接口\r\n        _trigger: _interface, //内部触发器\r\n        genGroup: _interface, //生成所有组 \r\n        selectItem: _interface, //先选中\r\n        selectAll: _interface, //全选\r\n        addItem: _interface, //添加选中到左右  \r\n        confirm: _interface, //提交 \r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            if (vmOpts.data) {\r\n                vmOpts.data = toListAddData(vmOpts.data, vmOpts.cullOrigin);\r\n            }\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象 \r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //内部事件\r\n\r\n\r\n            //内部接口\r\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"data\":\r\n                        if (typeof vm.onDataChange == \"function\") {\r\n                            vm.onDataChange(vm.r, vm.originData, vm.diffData);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            var genGroup = function (str) {\r\n                var str = 'left';\r\n                var flag = false;\r\n\r\n                //生成组\r\n                var r = {};\r\n                vm.allLen[str] = vm.seletedLen[str] = 0;\r\n                var foo = true;\r\n                vm.data.forEach(function (item, i) {\r\n                    //对应组 \r\n                    if (item.checked === flag) {\r\n                        //q,如果有,去掉不符合\r\n                        var qStr = vm.q[str].trim();\r\n                        if (qStr && item[vm.textName].indexOf(qStr) < 0) {\r\n                            return false;\r\n                        }\r\n                        var key = item[vm.keyName];\r\n                        r[key] = r[key] || [];\r\n                        r[key].push(item);\r\n                        //其他更新\r\n                        //all\r\n                        vm.allLen[str] += 1;\r\n                        //selected\r\n                        if (item.selected) {\r\n                            vm.seletedLen[str] += 1;\r\n                        } else {\r\n                            foo = false;\r\n                        }\r\n                    }\r\n                });\r\n                if (foo && vm.allLen[str] > 0) {\r\n                    vm.selectedAll[str] = true;\r\n                } else {\r\n                    vm.selectedAll[str] = false;\r\n                }\r\n\r\n                vm.leftObj = r;\r\n\r\n                var str = 'right';\r\n                var flag = true;\r\n                //生成组\r\n                var r = {};\r\n                var foo = true;\r\n                vm.allLen[str] = vm.seletedLen[str] = 0;\r\n                vm.data.forEach(function (item, i) {\r\n                    //对应组 \r\n                    if (item.checked === flag) {\r\n                        //q,如果有,去掉不符合\r\n                        var qStr = vm.q[str].trim();\r\n                        if (qStr && item[vm.textName].indexOf(qStr) < 0) {\r\n                            return false;\r\n                        }\r\n                        var key = item[vm.keyName];\r\n                        r[key] = r[key] || [];\r\n                        r[key].push(item);\r\n                        //其他更新\r\n                        //all\r\n                        vm.allLen[str] += 1;\r\n                        //selected\r\n                        if (item.selected) {\r\n                            vm.seletedLen[str] += 1;\r\n                        } else {\r\n                            foo = false;\r\n                        }\r\n                    }\r\n                });\r\n                if (foo && vm.allLen[str] > 0) {\r\n                    vm.selectedAll[str] = true;\r\n                } else {\r\n                    vm.selectedAll[str] = false;\r\n                }\r\n                vm.rightObj = r;\r\n            };\r\n            vm.genGroup = _.throttle(genGroup, 200);\r\n\r\n\r\n            vm.selectItem = function (id) {\r\n                var r = vm.data.filter(function (item, i) {\r\n                    return item[vm.idName] === id;\r\n                });\r\n                //更新生成组\r\n                if (r[0]) {\r\n                    r[0].selected = !r[0].selected;\r\n                    //改全选\r\n                    vm.genGroup();\r\n                }\r\n            }\r\n            vm.selectAll = function (str) {\r\n                var flag;\r\n                if (str === 'left') {\r\n                    flag = false;\r\n                } else {\r\n                    flag = true;\r\n                }\r\n                vm.selectedAll[str] = !vm.selectedAll[str];\r\n                var selected = vm.selectedAll[str];\r\n                avalon.each(vm.data, function (i, item) {\r\n                    ///对应左右列表\r\n                    if (item.checked === flag) {\r\n                        item.selected = selected;\r\n                    }\r\n                })\r\n\r\n                //更新生成组\r\n                vm.genGroup();\r\n\r\n            }\r\n            vm.addItem = function (flag, str) {\r\n                //生成组\r\n                if (vm.seletedLen[str] < 1) return false;\r\n                vm.data\r\n                    .filter(function (item) {\r\n                        return item.selected && (item.checked === flag)\r\n\r\n                    })\r\n                .forEach(function (item) {\r\n                    item.selected = false;\r\n                    item.checked = !flag;\r\n                    //addedlist\r\n                    //if (flag) {\r\n                    //    //从右到左,取消\r\n                    //    vm.addedList.remove();\r\n                    //    vm.deledList.push();\r\n                    //} else {\r\n                    //    //从左到右,增加\r\n                    //}\r\n                });\r\n                //更新生成组\r\n                vm.genGroup();\r\n            }\r\n            vm.confirm = function () {\r\n                //ajax \r\n                var def = $.Deferred();\r\n                if (vm.ajax) {\r\n                    var config = vm.dataConfirmConfig;\r\n                    var param = $.extend({}, config.data.$model);\r\n                    $.ajax({\r\n                        url: config.url,\r\n                        type: \"POST\",\r\n                        async: true,\r\n                        data: param,\r\n                        complete: function (result) {\r\n                            console.log(result);\r\n                            def.resolve(result);\r\n                        }\r\n                    });\r\n                } else {\r\n\r\n                    var r = [[], []];\r\n                    avalon.each(vm.data, function (i, item) {\r\n                        item.checked\r\n                        ? r[1].push(item)\r\n                        : r[0].push(item)\r\n                    });\r\n                    def.resolve(r);\r\n                }\r\n                //获取data更新,[ [],[] ]\r\n                def.then(function (r) {\r\n                    vm.r = r;\r\n                    //diff\r\n                    //直接diff[0]处,2次diff就可以了 \r\n                    var diff = [[], []];\r\n                    var oriLeft = [];\r\n                    avalon.each(vm.originData, function (i, item) {\r\n                        item.checked\r\n                        ? 0\r\n                        : oriLeft.push(item);\r\n                    });\r\n                    var oriLeftPure = oriLeft.map(function (item) {\r\n                        return item[vm.idName];\r\n                    });\r\n                    var rLeftPure = r[0].map(function (item) {\r\n                        return item[vm.idName];\r\n                    });\r\n                    var tl = _.difference(oriLeftPure, rLeftPure);\r\n                    var tr = _.difference(rLeftPure, oriLeftPure);\r\n                    tl.forEach(function (t) {\r\n                        var r = _.find(vm.originData, function (oriItem) {\r\n                            return oriItem[vm.idName] === t\r\n                        })\r\n                        r ? diff[1].push(r)\r\n                        : 0\r\n                    })\r\n                    tr.forEach(function (t) {\r\n                        var r = _.find(vm.originData, function (oriItem) {\r\n                            return oriItem[vm.idName] === t\r\n                        })\r\n                        r ? diff[0].push(r)\r\n                        : 0\r\n                    })\r\n                    //不能减少的模式\r\n                    if (vm.cullOrigin) diff[0] = [];\r\n                    vm.diffData = diff;\r\n                    vm._trigger({}, 'data');\r\n                })\r\n            }\r\n            //外部事件 \r\n            //外部接口 \r\n            vm.setData = function (data) {\r\n                vm.originData = data.map(function (item) {\r\n                    return _.clone(item);\r\n                })\r\n                vm.data = toListAddData(data, vm.cullOrigin);\r\n                vm.genGroup();\r\n            }\r\n\r\n            //观测方法\r\n            //注意:ms-duplex与ms-input不能用在同一元素上。用watch..\r\n            //todo 拼音,要有必须后端.分词算法库太大\r\n            vm.$watch('q.*', function (newV, oldV) {\r\n                //输入就清完selected \r\n                avalon.each(vm.data, function (i, item) {\r\n                    item.selected = false;\r\n                });\r\n                vm.genGroup();\r\n            });\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n            //传入数据需要更新.. \r\n            vm.genGroup();\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:listdataadd\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/ListdataAdd/mc.ListdataAdd.js\n ** module id = 57\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-listdata-add-cotar\\\">\\r\\n    <div class=\\\"left-list group-list\\\">\\r\\n        <div class=\\\"all-num\\\">\\r\\n            待添加 {{allLen.left}}\\r\\n        </div>\\r\\n        <input type=\\\"text\\\" class=\\\"ipt\\\" placeholder=\\\"输入关键字\\\" ms-duplex-string=\\\"q.left\\\">\\r\\n        <div class=\\\"group-box\\\">\\r\\n            <div class=\\\"group-item\\\" ms-repeat=\\\"leftObj\\\">\\r\\n                <div class=\\\"gourp-title\\\">\\r\\n                    {{$key}} <div class=\\\"rfp\\\"> {{$val.length}}项 </div>\\r\\n                </div>\\r\\n                <div class=\\\"item\\\" ms-repeat-item=\\\"$val\\\"\\r\\n                     ms-class=\\\"active: item.selected\\\"\\r\\n                     ms-click=\\\"selectItem(item[idName])\\\">\\r\\n                    {{item[textName]}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- footer -->\\r\\n        <div class=\\\"gourp-footer\\\">\\r\\n            <div class=\\\"form-group mc-checkbox-cotar\\\"\\r\\n                 ms-click=\\\"selectAll('left')\\\">\\r\\n                <i class=\\\"mc-checkbox\\\" ms-class-1=\\\"mc-active: selectedAll.left\\\"></i>\\r\\n                <span class=\\\"mc-checkbox-label\\\">全选</span>\\r\\n            </div> <div class=\\\"rfp\\\">选中{{seletedLen.left}}项</div>\\r\\n        </div>\\r\\n    </div>\\r\\n    <!-- 操作按钮 -->\\r\\n    <div class=\\\"op-list \\\"> \\r\\n        <div class=\\\"vm-cotar\\\" >\\r\\n            <div class=\\\"btn add\\\" ms-click=\\\"addItem(false,'left')\\\" ms-class=\\\"disabled: seletedLen.left<1\\\">\\r\\n                ＞＞添加＞＞\\r\\n            </div>\\r\\n            <div class=\\\"btn add\\\" ms-click=\\\"addItem(true,'right')\\\" ms-class=\\\"disabled: seletedLen.right<1\\\">\\r\\n                ＜＜取消＜＜\\r\\n            </div>\\r\\n        </div> \\r\\n    </div>\\r\\n    <div class=\\\"right-list group-list\\\">\\r\\n        <div class=\\\"all-num\\\">\\r\\n            已添加 {{allLen.right}}\\r\\n        </div>\\r\\n        <input type=\\\"text\\\" class=\\\"ipt\\\" placeholder=\\\"输入关键字\\\" ms-duplex-string=\\\"q.right\\\">\\r\\n        <div class=\\\"group-box\\\">\\r\\n            <div class=\\\"group-item\\\" ms-repeat=\\\"rightObj\\\">\\r\\n                <div class=\\\"gourp-title\\\">\\r\\n                    {{$key}} <div class=\\\"rfp\\\"> {{$val.length}}项 </div>\\r\\n                </div>\\r\\n                <div class=\\\"item\\\" ms-repeat-item=\\\"$val\\\"\\r\\n                     ms-class=\\\"active: item.selected\\\"\\r\\n                     ms-click=\\\"selectItem(item[idName])\\\">\\r\\n                    {{item[textName]}}\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- footer -->\\r\\n        <div class=\\\"gourp-footer\\\">\\r\\n            <div class=\\\"form-group mc-checkbox-cotar\\\"\\r\\n                 ms-click=\\\"selectAll('right')\\\">\\r\\n                <i class=\\\"mc-checkbox\\\" ms-class-1=\\\"mc-active: selectedAll.right\\\"></i>\\r\\n                <span class=\\\"mc-checkbox-label\\\">全选</span>\\r\\n            </div> <div class=\\\"rfp\\\">选中{{seletedLen.right}}项</div> \\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"the-op-footer\\\">\\r\\n        <!--\\r\\n        本次操作:添加{{addedList.size()}}部门,取消{{deledList.length}} 部门\\r\\n        -->\\r\\n\\r\\n        <div class=\\\"hor-list  \\\"> \\r\\n            <mc:button class=\\\"item\\\" label=\\\"保存\\\" mcstyle=\\\"\\\" on-click=\\\"confirm\\\"></mc:button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/ListdataAdd/mc.listDataAdd.html\n ** module id = 58\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/ListdataAdd/mc.listDataAdd.min.css\n ** module id = 59\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.droplist.html\", \"./mc.droplist.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:droplist\", {\r\n        //外部参数\r\n        active: false, //是否处于展开状态\r\n        data: [], //droplist数据 [label: 文字信息] [state: 标志颜色[1绿色2黄色3红色]]\r\n        width: 100, //默认展开后宽度\r\n        mcstyle: \"\", //外挂样式\r\n        label: \"\", //展开按钮文字\r\n        disabled: false, //是否禁用\r\n\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onClick: null, //当tab项点击时触发事件\r\n\r\n        //外部接口\r\n        isDisable: _interface, //是否禁用\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\n\n        //内部事件\n        clickDrop: _interface, //展开按钮点击事件\n\n        //内部接口\n        _trigger: _interface, //内部触发器\r\n\r\n        $template: template,\n        //$replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options;\r\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\r\n            //内部事件\r\n            vm.clickDrop = function (ev) {\r\n                if (!vm.disabled) {\r\n                    vm.active = !vm.active;\r\n                    vm._trigger(ev, \"click\");\r\n                    ev.stopPropagation();\r\n                }\r\n            }\r\n\r\n            //内部接口\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"click\":\n                        if (typeof vm.onClick == \"function\") {\r\n                            vm.onClick(ev, vm);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n\n            //外部事件\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n        },\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:droplist\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/droplist/mc.droplist.js\n ** module id = 60\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-droplist-cotar\\\" ms-class-1=\\\"mc-active: active\\\" ms-class-2=\\\"{{mcstyle}}\\\" ms-css-width=\\\"width\\\">\\r\\n    <div class=\\\"mc-droplist-btn\\\" ms-click=\\\"clickDrop($event)\\\"><span>{{label}}</span></div>\\r\\n    <div class=\\\"mc-droplist-body\\\">\\r\\n        <div class=\\\"mc-droplist-item\\\" ms-repeat=\\\"data\\\">{{el.label}}</div>\\r\\n        <i ms-class-1=\\\"green: el.state === 1\\\" ms-class-2=\\\"yellow: el.state === 2\\\" ms-class-3=\\\"red: el.state === 3\\\"></i>\\r\\n    </div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/droplist/mc.droplist.html\n ** module id = 61\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/droplist/mc.droplist.min.css\n ** module id = 62\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.datapager.html\", \"./mc.datapager.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:datapager\", {\r\n        //外部参数\r\n        autoAjaxFirst: true, //是否自动发起第一次请求\r\n        active: false, //是否处于展开状态\r\n        allCount: 0, //总条数\r\n        width: 100, //默认展开后宽度\r\n        mcstyle: 0, //外挂样式\r\n        label: \"\", //展开按钮文字\r\n        curPage: 1,//当前页数\n        jumpPageIndex: 1,//跳转的pageIndex\n        pageSize: 0, //每页条数\n        disabled: false, //是否禁用\r\n\r\n        $computed: {\r\n            //总页数\r\n            allPageCount: {\r\n                set: _interface,\r\n                get: function () {\r\n                    return Math.ceil(this.allCount / this.pageSize);\r\n                }\r\n            },\r\n            //数据开始位置\r\n            dataStartIndex: {\r\n                set: _interface,\r\n                get: function () {\r\n                    return this.pageSize * (this.curPage - 1) + 1;\r\n                }\r\n            },\r\n            //数据结束位置\r\n            dataEndIndex: {\r\n                set: _interface,\r\n                get: function () {\r\n                    //判断是否为最后一页\r\n                    if (this.curPage === this.allPageCount) {\r\n                        return this.allCount;\r\n                    } else {\r\n                        return this.pageSize * this.curPage;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        $page_size_opt: { //每页显示条数下拉选择框配置对象\r\n            data: [\r\n                {\r\n                    text: \"20\", value: 20\r\n                },\r\n                {\r\n                    text: \"30\", value: 30\r\n                },\r\n                {\r\n                    text: \"50\", value: 50\r\n                }\r\n            ]\r\n        },\r\n\r\n        $ajaxTmpData: null, //ajax获取到的临时数据\r\n\r\n        //ajax相关\r\n        $ajaxConfig: {\r\n            url: \"\",\r\n            data: {},\r\n            dataType: \"json\"\r\n        },\r\n\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onClick: null, //当tab项点击时触发事件\r\n        onDataChange: null, //当请求到新数据时触发事件\r\n        onPageChange: null, //当页码改变时触发事件\r\n\r\n        //外部接口\r\n        isDisable: _interface, //是否禁用\r\n        refreshPage: _interface, //刷新当前页数据\r\n        addCondition: _interface, //添加请求条件(data),extend实现\r\n        delCondition: _interface, //删除请求条件(data),需要传入要删除的条件的key\r\n        changeCondition: _interface, //改变请求条件(data),只保留传入的条件以及pageSize和pageIndex\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        $pageSelectVm: null, //下拉选择框对象vm\r\n        $pageJumpVm: null, //获取输入页码的ipt的vm\r\n        $ajaxData: null, //ajax获得的数据\r\n        lindex: -1, //布局中的序号\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\n\n        //内部事件\n        getSelectPageVM: _interface, //获取分页下拉选择框vm\n        clickDrop: _interface, //下拉选择框点击事件\n        getPageJumpVM: _interface, //获取输入页码的ipt的vm\n        changePageSize: _interface, //分页大小改变事件\n\n        getAjaxData: _interface, //获取上次ajax返回的数据\n        setAjaxData: _interface, //设置ajax返回的数据\n\n        getAllCount: _interface, //获取allCount\n        setAllCount: _interface, //设置allCount\n\n        ajaxData: _interface, //获取数据\n        turnPage: _interface, //指定页\n        nextPage: _interface, //后一页\n        prevPage: _interface, //前一页\n        jumpPage: _interface, //跳转页\n        firstPage: _interface, //首页\n        lastPage: _interface, //尾页  \n\n        //内部接口\n        _trigger: _interface, //内部触发器\r\n\r\n        $template: template,\n        //$replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            vmOpts.$ajaxConfig && (vmOpts.$ajaxConfig = $.extend(hooks.$ajaxConfig, vmOpts.$ajaxConfig));\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options;\r\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\r\n            //var datapagerVM = avalon.define({\r\n            //    $id: \"datapager\",\r\n            //    $pageSelectVm: null,\r\n            //    $page_size_opt: vm.$page_size_opt,\r\n            //    getPageSelectVM: function(vm,elem) {\r\n            //        datapagerVM.$pageSelectVm = vm;\r\n            //    }\r\n            //});\r\n            //内部事件\r\n            vm.clickDrop = function (ev) {\r\n                if (!vm.disabled) {\r\n                    vm.active = !vm.active;\r\n                    vm._trigger(ev, \"click\");\r\n                    ev.stopPropagation();\r\n                }\r\n            }\r\n            vm.getSelectPageVM = function (_vm, elem) {\r\n                vm.$pageSelectVm = _vm;\r\n                vm.pageSize = _vm.getValue();\r\n            }\r\n            vm.getPageJumpVM = function (_vm, elem) {\r\n                vm.$pageJumpVm = _vm;\r\n            }\r\n            vm.changePageSize = function (ev, _vm) {\r\n                //bug 网速慢时不触发请求\r\n                vm.pageSize = _vm.getValue();\r\n            }\r\n            //跳转分页\n            vm.jumpPage = function (ev) {\r\n                var jumpPage = vm.$pageJumpVm.getValue() >> 0;\r\n                if (jumpPage > 0 && jumpPage <= vm.allPageCount) {\r\n                    vm._changeCurPage(ev, jumpPage);\r\n                }\r\n            }\n            vm.nextPage = function (ev) {\r\n                if (vm.curPage < vm.allPageCount) {\r\n                    vm._changeCurPage(ev, vm.curPage + 1);\r\n                }\r\n            }\r\n            vm.prevPage = function (ev) {\r\n                if (vm.curPage > 1) {\r\n                    vm._changeCurPage(ev, vm.curPage - 1);\r\n                }\r\n            }\n            vm.firstPage = function (ev) {\r\n                vm._changeCurPage(ev, 1);\r\n            }\n            vm.lastPage = function (ev, p) {\r\n                vm._changeCurPage(ev, vm.allPageCount);\r\n            }\r\n            //ajax \n            vm.ajaxData = function () {\r\n                var config = vm.$ajaxConfig;\r\n                if (config.url !== \"\") {\r\n                    var param = $.extend(config.data, { \"pageIndex\": vm.curPage, \"pageSize\": vm.pageSize });\r\n                    Mc.Ajax({\r\n                        url: config.url,\r\n                        data: param,\r\n                        success: function (response) {\r\n                            vm.setAjaxData(response);\r\n                            vm.$pageJumpVm.setValue(vm.curPage); //设置跳转页码输入框页码\r\n                            vm._trigger({}, \"data\");\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            vm.getAjaxData = function () {\r\n                return vm.$ajaxData;\r\n            }\r\n            vm.setAjaxData = function (val) {\r\n                vm.$ajaxData = val;\r\n            }\r\n\r\n            //获取allCount\r\n            vm.getAllCount = function () {\r\n                return vm.allCount;\r\n            }\r\n            //设置allCount\r\n            vm.setAllCount = function (val) {\r\n                var newAllCount = val >> 0;\r\n                if (newAllCount > 0) {\r\n                    vm.allCount = newAllCount;\r\n                }\r\n            }\r\n\r\n            vm.refreshPage = function() {\r\n                vm.ajaxData();\r\n            }\r\n            vm.addCondition = function (newData) {\r\n                vm.$ajaxConfig.data = $.extend(vm.$ajaxConfig.data, newData);\r\n            }\r\n            vm.delCondition = function (keyArray) {\r\n                $.each(keyArray, function (i, val) {\r\n                    console.log(val);\r\n                    delete vm.$ajaxConfig.data[val];\r\n                });\r\n            }\r\n            vm.changeCondition = function (newData) {\r\n                vm.$ajaxConfig.data = newData;\r\n            }\r\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n\r\n            //#region 内部接口\n            /**\r\n             * 内部事件触发器\r\n             * @param {} ev \r\n             * @param {} type \r\n             * @returns {} \r\n             */\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"data\":\n                        if (typeof vm.onDataChange == \"function\") {\r\n                            vm.onDataChange(vm);\r\n                        }\n                        break;\r\n                    case \"size\":\n                        // if (typeof vm.onPageSizeChange == \"function\") {\r\n                        //     vm.onPageSizeChange(ev, vm.pageSize);\r\n                        //  }\n                        break;\n                    case \"page\":\n                        if (typeof vm.onPageChange == \"function\") {\r\n                            vm.onPageChange(ev, vm.curPage);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n            //bug 尽量不要使用avalon的watch来监听触发事件,不靠谱...还是手动触发靠谱\r\n            /**\r\n             * 改变分页大小\r\n             * @returns {} \r\n             */\n            vm._changePageSize = function() {\r\n                if (vm.curPage !== 1) {\r\n                    vm.curPage = 1;\r\n                }\r\n                vm._changeCurPage({}, 1);\r\n            }\r\n            /**\r\n             * 改变当前页\r\n             * @param {} ev \r\n             * @param {} p \r\n             * @returns {} \r\n             */\r\n            vm._changeCurPage = function (ev, p) {\r\n                if (vm.curPage !== p) {\r\n                    vm.curPage = p;\r\n                    vm.ajaxData();\r\n                    vm._trigger(ev, \"page\");\r\n                }\r\n            }\r\n            //#endregion\n\n            ////分页大小改变,跳一页,再ajax\r\n            //vm.$watch(\"pageSize\", function (newVal, oldVal) {\r\n            //    vm.curPage = 1;\r\n            //    //  vm._trigger({}, \"size\");\r\n            //});\r\n            ////页码改变\r\n            //vm.$watch(\"curPage\", function (newVal, oldVal) {\r\n            //    vm.ajaxData();\r\n            //    vm._trigger({ newVal: newVal, oldVal: oldVal }, \"page\");\r\n            //});\r\n        },\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            if (vm.autoAjaxFirst) {\r\n                vm.ajaxData(); //请求数据\r\n            }\r\n            vm.isInit = false;\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:datapager\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/datapager/mc.datapager.js\n ** module id = 63\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-datapager-cotar hf\\\">\\r\\n    <div class=\\\"item\\\">显示行数</div>\\r\\n    <mc:selectbox class=\\\"bar-group item\\\" config=\\\"$page_size_opt\\\" width=\\\"60\\\" arrow-down=\\\"false\\\" on-init=\\\"getSelectPageVM\\\" on-selected=\\\"changePageSize\\\"></mc:selectbox>\\r\\n    <div class=\\\"item\\\"><em>{{dataStartIndex}}-{{dataEndIndex}}条/</em><span>共{{allCount}}条</span></div>\\r\\n    <div class=\\\"bar-group item hf\\\">\\r\\n        <mc:button class=\\\"bar-item bl\\\" label=\\\"首页\\\" on-click=\\\"firstPage\\\"></mc:button>\\r\\n        <mc:button class=\\\"bar-item bm\\\" label=\\\"上一页\\\" on-click=\\\"prevPage\\\"></mc:button>\\r\\n        <mc:button class=\\\"bar-item bm\\\" label=\\\"下一页\\\" on-click=\\\"nextPage\\\"></mc:button>\\r\\n        <mc:button class=\\\"bar-item br\\\" label=\\\"尾页\\\" on-click=\\\"lastPage\\\"></mc:button>\\r\\n    </div>\\r\\n    <div class=\\\"bar-group item hf\\\">\\r\\n        <mc:text class=\\\"fp bar-item bl\\\" label=\\\"前往\\\" label-size=\\\"40\\\" width=\\\"40\\\" on-init=\\\"getPageJumpVM\\\"></mc:text>\\r\\n        <mc:button class=\\\"fp bar-item br\\\" label=\\\"跳转\\\" on-click=\\\"jumpPage\\\"></mc:button>\\r\\n    </div>\\r\\n    <div class=\\\"item\\\"><span>共{{allPageCount}}页</span></div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/datapager/mc.datapager.html\n ** module id = 64\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/datapager/mc.datapager.min.css\n ** module id = 65\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.datepicker.html\", \"./mc.datepicker.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:datepicker\", {\r\n        //#region 外部参数\r\n        value: \"\",\r\n        width: 200, //宽度\r\n        mcstyle: \"\", //风格\r\n        disabled: false, //是否禁用\r\n        placeholder: \"\",\r\n        readonly: false,\r\n        tip:\"\",\r\n        //表单相关\r\n        formName: \"\", //表单data的key,输入框name\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n        //#endregion\r\n\r\n        //#region 外部事件\r\n        onInit: _interface, //初始化接口\r\n        //#endregion\r\n\r\n        //#region 外部接口\r\n        isDisable: _interface, //是否禁用\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        //#endregion\r\n\r\n        //#region 内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        $datepicker_ipt: \"\",\r\n        $datepickerIptOpt: $({}),\r\n        lindex: -1, //布局中的序号\r\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\r\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\r\n        //#endregion\r\n\r\n        //#region 内部事件\r\n        doDatepicker: _interface,\r\n        //#endregion\r\n\r\n        //#region 内部接口\r\n        _trigger: _interface, //内部触发器\r\n        //#endregion\r\n\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            hooks.$datepicker_ipt = McAvalon.util.genId(\"datepickIpt\");\r\n            hooks.$datepicker = McAvalon.util.genId(\"datepick\");\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options;\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //#region 外部事件\r\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 外部接口\r\n            vm.show = function () {\r\n                vm.$datepickerIptOpt.trigger(\"focus\");\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部事件\r\n            vm.doDatepicker = function(ev) {\r\n                vm.show();\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部接口\r\n            vm._trigger = function (ev, type, _this) {\r\n                switch (type) {\r\n                    case \"confirm\":\r\n                        if (typeof vm.onConfirm == \"function\") {\r\n                            vm.onConfirm(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    case \"cancel\":\r\n                        if (typeof vm.onCancel == \"function\") {\r\n                            vm.onCancel(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            vm.iniDatepicker = function () {\r\n                vm.readonly || vm.$datepickerIptOpt.date_input();\r\n            }\r\n            vm.getValue = function () {\r\n                return (new Date(vm.value).getTime() / 1000) >> 0;\r\n            }\r\n            vm.setValue = function (val, isReadonly) {\r\n                //isReadonly 传值的时候才赋值判断\r\n                isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                vm.value = new Date(val * 1000).format(\"yyyy-M-d\");\r\n            }\r\n            //#endregion\r\n        },\r\n        $ready: function (vm, elem) {\r\n            vm.$datepickerIptOpt = $(elem).find(\"#\" + vm.$datepicker_ipt);\r\n            vm.iniDatepicker();\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:datepicker\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/datepicker/mc.datepicker.js\n ** module id = 66\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-datepicker-cotar hf\\\" ms-class=\\\"mc-loading: isInit\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <div class=\\\"ftp mc-datepicker-wrap\\\" ms-class=\\\"mc-readonly: readonly\\\">\\r\\n        <div class=\\\"mc-datepicker-content ftp\\\" ms-click=\\\"doDatepicker\\\" ms-attr-name=\\\"formName\\\" ms-css-width=\\\"width\\\">{{value}}</div>\\r\\n        <input ms-attr-id=\\\"$datepicker_ipt\\\" class=\\\"form-control mc-datepicker-ipt\\\" type=\\\"text\\\" ms-attr-placeholder=\\\"placeholder\\\"\\r\\n               ms-attr-name=\\\"formName\\\" ms-duplex=\\\"value\\\" /> \\r\\n        <div class=\\\"item mc-text-field-tip\\\" ms-css-width=\\\"width\\\">\\r\\n            {{tip}}\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/datepicker/mc.datepicker.html\n ** module id = 67\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/datepicker/mc.datepicker.min.css\n ** module id = 68\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.selectbox.html\", \"./mc.selectbox.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:selectbox\", {\r\n        //外部参数\r\n        label: \"\", //提示文字\r\n        labelSize: 0,\r\n        data: [], //下拉数据源\r\n        arrowDown: true, //默认往下展开\r\n        width: 250, //下拉选择框宽度,默认250px\r\n        select: 0, //默认选中项\r\n        active: false, //是否展开\r\n        disabled: false, //是否禁用\r\n        readonly: false, //是否只读\r\n\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onClick: null, //当按钮点击时触发事件\r\n        onSelected: null, //当选择时触发事件\r\n\r\n        //外部接口\r\n        isDisable: _interface, //是否禁用\n        isOpen: _interface,\n        setState: _interface,\n        getSelect: _interface, //获取选择项\r\n        setSelectByIndex: _interface, //通过index设置选中项\r\n        setSelectByTxt: _interface,\r\n        setSelectByValue: _interface,\r\n        setData: _interface,\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        formName: \"\", //表单data的key,输入框name\r\n        judgeName: \"\", //有不同状态的form组件,用来判断的字段\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\n\n        //内部事件\n        clickSelectbox: _interface, //下拉选择框点击事件\n        clickLi: _interface, //选择项点击事件\n\n        //内部接口\n        _trigger: _interface, //内部触发器\r\n\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            if (typeof vmOpts.data === \"function\") {\r\n                vmOpts.data = vmOpts.data();\r\n            }\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options;\r\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\r\n            //内部事件\r\n            vm.clickSelectbox = function (ev) {\r\n                if (!vm.disabled && !vm.readonly) {\r\n                    //如果有其他下拉选择框,且处于打开状态则关闭\r\n                    if (McAvalon.global.selectboxVm) {\r\n                        avalon.each(McAvalon.global.selectboxVm, function (i, val) {\r\n                            val !== vm && val.isOpen() && val.setState(false);\r\n                        });\r\n                    }\r\n                    vm.active = !vm.active;\r\n                    vm._trigger(ev, \"click\");\r\n                    ev.stopPropagation();\r\n                }\r\n            }\r\n            vm.clickLi = function (ev, idx) {\r\n                vm.select = idx;\r\n                vm.active = false;\r\n                vm._trigger(ev, \"selected\");\r\n                ev.stopPropagation();\r\n            }\r\n\r\n            //内部接口\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"click\":\n                        if (typeof vm.onClick == \"function\") {\r\n                            vm.onClick(ev, vm);\r\n                        }\n                        break;\n                    case \"selected\":\n                        if (typeof vm.onSelected == \"function\") {\r\n                            vm.onSelected(ev, vm);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n\n            //外部接口\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n            vm.isOpen = function () {\r\n                return vm.active;\r\n            }\r\n            vm.setState = function (state) {\r\n                state ? vm.active = true : vm.active = false;\r\n            }\r\n            vm.getSelect = function () {\r\n                return vm.data[vm.select] && vm.data[vm.select].$model;\r\n            }\r\n            vm.getValue = function () {\r\n                return vm.data[vm.select] && vm.data[vm.select].$model.value;\r\n            }\r\n            vm.setValue = function (val, isReadonly) {\r\n                //isReadonly 传值的时候才赋值判断\r\n                isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                var oriData = vm.data.$model;\r\n                if (oriData.length) {\r\n                    var target = null;\r\n                    for (var i = 0; i < oriData.length; i++) {\r\n                        if (oriData[i].value == val) {\r\n                            target = i;\r\n                        }\r\n                    }\r\n                    if (target != null) {\r\n                        vm.select = target;\r\n                    }\r\n                }\r\n            }\r\n            vm.setData = function (data) {\r\n                vm.data = data;\r\n            }\r\n            vm.setSelectByIndex = function (idx) {\r\n                vm.select = idx;\r\n                return vm;\r\n            }\r\n            vm.setSelectByTxt = function (txt) {\r\n                avalon.each(vm.data, function (i, val) {\r\n                    console.log(i + \"||\" + val);\r\n                    if (val.text == txt) {\r\n                        vm.select = i;\r\n                        return false;\r\n                    }\r\n                });\r\n                return vm;\r\n            }\r\n            vm.setSelectByValue = function (value) {\r\n                avalon.each(vm.data, function (i, val) {\r\n                    console.log(i + \"||\" + val);\r\n                    if (val.value == value) {\r\n                        vm.select = i;\r\n                        return false;\r\n                    }\r\n                });\r\n                return vm;\r\n            }\r\n        },\n        $ready: function (vm, elem) {\r\n            McAvalon.global.selectboxVm || (McAvalon.global.selectboxVm = []);\r\n            McAvalon.global.selectboxVm.push(vm);\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:selectbox\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/selectbox/mc.selectbox.js\n ** module id = 69\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-selectbox-cotar hf\\\" ms-class-1=\\\"mc-selectbox-disabled: disabled\\\" ms-class-2=\\\"mc-loading: isInit\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <div class=\\\"mc-selectbox-wrap fp\\\" ms-class=\\\"mc-active: active\\\" ms-if=\\\"!readonly\\\"\\r\\n         ms-css-width=\\\"width\\\" ms-click=\\\"clickSelectbox($event)\\\">\\r\\n        <input type=\\\"hidden\\\" ms-attr-value=\\\"data[select] && data[select].value\\\">\\r\\n        <div class=\\\"mc-txt\\\">{{data[select] && data[select].text}}</div>\\r\\n        <ul class=\\\"mc-select-list\\\" ms-class-1=\\\"mc-arrow-down: arrowDown\\\" ms-class-2=\\\"mc-arrow-up: !arrowDown\\\">\\r\\n            <li ms-repeat=\\\"data\\\" ms-click=\\\"clickLi($event,$index)\\\">{{el.text}}</li>\\r\\n        </ul>\\r\\n    </div>\\r\\n    <div class=\\\"mc-readonly-txt fp\\\" ms-if=\\\"readonly\\\">{{data[select] && data[select].text}}</div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/selectbox/mc.selectbox.html\n ** module id = 70\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/selectbox/mc.selectbox.min.css\n ** module id = 71\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.switch.html\", \"./mc.switch.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:switch\", {\r\n        //#region 外部参数\r\n        label: \"\", //提示文字\r\n        labelSize: 0,\r\n        mcstyle: \"\", //风格\r\n        width: 200, //宽度,默认200px\r\n        disabled: false, //是否禁用\r\n        //表单相关\r\n        formName: \"\", //表单data的key,输入框name\r\n        readonly: false, //是否只读，只读就无法修改\r\n        judgeName: \"\", //有不同状态的form组件,用来判断的字段\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n        //#endregion\r\n\r\n        //#region 外部事件\r\n        onInit: _interface, //初始化接口\r\n        onChanged: _interface, //状态变化接口\r\n        onClick: _interface, //开关点击接口\r\n        //#endregion\r\n\r\n        //#region 外部接口\r\n        isDisable: _interface, //是否禁用\r\n        isActive: _interface, //是否激活\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        //#endregion\r\n\r\n        //#region 内部属性\r\n        isInit: true,\r\n        switchActive: false, //是否打开(激活)\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\r\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\r\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\r\n        //#endregion\r\n\r\n        //#region 内部事件\r\n        doClick: _interface, //switch点击事件\r\n        //#endregion\r\n\r\n        //#region 内部接口\r\n        _trigger: _interface, //内部触发器\r\n        //#endregion\r\n\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options;\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //#region 外部事件\r\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 外部接口\r\n            vm.getValue = function () {\r\n                return vm.switchActive ? 1 : 0;\r\n            }\r\n            vm.setValue = function (val, isReadonly) {\r\n                //isReadonly 传值的时候才赋值判断\r\n                isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                val ? vm.switchActive = true : vm.switchActive = false;\r\n                vm._trigger({},\"changed\");\r\n            }\r\n            vm.isActive = function () {\r\n                return vm.switchActive;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部事件\r\n            vm.doClick = function (ev) {\r\n                if (!vm.readonly) {\r\n                    vm.switchActive = !vm.switchActive;\r\n                    vm._trigger({}, \"click\");\r\n                    vm._trigger({}, \"changed\"); //todo 跟上面的setValue合并changed\r\n                    ev.stopPropagation();\r\n                }\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部接口\r\n            vm._trigger = function (ev, type, _this) {\r\n                switch (type) {\r\n                    case \"changed\":\r\n                        if (typeof vm.onChanged == \"function\") {\r\n                            vm.onChanged(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    case \"click\":\r\n                        if (typeof vm.onClick == \"function\") {\r\n                            vm.onClick(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            //#endregion\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:switch\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/switch/mc.switch.js\n ** module id = 72\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-switch-cotar hf\\\" ms-class=\\\"mc-loading: isInit\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <div class=\\\"mc-switch-wrap ftp\\\" ms-class-1=\\\"mc-switch-open:switchActive\\\"\\r\\n         ms-class-2=\\\"mc-switch-readonly:readonly\\\" ms-click=\\\"doClick\\\">\\r\\n        <div class=\\\"mc-switch-btn\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/switch/mc.switch.html\n ** module id = 73\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/switch/mc.switch.min.css\n ** module id = 74\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.text.html\", \"./mc.text.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:text\", {\r\n        //外部参数\r\n        label: \"\", //提示文字\r\n        labelSize: 0,\r\n        value: \"\", //输入框内值\r\n        placeholder: \"\", //输入框内提示文字\r\n        pwd: false, //是否是密码数据框\r\n        //name: \"\", //输入框name\r\n        valid: \"\", //验证类型\r\n        max: \"\", //当为数值验证时的最大值\r\n        min: \"\", //当为数值验证时的最小值\r\n        maxlen: 999, //最大长度\r\n        width: 200, //宽度,默认200px\r\n        must: false, //是否必填,也可为数字 代表必须的长度(会将覆盖length)\r\n        tip: \"\", //填写提示信息\r\n        mult: false, //是否为多行文本框显示\r\n        isHide: false, //是否隐藏,不可见\r\n        readonly: false, //是否只读，只读就div显示，否则input显示\r\n\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onGetValue: null, //获取值触发事件\r\n        onSetValue: null, //设置值触发事件\r\n        onClicked: null, //当输入框点击时触发事件\r\n        onChanged: null, //当输入框内值发生改变时触发事件\r\n\r\n        //外部接口\r\n        isDisable: _interface, //是否禁用\r\n        getData: _interface,\r\n        setData: _interface,\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        formName: \"\", //表单data的key,输入框name\r\n        submitName: \"\", //提交表单的name\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        isValid: true, //是否正在验证\r\n        validInfo: \"\", //错误信息\r\n        lindex: -1, //布局中的序号\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\n\n        //内部事件\n        doClick: _interface,\n        validValue: _interface,\n\n        //内部接口\n        _trigger: _interface, //内部触发器\r\n\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options;\r\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\r\n            //内部事件\r\n            vm.doClick = function (ev) {\r\n                vm._trigger(ev, \"clicked\");\r\n            }\n            vm.validValue = function (ev) {\r\n                vm.value = vm.value + \"\"; //保证value为字符串\r\n                vm.validInfo = McAvalon.validata(vm.value, vm.valid);\n                vm.isValid = vm.validInfo === \"\" ? true : false;\n                if (vm.isValid) {\r\n                    if (vm.must === true && vm.value.trim() === \"\") {\r\n                        vm.isValid = false; vm.validInfo = \"该字段为必填字段\";\r\n                    } else if (typeof vm.must == \"number\" && vm.value.length !== vm.must) {\r\n                        vm.isValid = false; vm.validInfo = \"该字段长度有误\";\r\n                    } else if (vm.valid.indexOf(\"int\") !== -1 || vm.valid.indexOf(\"float\") !== -1) {\r\n                        if (vm.max !== \"\" && vm.value > vm.max) {\r\n                            vm.isValid = false; vm.validInfo = \"超过最大限制\";\r\n                        } else if (vm.min !== \"\" && vm.value < vm.min) {\r\n                            vm.isValid = false; vm.validInfo = \"低于最小限制\";\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            //内部接口\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"getValue\":\n                        if (typeof vm.onGetValue == \"function\") {\r\n                            vm.onGetValue(ev, vm);\r\n                        }\n                        break;\n                    case \"setValue\":\n                        if (typeof vm.onSetValue == \"function\") {\r\n                            vm.onSetValue(ev, vm);\r\n                        }\n                        break;\r\n                    case \"clicked\":\n                        if (typeof vm.onclicked == \"function\") {\r\n                            vm.onClicked(ev, vm);\r\n                        }\n                        break;\n                    case \"changed\":\n                        if (typeof vm.onchanged == \"function\") {\r\n                            vm.onChanged(ev, vm);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n\n            //外部接口\n            vm.getData = function () {\r\n                var data = {};\n                data[vm.name] = vm.value;\n                return data;\r\n            }\n            vm.setData = function (newData) {\r\n                vm.value = newData;\r\n            }\n            vm.getValue = function () {\r\n                vm._trigger({}, \"getValue\");\r\n                return vm.value;\r\n            }\n            vm.setValue = function (val, isReadonly) {\r\n                //init\r\n                vm.validInfo = \"\";\r\n                //isReadonly 传值的时候才赋值判断\r\n                isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                if (val !== vm.value) {\r\n                    vm.value = val;\n                    vm.validValue(null);\r\n                    vm._trigger({}, \"setValue\");\r\n                }\r\n            }\r\n\r\n            vm.$watch(\"value\", function (newVal, oldVal) {\r\n                vm._trigger({ newVal: newVal, oldVal: oldVal }, \"changed\");\r\n            });\r\n        },\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:text\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/text/mc.text.js\n ** module id = 75\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-text-cotar hf\\\" ms-class-1=\\\"mc-error: !isValid\\\" ms-class-2=\\\"mc-loading: isInit\\\" ms-visible=\\\"!isHide\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <input class=\\\"form-control mc-ipt fp\\\" ms-attr-type=\\\"pwd?'password':'text'\\\" ms-attr-placeholder=\\\"placeholder\\\" ms-if=\\\"!readonly && !mult\\\"\\r\\n           ms-attr-maxlength=\\\"maxlen\\\" ms-attr-name=\\\"formName\\\" ms-duplex=\\\"value\\\" ms-css-width=\\\"width\\\"\\r\\n           ms-input=\\\"validValue($event)\\\" ms-paste=\\\"validValue($event)\\\" ms-click=\\\"doClick($event)\\\" />\\r\\n    <textarea class=\\\"form-control mc-mult-ipt ftp\\\" type=\\\"text\\\" ms-attr-placeholder=\\\"placeholder\\\" ms-if=\\\"!readonly && mult\\\"\\r\\n              ms-attr-maxlength=\\\"maxlen\\\" ms-attr-name=\\\"formName\\\" ms-duplex=\\\"value\\\" ms-css-width=\\\"width\\\" ms-css-max-width=\\\"width\\\" ms-css-min-width=\\\"width\\\"\\r\\n              ms-input=\\\"validValue($event)\\\" ms-paste=\\\"validValue($event)\\\" ms-click=\\\"doClick($event)\\\"></textarea>\\r\\n    <div class=\\\"mc-text-show ftp\\\" ms-if=\\\"readonly\\\" ms-attr-name=\\\"formName\\\" ms-css-width=\\\"width\\\">{{value}}</div>\\r\\n    <span class=\\\"mc-text-valid-info ftp\\\" ms-if=\\\"!isValid && validInfo != ''\\\">{{validInfo}}</span>\\r\\n    <div class=\\\"mc-text-field-tip\\\" ms-css-padding-left=\\\"labelSize\\\" ms-if=\\\"tip\\\">{{tip}}</div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/text/mc.text.html\n ** module id = 76\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/text/mc.text.min.css\n ** module id = 77\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.jsonadd.html\", \"./mc.jsonadd.min.css\", 'mcText', 'mcButton'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:jsonadd\", {\r\n        //外部参数\r\n        label: \"\", //提示文字\r\n        labelSize: 0,\r\n        value: [], //输入框内值\r\n        placeholder: \"\", //输入框内提示文字\r\n        //name: \"\", //输入框name\r\n        // json格式\r\n        keyName: \"key\",\r\n        valName: \"val\",\r\n        // 格式\r\n        valid: \"\", //验证类型  \r\n        width: 200, //宽度,默认200px\r\n        must: false, //是否必填,也可为数字 代表必须的长度(会将覆盖length)\r\n        tip: \"\", //填写提示信息\r\n        mult: false, //是否为多行文本框显示\r\n        isHide: false, //是否隐藏,不可见\r\n        readonly: false, //是否只读，只读就div显示，否则input显示\r\n\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onClicked: null, //当输入框点击时触发事件\r\n        onChanged: null, //当输入框内值发生改变时触发事件\r\n\r\n        //外部接口\r\n        isDisable: _interface, //是否禁用\r\n        getData: _interface,\r\n        setData: _interface,\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        formName: \"\", //表单data的key,输入框name\r\n        submitName: \"\", //提交表单的name\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        isValid: true, //是否正在验证\r\n        validInfo: \"\", //错误信息\r\n        lindex: -1, //布局中的序号\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\n        keyIpt: \"\",\n        valIpt: \"\",\n        //内部事件\n        doClick: _interface,\n        validValue: _interface,\n\n        //内部接口\n        _trigger: _interface, //内部触发器\r\n        clrIpt: _interface, // 清理资源\r\n        clrEnv: _interface, // 清理资源\n        addItem: _interface,\n        //buildin\n        getValIptVM: _interface, // child vm\n        getKeyIptVM: _interface, // child vm\n        $keyIptVm: _interface, // child vm\n        $valIptVm: _interface, // child vm\n        //buildin end\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options;\r\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\r\n            //#region buildin \r\n            vm.getValIptVM = function (_vm, elem) { \r\n                vm.$valIptVm = _vm;\r\n            }\r\n            vm.getKeyIptVM = function (_vm, elem) {\r\n                vm.$keyIptVm = _vm;\r\n            }\r\n            //#endregion\r\n            //内部事件\n            vm.validValue = function (ev) {\r\n                //vm.value = vm.value + \"\"; //保证value为字符串\r\n                //vm.validInfo = McAvalon.validata(vm.value, vm.valid);\n                //vm.isValid = vm.validInfo === \"\" ? true : false;\n                //if (vm.isValid) {\r\n                //    if (vm.must === true && vm.value.trim() === \"\") {\r\n                //        vm.isValid = false; vm.validInfo = \"该字段为必填字段\";\r\n                //    }\r\n                //}\r\n            }\r\n\r\n            //内部接口\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\n                    case \"changed\":\n                        if (typeof vm.onchanged == \"function\") {\r\n                            vm.onChanged(ev, vm);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n            vm.addItem = function () {\r\n                var key=vm.$keyIptVm.getValue();\r\n                var val = vm.$valIptVm.getValue();\r\n                if (key && val) { \r\n                    vm.value = vm.value || [];\r\n                    var obj={};\r\n                    obj[vm.keyName]=key;\r\n                    obj[vm.valName]=val;\r\n                    vm.value.push(obj)\r\n                    vm.clrIpt();\r\n                } else {\r\n                    alert('..缺少')\r\n                } \r\n            }\n            vm.clrIpt = function () {\r\n                vm.$valIptVm.setData(\"\");\r\n                vm.$keyIptVm.setData(\"\");\r\n            }\n            vm.clrEnv = function () {\r\n                vm.clrIpt();\r\n                vm.value = [];\r\n            }\n            \n            //外部接口\n            vm.getData = function () {\r\n                var data = {};\n                data[vm.name] = vm.value;\n                return data;\r\n            }\n            vm.setData = function (newData) {\r\n                vm.value = newData;\r\n            }\n            vm.getValue = function () { \r\n              \r\n                // debugger;\r\n               // return JSON.stringify([{ GoodsJsonName: \"可可脂\", GoodsJsonValueName: \"100%\" }]);\r\n                return JSON.stringify(vm.value.$model);\r\n            }\n            vm.setValue = function (val, isReadonly) {\r\n                vm.clrEnv();\r\n                 \r\n                if (val) { \r\n                   var val = typeof val === 'string' ? JSON.parse(val) : val;\r\n\r\n                    //isReadonly 传值的时候才赋值判断\r\n                    isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                    if (val !== vm.value) {\r\n                        vm.value = val;\n                        //vm.validValue(null);\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n\r\n            vm.$watch(\"value\", function (newVal, oldVal) {\r\n                vm._trigger({ newVal: newVal, oldVal: oldVal }, \"changed\");\r\n            });\r\n        },\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:jsonadd\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/jsonadd/mc.jsonadd.js\n ** module id = 78\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-jsonadd-cotar hf\\\" ms-class-1=\\\"mc-error: !isValid\\\" ms-class-2=\\\"mc-loading: isInit\\\" ms-visible=\\\"!isHide\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n\\r\\n\\r\\n    <!--添加区 -->\\r\\n    <div class=\\\"add-area\\\" ms-if=\\\"!readonly\\\">\\r\\n        <mc:text width=\\\"100\\\" on-init=\\\"getKeyIptVM\\\" ms-attr-placeholder=\\\"placeholder\\\"></mc:text> \\r\\n        &nbsp;&nbsp;\\r\\n        <mc:text width=\\\"100\\\" on-init=\\\"getValIptVM\\\" ms-attr-placeholder=\\\"placeholder\\\"></mc:text>\\r\\n        <mc:button on-click=\\\"addItem\\\" label=\\\"增加\\\" type=\\\"success\\\"></mc:button>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!--显示区 -->\\r\\n    {{JSON.stringify(value)}}\\r\\n    <div class=\\\"show-area\\\" ms-css-margin-left=\\\"labelSize\\\">\\r\\n        <table>\\r\\n            <tr ms-repeat-item=\\\"value\\\">\\r\\n                <td class=\\\"key-item\\\">{{item[keyName]}}</td>\\r\\n                <td class=\\\"val-item\\\">{{item[valName]}}</td>\\r\\n                <td class=\\\"\\\"><mc:button  label=\\\"删除\\\" on-click=\\\"$remove\\\"></mc:button></td>\\r\\n            </tr>\\r\\n           \\r\\n        </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!--X区 -->\\r\\n    <div class=\\\"mc-text-show ftp\\\" ms-if=\\\"readonly\\\" ms-attr-name=\\\"formName\\\" ms-css-width=\\\"width\\\"></div>\\r\\n    <span class=\\\"mc-text-valid-info ftp\\\" ms-if=\\\"!isValid && validInfo != ''\\\">{{validInfo}}</span>\\r\\n    <div class=\\\"mc-text-field-tip\\\" ms-css-padding-left=\\\"labelSize\\\" ms-if=\\\"tip\\\">{{tip}}</div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/jsonadd/mc.jsonadd.html\n ** module id = 79\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/jsonadd/mc.jsonadd.min.css\n ** module id = 80\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.upload.html\", \"./mc.upload.min.css\", 'mcSwitch'], function (avalon, template) {\r\n    avalon.filters.uri = function (str) {\r\n\r\n        var r = '';\r\n        try {\r\n            var arr = str.split('/');\r\n            var long = arr[arr.length - 1].split('.');\r\n            long[0] = long[0].substring(1, 10);\r\n            r = long.join('.');\r\n        } catch (e) {\r\n            console.info(str);\r\n        }\r\n        return r\r\n    }\r\n    var _interface = function () { };\r\n    //todo 配置要上传的 fileType 不是在传一个文件以后判断文件扩展名来判断\r\n    //todo 单图上传，多图上传合并，看情况是否使用JQ插件\r\n    avalon.component(\"mc:upload\", {\r\n        //#region 外部参数\r\n        uploadFormId: McAvalon.util.genId(\"_uploadForm\"), //上传的form\r\n        label: \"\", //提示文字\r\n        labelSize: 0,\r\n        tip: \"\",\r\n        mult: false, //多图上传,默认关闭\r\n        fileSrc: \"\", //图片路径\r\n        fileSrcList: [], //多图上传图片路径\r\n        fileSize: null, //文件大小\r\n        uploadType: \"default\", //后台上传图片的分类类型\r\n        fileType: \"\", // 当前的类型\r\n        allowFileType: \"img\",//允许文件类型    默认图片  --img video audio office\r\n        mcstyle: \"\", //风格\r\n        size: \"normal\", //small large\r\n        width: 200, //宽度,默认200px\r\n        disabled: false, //是否禁用\r\n        //外链\r\n        allowOuter: false,//允许\r\n        isOuter: false,//是否 \r\n        //表单相关\r\n        formName: \"\", //表单data的key,输入框name\r\n        readonly: false, //是否只读，只读就无法更改上传的图片，不显示上传按钮\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n        //#endregion\r\n\r\n        //#region 外部事件\r\n        onInit: _interface, //初始化接口\r\n        onClick: null, //当按钮点击时触发事件\r\n        //#endregion\r\n\r\n        //#region 外部接口\r\n        isDisable: _interface, //是否禁用\r\n        submit: _interface, //上传\r\n        reset: _interface, //重置\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        //#endregion\r\n\r\n        //buildin \r\n        //switch,text\r\n        getSwitchVM: _interface, // \r\n        outerChanged: _interface, // \r\n        getOuterTextVM: _interface, // \r\n        $outerTextVM: {},\r\n        $outerSwitchVM: {},\r\n        setOuter: _interface, // \r\n        //builin end\r\n\r\n\r\n        //#region 内部属性\r\n        //对应格式\r\n        $fileTypeFormat: {\r\n            img: ['.jpg', '.png'],\r\n            video: [\".rm\", \".rmvb\", \".wmv\", \".avi\", \".mpg\", \".mpeg\", \".mp4\"],\r\n            audio: [\".mp3\", \".wma\", \".wav\", \".amr\"],\r\n            office: [\".doc\", \".docx\", \".pdf\", \".ppt\", \".pptx\"]\r\n        },\r\n        isInit: true,\r\n        extend: {},\r\n        $jQuploadForm: $({}), //上传图片的表单的jQuery对象\r\n        s_upload: false, //状态-是否正在上传的\r\n        lindex: -1, //布局中的序号\r\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\r\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\r\n        //#endregion\r\n\r\n        //#region 内部事件\r\n        fileChange: _interface, //上传input change事件\r\n        doDel: _interface, //多图上传 删除 事件\r\n        //#endregion\r\n\r\n        //#region 内部接口\r\n        _trigger: _interface, //内部触发器\r\n        getRealUrl: _interface, //获取.多种URL\r\n        getFormat: _interface, //获取对应格式\r\n        setRealUrl: _interface, //设置.多种URL\r\n        judgeOuter: _interface, //判断是否外链\r\n        delImg: _interface, //删除图片\r\n        //#endregion\r\n\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options;\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //buildin\r\n            vm.getOuterTextVM = function (_vm, elem) {\r\n                vm.$outerTextVM = _vm\r\n            }\r\n            vm.getSwitchVM = function (_vm, elem) {\r\n                vm.$outerSwitchVM = _vm\r\n            }\r\n            vm.outerChanged = function (e, _vm) {\r\n                vm.isOuter = _vm.isActive()\r\n            }\r\n\r\n            vm.setOuter = function (_val) {\r\n                var val = _val ? 1 : 0;\r\n                vm.$outerSwitchVM.setValue(val);\r\n            }\r\n            //builin end\r\n\r\n            //#region 外部事件\r\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 外部接口\r\n            vm.submit = function (_fileType) {\r\n                //UpAudioFileByMvc\r\n                var url = \"/Home/UpdateImg/\";\r\n                //get url\r\n                if (_fileType === 'office')\r\n                    url = \"/Home/UpOfficFileByMvc/\";\r\n                else if (_fileType === 'video')\r\n                    url = \"/Home/UpVideoFileByMvc/\";\r\n                else if (_fileType === 'audio')\r\n                    url = \"/Home/UpAudioFileByMvc/\";\r\n                vm.s_upload = true;\r\n                //get params,response\r\n                var ssFn = {};\r\n                if (_fileType === 'img') {\r\n                    ssFn = function (response) {\r\n                        vm.s_upload = false;\r\n                        console.log(response);\r\n                        var result = JSON.parse(response);\r\n                        if (vm.mult) { //多图\r\n                            vm.fileSrcList.push(result.url);\r\n                        } else {\r\n                            vm.fileSrc = result.url;\r\n                        }\r\n                        //closeLoading();\r\n                    }\r\n                } else {\r\n                    ssFn = function (response) {\r\n                        vm.s_upload = false;\r\n                        console.log(response);\r\n                        var result = JSON.parse(response);\r\n                        vm.fileSize = result.sizeList[0];\r\n                        vm.fileSrc = result.URLList[0];\r\n                        //closeLoading();\r\n                    }\r\n                }\r\n                //showLoading();\r\n                vm.$jQuploadForm.ajaxSubmit({\r\n                    url: url,\r\n                    type: \"POST\",\r\n                    data: {\r\n                        \"type\": vm.uploadType\r\n                    },\r\n                    timeout: 600000, //超时时间：10mins\r\n                    async: true,\r\n                    success: ssFn\r\n                });\r\n            }\r\n            vm.getValue = function () {\r\n                if (vm.mult) { //多图上传\r\n                    return vm.fileSrcList.join(\",\");\r\n                }\r\n                return vm.getRealUrl();\r\n            }\r\n            vm.setValue = function (val, isReadonly) {\r\n                //isReadonly 传值的时候才赋值判断\r\n                isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                if (vm.mult) { //多图上传\r\n                    if (val !== \"\") {\r\n                        vm.fileSrcList = val.split(\",\");\r\n                    } else {\r\n                        vm.fileSrcList = [];\r\n                    }\r\n                } else {\r\n                    //先清\r\n                    vm.$outerTextVM.setValue(\"\");\r\n                    //fix bug 相等时会有问题\r\n                    if (vm.fileSrc === val) {\r\n                        var n = val;\r\n                        //todo change filetype\r\n                        var all = n.split('.');\r\n                        var _f = '.' + all[all.length - 1];\r\n                        vm.fileType = vm.getFormat(_f);\r\n                        //todo change svm active ,setvalue,有点冗余问题不大 \r\n                        vm.judgeOuter(n)\r\n                        ? vm.$outerSwitchVM.setValue(1)\r\n                        : vm.$outerSwitchVM.setValue(0)\r\n\r\n                        //todo change svm active ,setvalue,有点冗余问题不大 \r\n                        vm.judgeOuter(n)\r\n                        ? vm.$outerTextVM.setValue(n)\r\n                        : 0\r\n                    }\r\n                    // if (val !== vm.fileSrc) {\r\n                    vm.fileSrc = val;\r\n                    // }\r\n                }\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部事件\r\n            vm.fileChange = function (ev, _this) {\r\n                console.log(_this.files);\r\n                if (!vm.s_upload) {\r\n                    //todo check file type\r\n                    if (_this.files && _this.files.length) {\r\n                        var all = _this.files[0].name.split('.');\r\n                        var _f = '.' + all[all.length - 1];\r\n                        var f = vm.getFormat(_f);\r\n                        if (f && vm.allowFileType.indexOf(f) > -1)\r\n                            vm.submit(f);\r\n                        else {\r\n                            alert(\"不支持所传格式\");\r\n                        }\r\n                    } else if (_this.value) { //IE\r\n                        //todo ie check\r\n                        vm.submit();\r\n                    }\r\n                }\r\n            }\r\n            //多图上传时删除图片\r\n            vm.doDel = function (ev, idx) {\r\n                vm.delImg(idx);\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部接口\r\n            vm._trigger = function (ev, type, _this) {\r\n                switch (type) {\r\n                    case \"click\":\r\n                        if (typeof vm.onClick == \"function\") {\r\n                            vm.onClick(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    case \"url\":\r\n                        if (typeof vm.onClick == \"function\") {\r\n                            vm.onChanged(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    case \"outer\":\r\n                        if (typeof vm.onClick == \"function\") {\r\n                            vm.onOuter(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            //删除图片\r\n            vm.delImg = function (idx) {\r\n                avalon.Array.removeAt(vm.fileSrcList, idx);\r\n            }\r\n            //get url by text, or filesrc\r\n            vm.getRealUrl = function () {\r\n                if (!vm.isOuter)\r\n                    //内\r\n                    return vm.fileSrc\r\n                else\r\n                    //外\r\n                    return vm.$outerTextVM.getValue();\r\n            }\r\n            //get format\r\n            vm.getFormat = function (_f) {\r\n                //_f  .mp3  \r\n                var r = '';\r\n                for (key in vm.$fileTypeFormat) {\r\n                    if (vm.$fileTypeFormat[key].indexOf(_f) > -1) {\r\n                        r = key;\r\n                        // return false;\r\n                    }\r\n                }\r\n                return r\r\n            }\r\n            //判断\r\n            vm.judgeOuter = function (url) {\r\n                return url.indexOf('http') > -1\r\n            }\r\n            //设置到text或者 \r\n            vm.setRealUrl = function (url) {\r\n\r\n                if (vm.judgeOuter(url)) {\r\n                    //outer\r\n                    vm.$outerTextVM.setValue(url, vm.readonly);\r\n                } else {\r\n                    //\r\n\r\n                }\r\n                vm.fileSrc = url;\r\n            }\r\n            //#endregion\r\n            //观测方法\r\n            vm.$watch('fileSrc', function (n, o) {\r\n                //todo change filetype\r\n                var all = n.split('.');\r\n                var _f = '.' + all[all.length - 1];\r\n                vm.fileType = vm.getFormat(_f);\r\n                //todo change svm active ,setvalue,有点冗余问题不大 \r\n                vm.judgeOuter(n)\r\n                ? vm.$outerSwitchVM.setValue(1)\r\n                : vm.$outerSwitchVM.setValue(0)\r\n\r\n                //todo change svm active ,setvalue,有点冗余问题不大 \r\n                vm.judgeOuter(n)\r\n                ? vm.$outerTextVM.setValue(n)\r\n                : 0\r\n\r\n                vm._trigger({}, 'url')\r\n            });\r\n            vm.$watch('isOuter', function (n, o) {\r\n                vm._trigger({}, 'outer')\r\n            });\r\n        },\r\n        $ready: function (vm, elem) {\r\n            vm.$jQuploadForm = $(elem).find(\"#\" + vm.uploadFormId); //获取表单的jQuery对象\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:upload\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/upload/mc.upload.js\n ** module id = 81\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-upload-cotar hf\\\" ms-class-1=\\\"mc-upload-lg: size=='large'\\\"\\r\\n     ms-class-2=\\\"mc-upload-sm: size=='small'\\\" ms-class-3=\\\"mc-loading: isInit\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <div class=\\\"fp\\\">\\r\\n        <!-- tip -->\\r\\n        <div ms-visible=\\\"tip\\\" class=\\\"item mc-text-field-tip\\\" ms-css-width=\\\"width\\\">\\r\\n            {{tip}}\\r\\n        </div>\\r\\n        <div class=\\\"vm-cotar\\\" ms-visible=\\\"allowOuter && (!readonly)\\\">\\r\\n            <mc:switch label-size=\\\"76\\\" label=\\\"是否外链\\\" on-init=\\\"getSwitchVM\\\" on-changed=\\\"outerChanged\\\"></mc:switch>\\r\\n        </div>\\r\\n        <div class=\\\"vm-cotar\\\" ms-visible=\\\"!isOuter\\\">\\r\\n            <form ms-attr-id=\\\"uploadFormId\\\" ms-if=\\\"!readonly\\\">\\r\\n                <label class=\\\"mc-button-label\\\">\\r\\n                    <input class=\\\"ms-upload-ipt\\\" ms-change=\\\"fileChange($event,this)\\\" type=\\\"file\\\" name=\\\"uploadImg\\\">\\r\\n                    <span class=\\\"mc-upload-btn\\\" ms-visible=\\\"!s_upload\\\">{{ allowFileType==='img'  ? '选择图片'  :   allowFileType==='video'? '选择视频' : '请选择'}}</span>\\r\\n                    <span class=\\\"mc-upload-btn\\\" ms-visible=\\\"s_upload\\\">上传中..</span>\\r\\n                </label>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div class=\\\"vm-cotar\\\" ms-visible=\\\"isOuter && (!readonly) \\\">\\r\\n            <mc:text on-init=\\\"getOuterTextVM\\\"> </mc:text>\\r\\n        </div> \\r\\n        <!-- 图片直接显示,其他直接url text, -->\\r\\n        <div ms-if=\\\"fileType==='img' && !mult\\\" class=\\\"mc-img-show-cotar\\\" ms-css-width=\\\"width\\\">\\r\\n            <img ms-attr-src=\\\"fileSrc\\\" ms-if=\\\"fileSrc != ''\\\">\\r\\n        </div>\\r\\n        <!-- 多图上传 -->\\r\\n        <div ms-if=\\\"mult\\\" class=\\\"mc-img-show-cotar mc-mult-img-cotar\\\" ms-css-width=\\\"width\\\">\\r\\n            <div class=\\\"mc-img-item\\\" ms-repeat=\\\"fileSrcList\\\">\\r\\n                <div class=\\\"mc-close-btn\\\" ms-click=\\\"doDel($event,$index)\\\" ms-if=\\\"!readonly\\\">&times;</div>\\r\\n                <img ms-attr-src=\\\"el\\\">\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"vm-cotar\\\" ms-visible=\\\"fileSrc != '' && fileType!=='img' && (!isOuter) && (!readonly)\\\">\\r\\n            已选择:{{fileSrc}}\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/upload/mc.upload.html\n ** module id = 82\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/upload/mc.upload.min.css\n ** module id = 83\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.editor.html\", \"./mc.editor.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:editor\", {\r\n        //#region 外部参数\r\n        ueditorId: \"\", //百度文本编辑器的id\r\n        label: \"\", //提示文字\r\n        labelSize: 0,\r\n        tip:\"\",\r\n        placeholder: \"\",\r\n        mcstyle: \"\", //风格\r\n        size: \"normal\", //small large\r\n        width: 900, //宽度,默认600px\r\n        disabled: false, //是否禁用\r\n        //表单相关\r\n        formName: \"\", //表单data的key,输入框name\r\n        readonly: false, //是否只读，只读就无法更改上传的图片，不显示上传按钮\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n        //#endregion\r\n\r\n        //#region 外部事件\r\n        onInit: _interface, //初始化接口\r\n        onClick: null, //当按钮点击时触发事件\r\n        //#endregion\r\n\r\n        //#region 外部接口\r\n        isDisable: _interface, //是否禁用\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        //#endregion\r\n\r\n        //#region 内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        isFullscreen: false, //是否全屏\r\n        $ueditorObj: null, //百度文本编辑器对象\r\n        lindex: -1, //布局中的序号\r\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\r\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\r\n        //#endregion\r\n\r\n        //#region 内部事件\r\n\r\n        //#endregion\r\n\r\n        //#region 内部接口\r\n        _trigger: _interface, //内部触发器\r\n        iniEditor: _interface, //初始化百度文本编辑器\r\n        destroy: _interface, //销毁当前的百度文本编辑器对象\r\n        //#endregion\r\n\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            hooks.ueditorId = McAvalon.util.genId(\"_ueditor\");\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options;\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //#region 外部事件\r\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 外部接口\r\n            vm.getValue = function () {\r\n                //获得百度文本编辑器内容\r\n                return vm.$ueditorObj.getContent();\r\n            }\r\n            vm.setValue = function (val, isReadonly) {\r\n                //isReadonly 传值的时候才赋值判断\r\n                isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                //如果在源代码模式则先切换回编辑模式\r\n                if (vm.$ueditorObj.queryCommandState('source')) {\r\n                    vm.$ueditorObj.execCommand('source');\r\n                }\r\n                vm.$ueditorObj.setContent(val);\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部事件\r\n\r\n            //#endregion\r\n\r\n            //#region 内部接口\r\n            vm._trigger = function (ev, type, _this) {\r\n                switch (type) {\r\n                    case \"click\":\r\n                        if (typeof vm.onClick == \"function\") {\r\n                            vm.onClick(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            vm.iniEditor = function() {\r\n                UM.clearCache(vm.ueditorId);\r\n                //实例化编辑器\r\n                vm.$ueditorObj = UM.getEditor(vm.ueditorId);\r\n                //fix fullscreen bug\r\n                vm.$ueditorObj.addListener(\"afterfullscreenchange\", function () {\r\n                    vm.isFullscreen = !vm.isFullscreen;\r\n                });\r\n            }\r\n            vm.destroy = function () {\r\n                //销毁当前的百度文本编辑器对象\r\n                UM.clearCache(vm.ueditorId);\r\n            }\r\n            //#endregion\r\n        },\r\n        $ready: function (vm, elem) {\r\n            vm.iniEditor(); //初始化百度文本编辑器\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:editor\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/editor/mc.editor.js\n ** module id = 84\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-editor-cotar hf\\\" ms-class=\\\"mc-loading: isInit\\\" ms-css-min-width=\\\"labelSize + width\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <div class=\\\"mc-editor-wrap ftp\\\" ms-class=\\\"mc-editor-fullscreen: isFullscreen\\\">\\r\\n        <div class=\\\"item mc-text-field-tip\\\" ms-css-width=\\\"width\\\">\\r\\n            {{tip}}\\r\\n        </div>\\r\\n        <script type=\\\"text/plain\\\" ms-attr-id=\\\"ueditorId\\\" ms-css-width=\\\"width\\\">\\r\\n        </script>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/editor/mc.editor.html\n ** module id = 85\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/editor/mc.editor.min.css\n ** module id = 86\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.tagadd.html\", \"./mc.tagadd.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:tagadd\", {\r\n        //#region 外部参数\r\n        label: \"\", //提示文字\r\n        labelSize: 0,\r\n        mcstyle: \"\", //风格\r\n        size: \"normal\", //small large\r\n        width: 200, //宽度,默认200px\r\n        disabled: false, //是否禁用\r\n        placeholder: \"\", //提示文字\r\n        tip:\"\",//\r\n        type: \"normal\", //normal 无类型 | group 组 | person 员工 | department 部门\r\n        iconCodeList: {\r\n            normal: \"\",\r\n            group: \"&#xe739;\",\r\n            person: \"&#xe78b;\",\r\n            department: \"&#xe753;\"\r\n        }, //图标字体code\r\n        value: \"\", //值\r\n        tagList: [], //标签列表\r\n        //表单相关\r\n        formName: \"\", //表单data的key,输入框name\r\n        readonly: false, //是否只读，只读就无法添加，删除标签\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n        //#endregion\r\n\r\n        //#region 外部事件\r\n        onInit: _interface, //初始化接口\r\n        onAdd: null, //当添加按钮点击时触发事件\r\n        onDel: null, //当删除按钮点击时触发事件\r\n        //#endregion\r\n\r\n        //#region 外部接口\r\n        isDisable: _interface, //是否禁用\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        //#endregion\r\n\r\n        //#region 内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\r\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\r\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\r\n        //#endregion\r\n\r\n        //#region 内部事件\r\n        doKeyDown: _interface, //标签按钮keyDown事件\r\n        doAdd: _interface, //标签添加事件\r\n        doDel: _interface, //标签添加事件\r\n        //#endregion\r\n\r\n        //#region 内部接口\r\n        _trigger: _interface, //内部触发器\r\n        addTag: _interface, //添加标签\r\n        delTag: _interface, //删除标签\r\n        getIcon: _interface, //获取图标\r\n        //#endregion\r\n\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options;\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //#region 外部事件\r\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 外部接口\r\n            vm.getValue = function () {\r\n                //todo 对must的支持,判断标签是否为空\r\n                var dataArr = [];\r\n                $.each(vm.tagList, function (i, val) {\r\n                    dataArr.push(val.tagName);\r\n                });\r\n                return dataArr.join(\";\");\r\n            }\r\n            vm.setValue = function (val, isReadonly) {\r\n                //isReadonly 传值的时候才赋值判断\r\n                isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                console.log(vm.tagList);\r\n                if (val !== \"\") {\r\n                    var dataArr = val.split(\";\");\r\n                    vm.tagList = dataArr.map(function (val, i) {\r\n                        return {\r\n                            tagName: val\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部事件\r\n            vm.doKeyDown = function (ev) {\r\n                if (ev.keyCode === 13) {\r\n                    vm.addTag();\r\n                }\r\n            }\r\n            vm.doAdd = function (ev) {\r\n                vm.addTag();\r\n            }\r\n            vm.doDel = function (ev, idx) {\r\n                vm.delTag(idx);\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部接口\r\n            vm._trigger = function (ev, type, _this) {\r\n                switch (type) {\r\n                    case \"add\":\r\n                        if (typeof vm.onAdd == \"function\") {\r\n                            vm.onAdd(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    case \"del\":\r\n                        if (typeof vm.onDel == \"function\") {\r\n                            vm.onDel(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            vm.addTag = function () {\r\n                //todo 空标签提示\r\n                //todo 不能添加重复的标签\r\n                if (vm.value.trim() !== \"\") {\r\n                    vm.tagList.push({\r\n                        tagName: vm.value\r\n                    });\r\n                    vm.value = \"\";\r\n                    vm._trigger({}, \"add\");\r\n                }\r\n            }\r\n            vm.delTag = function (idx) {\r\n                avalon.Array.removeAt(vm.tagList, idx);\r\n                vm._trigger({}, \"del\");\r\n            }\r\n            vm.getIcon = function() {\r\n                return vm.iconCodeList[vm.type] || \"\";\r\n            }\r\n            //#endregion\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:tagadd\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/tagadd/mc.tagadd.js\n ** module id = 87\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-tagadd-cotar hf\\\" ms-class-1=\\\"mc-tagadd-lg: size=='large'\\\"\\r\\n     ms-class-2=\\\"mc-tagadd-sm: size=='small'\\\" ms-class-3=\\\"mc-loading: isInit\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <div class=\\\"ftp\\\">\\r\\n        <div class=\\\"hf\\\">\\r\\n            <input class=\\\"form-control mc-ipt fp\\\" type=\\\"text\\\" ms-attr-placeholder=\\\"placeholder\\\" ms-if=\\\"!readonly\\\"\\r\\n                   ms-duplex=\\\"value\\\" ms-keydown=\\\"doKeyDown\\\" ms-css-width=\\\"width\\\" />\\r\\n            <div class=\\\"mc-add-btn fp\\\" ms-click=\\\"doAdd\\\" ms-if=\\\"!readonly\\\">添加</div>\\r\\n        </div>\\r\\n        <div class=\\\"item mc-text-field-tip\\\" >\\r\\n            {{tip}}\\r\\n        </div>\\r\\n        <div class=\\\"mc-tag-show-cotar hf\\\" ms-css-width=\\\"width + 80\\\">\\r\\n            <div class=\\\"mc-tag-item fp\\\" ms-repeat=\\\"tagList\\\">\\r\\n                <div class=\\\"mc-close-btn\\\" ms-click=\\\"doDel($event,$index)\\\" ms-if=\\\"!readonly\\\">&times;</div>\\r\\n                <div class=\\\"mc-tag-type iconfont\\\" ms-class=\\\"mc-type-{{type}}\\\" ms-if=\\\"type != 'normal'\\\">{{getIcon() | html}}</div>\\r\\n                <div class=\\\"mc-tag-name\\\" ms-class=\\\"mc-type : type != 'normal'\\\">{{el.tagName}}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/tagadd/mc.tagadd.html\n ** module id = 88\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/tagadd/mc.tagadd.min.css\n ** module id = 89\n ** module chunks = 0\n **/","define(['avalon', 'text!./mc.pagemodal.html', './mc.pagemodal.min.css'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:pagemodal\", {\r\n        //外部参数\r\n        title: \"\", //模态窗口title\r\n        padding: 15,\r\n        modalIsShow: false, //是否显示,默认隐藏\n        $tmpData: {}, //临时数据存储对象\r\n\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onShowed: null,\r\n        onHided: null,\r\n\r\n        //外部接口\r\n        setTitle: _interface,\r\n        getTitle: _interface,\r\n        show: _interface,\r\n        hide: _interface,\n        setCallback: _interface,\r\n\r\n        getTmpData: _interface, //获取临时数据对象的值\r\n        setTmpData: _interface, //设置临时数据对象的值\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        content: \"\",\n        lindex: -1, //布局中的序号\n        $scrollBody: $({}), //滚动层\r\n\r\n        //内部事件\r\n        btnClick: _interface,\n        clickDialog: _interface,\n\r\n        //内部接口\r\n        _trigger: _interface,\r\n        jBtnType: _interface,\r\n\n        //默认配置\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options; //返回VM的定义对象\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\n            //======= 内部事件 START =======//\n            /**\r\n             * 模态窗口点击时事件\r\n             * @param {} ev 动作类型\r\n             * @returns {} \r\n             */\n            vm.clickDialog = function (ev) {\r\n                console.log(ev);\n                //阻止冒泡(避免点击弹出框时 弹出框关闭)\n                //ev.cancelBubble = true;\r\n            }\n            //======= 内部事件 END =======//\r\n\n            //======= 内部接口 START =======//\r\n            /**\r\n             * 事件触发器\r\n             * @param {} ev 动作类型\r\n             * @param {} type 事件类型\r\n             * @returns {} \r\n             */\r\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"showed\":\n                        if (typeof vm.onshowed == \"function\") {\r\n                            vm.onShowed(ev, vm);\r\n                        }\n                        break;\n                    case \"hided\":\n                        if (typeof vm.onhided == \"function\") {\r\n                            vm.onHided(ev, vm);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n            //======= 内部接口 END =======//\r\n\r\n            //======= 外部接口 START =======//\n            /**doc\r\n             * @description {设置title}\r\n             * @param {title} {要设置的title}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\n            vm.setTitle = function (title) {\r\n                vm.title = title;\r\n                return vm;\r\n            }\n            /**doc\r\n             * @description {返回title}\r\n             * @returns {String} {title字符串}\r\n             */\n            vm.getTitle = function () {\r\n                return vm.title;\r\n            }\n            /**doc\r\n             * @description {显示模态窗口}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\n            vm.show = function () {\r\n                vm.modalIsShow = true;\n                vm._trigger({}, \"showed\");\r\n                return vm;\r\n            }\n            /**doc\r\n             * @description {隐藏模态窗口}\r\n             * @param {ev} {动作类型}\r\n             * @param {noJudge} {是否不判断直接关闭}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\n            vm.hide = function () {\r\n                vm.modalIsShow = false;\n                vm._trigger({}, \"hided\");\r\n                return vm;\r\n            }\r\n            /**doc\r\n             * @description {设置回调}\r\n             * @param {idx} {设置的按钮index}\r\n             * @param {callback} {对应的回调函数}\r\n             * @returns {vm} {当前调用的vm对象}\r\n             */\r\n            vm.setCallback = function (idx, callback) {\r\n                vm.buttons[idx] && (vm.buttons[idx].callback = callback);\r\n                return vm;\r\n            }\r\n            vm.getTmpData = function() {\r\n                return vm.$tmpData;\r\n            }\r\n            vm.setTmpData = function(val) {\r\n                vm.$tmpData = $.extend(vm.$tmpData, val);\r\n                return vm;\r\n            }\r\n            //======= 外部接口 END =======//\r\n            //弹出层显示时回调\r\n            vm.$watch(\"modalIsShow\", function () {\r\n                vm.$scrollBody.scrollTop(0); //滚动条滚回顶部\r\n            });\r\n        },\n        $ready: function (vm, elem) {\r\n            vm.$scrollBody = $(elem).find(\".mc-modal-content\");\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:pagemodal\"];\n    widget.regionals = {};\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/pagemodal/mc.pagemodal.js\n ** module id = 90\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-pagemodal-cotar fade\\\" ms-class-1=\\\"mc-pagemodal-show:modalIsShow\\\"\\r\\n     ms-class-2=\\\"mc-pagemodal-hide:!modalIsShow\\\" ms-class-3=\\\"mc-loading: isInit\\\">\\r\\n    <div class=\\\"mc-modal-content\\\">\\r\\n        <!-- modal header -->\\r\\n        <div class=\\\"mc-modal-header hf\\\">\\r\\n            <div class=\\\"mc-modal-title fp\\\">{{title}}</div>\\r\\n        </div>\\r\\n        <!-- modal body -->\\r\\n        <div class=\\\"mc-modal-body\\\" ms-css-padding=\\\"padding\\\">{{content|html}}</div>\\r\\n    </div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/pagemodal/mc.pagemodal.html\n ** module id = 91\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/pagemodal/mc.pagemodal.min.css\n ** module id = 92\n ** module chunks = 0\n **/","define(['avalon', 'text!./mc.bread.html', './mc.bread.min.css'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:bread\", {\r\n        //外部参数\r\n        data: [],\r\n        padding: 15,\r\n\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n\r\n        //外部接口\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\n        $scrollBody: $({}), //滚动层\r\n\r\n        //内部事件\r\n        btnClick: _interface,\n        clickDialog: _interface,\n\r\n        //内部接口\r\n        _trigger: _interface,\r\n\n        //默认配置\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options; //返回VM的定义对象\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\n            //======= 内部事件 START =======//\n\n            //======= 内部事件 END =======//\r\n\n            //======= 内部接口 START =======//\r\n            /**\r\n             * 事件触发器\r\n             * @param {} ev 动作类型\r\n             * @param {} type 事件类型\r\n             * @returns {} \r\n             */\r\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\n                    default: break;\r\n                }\r\n            }\n            //======= 内部接口 END =======//\r\n\r\n            //======= 外部接口 START =======//\n            \r\n            //======= 外部接口 END =======//\r\n        },\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:bread\"];\n    widget.regionals = {};\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/bread/mc.bread.js\n ** module id = 93\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-bread-cotar\\\" ms-class=\\\"mc-loading: isInit\\\">\\r\\n    <div class=\\\"mc-bread-list hf\\\">\\r\\n        <a class=\\\"mc-bread-item fp mc-active\\\" ms-repeat=\\\"data\\\"\\r\\n           ms-attr-href=\\\"el.href\\\" ms-if-loop=\\\"el.href\\\">{{el.text}}</a>\\r\\n        <div class=\\\"mc-bread-item fp mc-cur-item\\\" ms-repeat=\\\"data\\\" ms-class=\\\"mc-active: el.href\\\"\\r\\n             ms-if-loop=\\\"!el.href\\\">{{el.text}}</div>\\r\\n    </div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/bread/mc.bread.html\n ** module id = 94\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/bread/mc.bread.min.css\n ** module id = 95\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.iconselect.html\", \"./mc.iconselect.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:iconselect\", {\r\n        //#region 外部参数\r\n        label: \"\", //提示文字\r\n        labelSize: 0,\r\n        mcstyle: \"\", //风格\r\n        width: 200, //宽度,默认200px\r\n        disabled: false, //是否禁用\r\n        iconCode: \"\", //图标字体code\r\n        iconList: McAvalon.icon.getList(),\r\n        //表单相关\r\n        formName: \"\", //表单data的key,输入框name\r\n        readonly: false, //是否只读，只读就无法添加，删除标签\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n        //#endregion\r\n\r\n        //#region 外部事件\r\n        onInit: _interface, //初始化接口\r\n        onChanged: null, //当改变图片的时候触发事件\r\n        //#endregion\r\n\r\n        //#region 外部接口\r\n        isDisable: _interface, //是否禁用\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        //#endregion\r\n\r\n        //#region 内部属性\r\n        isInit: true,\r\n        popShow: false,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\r\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\r\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\r\n        //#endregion\r\n\r\n        //#region 内部事件\r\n        doPopSelect: _interface, //显示图标选择层事件\r\n        doSelect: _interface, //图标选择事件\r\n        //#endregion\r\n\r\n        //#region 内部接口\r\n        _trigger: _interface, //内部触发器\r\n        //#endregion\r\n\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options;\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //#region 外部事件\r\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 外部接口\r\n            vm.getValue = function () {\r\n                return vm.iconCode;\r\n            }\r\n            vm.setValue = function (val, isReadonly) {\r\n                //isReadonly 传值的时候才赋值判断\r\n                isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                vm.iconCode = val;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部事件\r\n            vm.doPopSelect = function (ev) {\r\n                vm.popShow = !vm.popShow;\r\n            }\r\n            vm.doSelect = function (ev, code) {\r\n                if (vm.iconCode !== code) {\r\n                    vm.iconCode = code;\r\n                    vm._trigger({}, \"changed\");\r\n                }\r\n                vm.popShow = false;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部接口\r\n            vm._trigger = function (ev, type, _this) {\r\n                switch (type) {\r\n                    case \"changed\":\r\n                        if (typeof vm.onChanged == \"function\") {\r\n                            vm.onChanged(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            //#endregion\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:iconselect\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/iconselect/mc.iconselect.js\n ** module id = 96\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-iconselect-cotar hf\\\" ms-class=\\\"mc-loading: isInit\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <div class=\\\"mc-select-cotar ftp hf\\\">\\r\\n        <div class=\\\"mc-selected-icon iconfont fp\\\" ms-click=\\\"doPopSelect\\\" ms-if=\\\"iconCode != ''\\\">{{iconCode|html}}</div>\\r\\n        <div class=\\\"mc-select-btn fp\\\" ms-click=\\\"doPopSelect\\\" ms-if=\\\"iconCode == '' && !readonly\\\">选择图标</div>\\r\\n        <div class=\\\"mc-iconselect-content hf\\\" ms-class=\\\"mc-show: popShow\\\" ms-if=\\\"!readonly\\\">\\r\\n            <div class=\\\"mc-item iconfont fp\\\" ms-repeat=\\\"iconList\\\" ms-click=\\\"doSelect($event, el.iconCode)\\\">{{el.iconCode|html}}</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/iconselect/mc.iconselect.html\n ** module id = 97\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/iconselect/mc.iconselect.min.css\n ** module id = 98\n ** module chunks = 0\n **/","//todo 右边 data需要写出来\r\ndefine([\"avalon\",\"text!./mc.listselect.html\", \"./mc.listselect.min.css\",'mcLetterList', 'mcDialog'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:listselect\", {\r\n        //buildIn相关\r\n        $dialog_opt: {},\r\n        getDialogVM: _interface, \r\n        $listId: McAvalon.util.genId(\"_letterlist\"), //id \r\n        $dialogVM: {},\r\n        //buildin \r\n        $list_opt: {\r\n        \r\n        },\r\n        $data_opt:{\r\n\r\n        },\r\n        data: [],\r\n        dataSelect: null,\r\n        dataClick: _interface, //\r\n        //外部参数\r\n        label: \"\", //提示文字\r\n        trace: false, //getValue是否返回路径\r\n        labelSize: 0,\r\n        value: \"\", //输入框内值   \r\n        text: \"\", //输入框内文字    \r\n        valid: \"\", //验证类型\r\n        width: 200, //宽度,默认200px\r\n        must: false, //是否必填,也可为数字 代表必须的长度(会将覆盖length)\r\n        tip: \"\", //填写提示信息\r\n        isHide: false, //是否隐藏,不可见\r\n        readonly: false, //是否只读，只读就div显示，否则input显示\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onClicked: null, //当输入框点击时触发事件\r\n        onChanged: null, //当输入框内值发生改变时触发事件\r\n\r\n        //外部接口\r\n\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        formName: \"\", //表单data的key,输入框name\r\n        submitName: \"\", //提交表单的name\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n\r\n        //内部属性 \r\n        isInit: true,\r\n        extend: {},\r\n        isValid: true, //是否正在验证\r\n        validInfo: \"\", //错误信息\r\n        lindex: -1, //布局中的序号\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\n\n        //内部事件\n        doClick: _interface,\n        validValue: _interface,\n\n        //内部接口\n        _trigger: _interface, //内部触发器\r\n\n        $template: template,\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            //树配置要融合\r\n            if (vmOpts.$list_opt) {\r\n                vmOpts.$list_opt = $.extend(true, hooks.$list_opt, vmOpts.$list_opt)\r\n            }\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\n            return options;\r\n        },\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\n        $init: function (vm, elem) {\r\n            //buildin 相关\r\n            //data\r\n\r\n            vm.dataClick = function (item) {\r\n                vm.dataSelect ? vm.dataSelect.selected = false : 0;\r\n                vm.dataSelect = item;\r\n                item.selected = true;\r\n            }\r\n            //list\r\n            vm.$list_opt.onClickBefore = function (_item) {\r\n                //\r\n                vm.dataSelect = null;\r\n                _item[vm.$list_opt.idName]\r\n                var ajaxConfig = vm.$data_opt.$ajaxConfig;\r\n                var p={}; \r\n                p[ajaxConfig.key] = _item[ajaxConfig.key]\r\n                p = $.extend(true, p, ajaxConfig.extra); \r\n                Mc.Ajax({\r\n                    url:  ajaxConfig.url,\r\n                    data:p,\r\n                    success: function (response) {\r\n                        vm.data = response.data.map(function (item) {\r\n                            item.selected = false;\r\n                            return item;\r\n                        })\r\n                    }\r\n                });\r\n            };\r\n            //dialog\r\n            vm.$dialog_opt = {\r\n                size: 'large',\r\n                buttons: [\r\n                    {\r\n                        label: \"保存\",\r\n                        type: \"success\",\r\n                        callback: function (ev, _vm) {\r\n                            //get self val\r\n                            //debugger;\r\n                            vm.value = vm.dataSelect[vm.$data_opt.idName];\r\n                            vm.text = vm.dataSelect[vm.$data_opt.textName];\r\n                            return true;\r\n                        }\r\n                    },\r\n                    {\r\n                        label: \"取消\",\r\n                        callback: function () {\r\n                            return true;\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n\r\n            vm.getDialogVM = function (_vm, elem) {\r\n                vm.$dialogVM = _vm\r\n            }\r\n           \r\n            //内部事件 \r\n            vm.doClick = function (ev) {\r\n                vm.$dialogVM.showDialog();\r\n                //vm.$dialogVM.hideDialog({}, true);\r\n                vm._trigger(ev, \"clicked\");\r\n            }\n            vm.validValue = function (ev) {\r\n                vm.value = vm.value + \"\"; //保证value为字符串\r\n                vm.validInfo = McAvalon.validata(vm.value, vm.valid);\n                vm.isValid = vm.validInfo === \"\" ? true : false;\n                if (vm.isValid) {\r\n                    if (vm.must === true && vm.value.trim() === \"\") {\r\n                        vm.isValid = false; vm.validInfo = \"该字段为必填字段\";\r\n                    }\r\n                }\r\n            }\r\n\r\n            //内部接口\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"clicked\":\n                        if (typeof vm.onclicked == \"function\") {\r\n                            vm.onClicked(ev, vm);\r\n                        }\n                        break;\n                    case \"changed\":\n                        if (typeof vm.onchanged == \"function\") {\r\n                            vm.onChanged(ev, vm);\r\n                        }\n                        break;\n                    default: break;\r\n                }\r\n            }\n\n            //外部接口 \n            vm.getValue = function () { \r\n                return vm.value;\r\n            }\n            vm.setValue = function (val, isReadonly) {\r\n                //todo clr fns抽离\r\n                //data\r\n                vm.dataSelect = null;\r\n                vm.data = [];\r\n                //tree \r\n                McAvalon.getVm(vm.$listId).q = \"\"; \r\n                var tmp = McAvalon.getVm(vm.$listId).getSelect() \r\n                    tmp ? tmp.selected = false : 0;\r\n                //clr end\r\n\r\n                //isReadonly 传值的时候才赋值判断\r\n                isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                vm.text = val; \r\n               // vm.value = val;\r\n            }\r\n\r\n\r\n            vm.$watch(\"value\", function (newVal, oldVal) {\r\n                vm._trigger({ newVal: newVal, oldVal: oldVal }, \"changed\");\r\n            });\r\n        },\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\n\n    var widget = avalon.components[\"mc:listselect\"];\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/listselect/mc.listselect.js\n ** module id = 99\n ** module chunks = 0\n **/","module.exports = \"\\r\\n \\r\\n<div class=\\\"mc-form-group mc-list-select-cotar hf\\\" ms-class=\\\"mc-error: !isValid\\\" ms-visible=\\\"!isHide\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <div class=\\\"form-control mc-ipt fp\\\" ms-if=\\\"!readonly\\\"\\r\\n         ms-attr-name=\\\"formName\\\" ms-css-width=\\\"width\\\"\\r\\n         ms-click=\\\"doClick($event)\\\">{{text}}</div>\\r\\n    <div class=\\\"mc-text-show ftp\\\" ms-if=\\\"readonly\\\" ms-attr-name=\\\"formName\\\" ms-css-width=\\\"width\\\">{{text}}</div>\\r\\n    <span class=\\\"mc-text-valid-info ftp\\\" ms-if=\\\"!isValid && validInfo != ''\\\">{{validInfo}}</span>\\r\\n    <div class=\\\"mc-text-field-tip\\\" ms-css-padding-left=\\\"labelSize\\\" ms-if=\\\"tip\\\">{{tip}}</div>\\r\\n\\r\\n\\r\\n    <mc:dialog config=\\\"$dialog_opt\\\" title=\\\"\\\" on-init=\\\"getDialogVM\\\">\\r\\n        <div slot=\\\"content\\\">\\r\\n            <!-- list -->\\r\\n            <mc:letterlist config=\\\"$list_opt\\\" ms-attr-identifier=\\\"$listId\\\"></mc:letterlist>\\r\\n            <!-- data -->\\r\\n            <div class=\\\"data-list\\\">\\r\\n                <div class=\\\"item\\\" ms-repeat-item=\\\"data\\\" ms-click=\\\"dataClick(item)\\\" ms-class=\\\"active: item.selected\\\">{{item[$data_opt.textName]}}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </mc:dialog>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/listselect/mc.listselect.html\n ** module id = 100\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/listselect/mc.listselect.min.css\n ** module id = 101\n ** module chunks = 0\n **/","\r\n//todata\r\ntoLetterListData = function (data, cullOrigin) {\r\n    var r = [];\r\n    avalon.each(data, function (i, item) {\r\n        item.selected = false; \r\n        r.push(item); \r\n\r\n    });\r\n\r\n    return r;\r\n};\r\n//todo 搜索只有indexof,全拼音后台没给 这也没做\r\ndefine(['avalon', 'text!./mc.letterlist.html', './mc.letterlist.min.css', 'mcButton'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:letterlist\", {\r\n        //外部参数 \r\n        idName: \"id\",//id name\r\n        textName: \"text\",//显示 name\r\n        keyName: \"key\", //key name  \r\n        picName: \"pic\", //item小图片 name  \r\n        hasPic:false,\r\n        //外部事件\r\n        onInit: _interface, //初始化接口\r\n        onDataChange: _interface, //数据改变\r\n        onClickBefore: _interface, //点击前\r\n        //外部接口 \r\n        setData: _interface, //设置数据源\r\n        getSelect: _interface, //获取选中\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号   \r\n        tmpActive: null,\r\n        $originData: [],\r\n        data: null,//数据源 [text,id,selected,key]\r\n        q:\"\",\r\n        $skipArray: [''],\r\n        //内部事件 \r\n        \r\n        //内部接口\r\n        _trigger: _interface, //内部触发器  \r\n        click: _interface, //内部触发器  \r\n        select : _interface, //内部触发器  \r\n        _select : _interface, //内部触发器  \r\n        genGroup: _interface, //内部触发器  \r\n        renderDataLen: _interface, //内部触发器  \r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            if (vmOpts.data) {\r\n                vmOpts.data = toLetterListData(vmOpts.data, vmOpts.cullOrigin);\r\n            }\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象 \r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //内部事件\r\n\r\n\r\n            //内部接口\r\n            vm._trigger = function (ev, type) {\r\n                switch (type) {\r\n                    case \"data\":\r\n                        if (typeof vm.onDataChange == \"function\") {\r\n                            vm.onDataChange(vm.r, vm.originData, vm.diffData);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n       \r\n            //选中,该交互类radio\r\n            vm.click = function (item) { \r\n                if (vm.onClickBefore(item,vm) === false) {\r\n                    return false;\r\n                }\r\n                vm.select(item);\r\n            }\r\n            vm.select = function (item) {\r\n                vm.tmpActive ? vm.tmpActive.selected = false : 0;\r\n                vm._select(item, true);\r\n                vm.tmpActive = item;\r\n            }\r\n            //选中基本方法\r\n            vm._select = function (item, select) {\r\n                item.selected = select; \r\n            }\r\n            //生成q对应组\r\n            //todo filter = gen + watch,就没必要写一堆gen,关键在于框架支持 | filter (var)\r\n            var genGroup = function () { \r\n                var r = {};\r\n                var q = vm.q.trim();\r\n                //e.x{A:[ item ],B:[]  }..\r\n                vm.$originData.forEach(function (item, i) {\r\n                    if (q && item[vm.textName].indexOf(q) < 0) {\r\n                        return false;\r\n                    }\r\n                    var key = item[vm.keyName];\r\n                    r[key] = r[key] || [];\r\n                    r[key].push(item);\r\n                });\r\n                vm.data = r;\r\n            }\r\n            vm.genGroup = _.throttle(genGroup, 250);\r\n            vm.renderDataLen = function () {\r\n                var data = vm.data.$model;\r\n                var sum = 0;\r\n                for (key in data) {\r\n                    if (data[key] && data[key].length) {\r\n                        sum += data[key].length;\r\n                    }\r\n                }\r\n\r\n\r\n                return sum;\r\n            }\r\n            //外部事件 \r\n            //外部接口 \r\n            vm.setData = function (_data) {\r\n                var data = toLetterListData(_data);\r\n                vm.$originData = data;\r\n                //vm.$originData = data.map(function (item) {\r\n                //    return _.clone(item);\r\n                //}) \r\n                vm.genGroup();\r\n            }\r\n            vm.getSelect = function () { \r\n                return  vm.tmpActive;\r\n            }\r\n            \r\n            //观测方法\r\n            //注意:ms-duplex与ms-input不能用在同一元素上。用watch.. \r\n            vm.$watch('q', function (newV, oldV) {\r\n                //输入就清完selected \r\n                //avalon.each(vm.data, function (i, item) {\r\n                //    item.selected = false;\r\n                //});\r\n                vm.genGroup();\r\n            });\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n            vm.genGroup();\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:letterlist\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/letterList/mc.letterList.js\n ** module id = 102\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-letter-list-cotar\\\">\\r\\n    <div class=\\\"left-list group-list\\\">\\r\\n        <div class=\\\"all-num\\\">\\r\\n            <!--总数 {{renderDataLen(data)}}-->\\r\\n        </div>\\r\\n        <input type=\\\"text\\\" class=\\\"ipt\\\" placeholder=\\\"输入关键字\\\" ms-duplex-string=\\\"q\\\">\\r\\n        <div class=\\\"group-box\\\">\\r\\n            <div class=\\\"group-item\\\" ms-if-loop=\\\"data\\\" ms-repeat=\\\"data\\\">\\r\\n                <div class=\\\"gourp-title\\\">\\r\\n                    {{$key}} <div class=\\\"rfp\\\"> {{$val.length}}项 </div>\\r\\n                </div>\\r\\n                <div class=\\\"item\\\" ms-repeat-item=\\\"$val\\\"\\r\\n                     ms-class=\\\"active: item.selected\\\"\\r\\n                     ms-click=\\\"click(item)\\\">\\r\\n                    <img ms-if=\\\"hasPic\\\" ms-attr-src=\\\"item[picName]\\\" class=\\\"sm-pic\\\" alt=\\\"\\\"> \\r\\n                    <span>{{item[textName]}}</span>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/letterList/mc.letterlist.html\n ** module id = 103\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/letterList/mc.letterlist.min.css\n ** module id = 104\n ** module chunks = 0\n **/","define(['avalon', 'text!./mc.gridlayout.html', './mc.gridlayout.min.css'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:gridlayout\", {\r\n        //外部属性\r\n        gridConfig: {},\r\n        ln: 0,\r\n        cn: 0,\r\n        padding: 15, //panel-body 的 padding\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        tr: [],\r\n        td: [],\r\n\r\n        //view接口\r\n\r\n        onInit: _interface, //必须定义此接口\r\n        renderContent: _interface,\r\n        _trigger: _interface,\r\n\r\n        //默认配置\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            if (vmOpts.ln || vmOpts.cn || elemOpts.ln || elemOpts.cn) {\r\n                //初始化slot标签页内容用属性\r\n                var gridTr = vmOpts.ln || elemOpts.ln;\r\n                var gridTd = vmOpts.cn || elemOpts.cn;\r\n                if (gridTr === (gridTr >>> 0) && gridTd === (gridTd >>> 0)) { //判断是否为非负正整数\r\n                    for (var i = 0; i < gridTr; i++) {\r\n                        for (var j = 0; j < gridTd; j++) {\r\n                            hooks[\"grid\" + i + j] = \"\";\r\n                            if (i === 0) {\r\n                                hooks.td.push(\"\");\r\n                            }\r\n                        }\r\n                        hooks.tr.push(\"\");\r\n                    }\r\n                }\r\n            }\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //接口方法\r\n            vm.renderContent = function (trIdx, tdIdx) {\r\n                return vm[\"grid\" + trIdx + tdIdx];\r\n            }\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:gridlayout\"];\r\n    widget.regionals = {};\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/layout/gridlayout/mc.gridlayout.js\n ** module id = 105\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-gridlayout-cotar\\\">\\r\\n    <table class=\\\"mc-grid-table\\\">\\r\\n        <!--<thead ms-if=\\\"hasHead\\\" ms-class=\\\"mc-hide:isInit\\\">\\r\\n            <tr>\\r\\n                <th ms-repeat=\\\"$td\\\" ms-class=\\\"col-{{$index}}\\\">\\r\\n\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>-->\\r\\n        <tbody ms-class=\\\"mc-hide:isInit\\\">\\r\\n            <tr ms-repeat=\\\"tr\\\">\\r\\n                <td ms-repeat-el=\\\"td\\\" ms-class=\\\"col-{{$index}}\\\">\\r\\n                    {{renderContent($outer.$index,$index)|html}}\\r\\n                </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/layout/gridlayout/mc.gridlayout.html\n ** module id = 106\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/layout/gridlayout/mc.gridlayout.min.css\n ** module id = 107\n ** module chunks = 0\n **/","define(['avalon', 'text!./mc.linearlayout.html', './mc.linearlayout.min.css'], function (avalon, template) {\r\n    //获取内部保存项路径\r\n    function getPath(d, hooks) {\r\n        for (var i = 0; i < d.length; i++) {\r\n            hooks[d[i]._p] = \"\";\r\n            if (d[i]._c.length) {\r\n                getPath(d[i]._c, hooks);\r\n            }\r\n        }\r\n    }\r\n    //初始化布局\r\n    function iniLayout(vm, elem) {\r\n        //把线性布局与布局管理器关联\r\n        //var $linear = $(elem).find(\".mc-linear-item\");\r\n        var layoutSizeObj = {};\r\n        var styleHtml = \"\";\r\n        styleHtml += \"<style>\";\r\n        console.log(vm.$mamager);\r\n        vm.$mamager.each(function (i, val) {\r\n            var className = $(val).attr(\"class\").split(\" \");\r\n            $.each(className, function (j, item) {\r\n                if (item.indexOf(\"mc_ai\") !== -1) {\r\n                    layoutSizeObj[item.replace(\"mc_ai\", \"mc_li\")] = {\r\n                        width: val.offsetWidth,\r\n                        height: val.offsetHeight\r\n                    }\r\n                    styleHtml += \"#\" + vm.layoutid + \" .\" + item.replace(\"mc_ai\", \"mc_li\") + \"{width:\" + val.offsetWidth + \"px;height:\" + val.offsetHeight + \"px}\";\r\n                    return false;\r\n                }\r\n            });\r\n            //$linear.eq(i).css({\r\n            //    height: val.offsetHeight,\r\n            //    width: val.offsetWidth\r\n            //});\r\n        });\r\n        styleHtml += \"</style>\";\r\n        vm.sizeStyle = styleHtml;\r\n        return layoutSizeObj;\r\n    }\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:linearlayout\", {\r\n        //外部属性\r\n        mode: \"v\",\r\n        data: {},\r\n        mcstyle: \"\",\r\n        width: false,\r\n        height: false,\r\n        padding: false,\r\n        pt: false,\r\n        pl: false,\r\n        pr: false,\r\n        pb: false,\r\n        layoutz: {},\r\n        //内部属性\r\n        isInit: true,\r\n        layoutid: \"\", //布局id\r\n        tmpid: \"\",\r\n        mtmpid: \"\",\r\n        $mamager: null, //布局管理器\r\n        extend: {},\r\n\r\n        sizeStyle: \"\", //大小样式\r\n\r\n        //view接口\r\n        test: _interface,\r\n        onInit: _interface, //必须定义此接口\r\n        renderStyle: _interface,\r\n        calPosition: _interface,\r\n        renderContent: _interface,\r\n        _trigger: _interface,\r\n\r\n        //默认配置\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            hooks.layoutid = McAvalon.util.genId(\"layout\");\r\n            hooks.tmpid = McAvalon.util.genId(\"linear\");\r\n            hooks.mtmpid = McAvalon.util.genId(\"manager\");\r\n            getPath(vmOpts.data._c, hooks);\r\n            console.log(hooks);\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //接口方法\r\n            vm.renderStyle = function (style) {\r\n                if (vm[style] !== false) {\r\n                    return vm[style];\r\n                }\r\n                //var style = \"<style>.\" + vm.$id + \"{\";\r\n                //vm.top === false || (style += \"top:\" + vm.top + \"px;\");\r\n                //vm.left === false || (style += \"left:\" + vm.left + \"px;\");\r\n                //vm.right === false || (style += \"right:\" + vm.right + \"px;\");\r\n                //vm.bottom === false || (style += \"bottom:\" + vm.bottom + \"px;\");\r\n                //vm.width === false || (style += \"width:\" + vm.width + \"px;\");\r\n                //style += \"}</style>\";\r\n                //console.log(vm);\r\n                //return style;\r\n            }\r\n            vm.test = function (data) {\r\n                console.log(data);\r\n                console.log(data._m);\r\n                console.log(vm.data);\r\n            }\r\n            vm.renderContent = function (path, cNbr) {\r\n                if (!cNbr) { //判断是否为末块\r\n                    return vm[path];\r\n                }\r\n                return \"\";\r\n            }\r\n            vm.calPosition = function (pType, data, idx) {\r\n                //todo 支持多个百分比\r\n                var tmp, i;\r\n                if (pType === \"top\") {\r\n                    if (data._m === \"h\") {\r\n                        return 0;\r\n                    } else {\r\n                        tmp = 0;\r\n                        for (i = 0; i < idx; i++) {\r\n                            if (data._c[i].w.indexOf(\"%\") !== -1) return false;\r\n                            tmp += data._c[i].w >>> 0;\r\n                        }\r\n                        return tmp;\r\n                    }\r\n                } else if (pType === \"bottom\") {\r\n                    if (data._m === \"h\") {\r\n                        return 0;\r\n                    } else {\r\n                        tmp = 0;\r\n                        for (i = idx + 1; i < data._c.length; i++) {\r\n                            if (data._c[i].w.indexOf(\"%\") !== -1) return false;\r\n                            tmp += data._c[i].w >>> 0;\r\n                        }\r\n                        return tmp;\r\n                    }\r\n                } else if (pType === \"left\") {\r\n                    if (data._m === \"v\") {\r\n                        return 0;\r\n                    } else {\r\n                        tmp = 0;\r\n                        for (i = 0; i < idx; i++) {\r\n                            if (data._c[i].w.indexOf(\"%\") !== -1) return false;\r\n                            tmp += data._c[i].w >>> 0;\r\n                        }\r\n                        return tmp;\r\n                    }\r\n                } else if (pType === \"right\") {\r\n                    if (data._m === \"v\") {\r\n                        return 0;\r\n                    } else {\r\n                        tmp = 0;\r\n                        for (i = idx + 1; i < data._c.length; i++) {\r\n                            if (data._c[i].w.indexOf(\"%\") !== -1) return false;\r\n                            tmp += data._c[i].w >>> 0;\r\n                        }\r\n                        return tmp;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        $ready: function (vm, elem) {\r\n            vm.$mamager = $(elem).find(\".mc-absolute-item\");\r\n            console.log(vm.$mamager);\r\n            //注册布局初始化事件\r\n            McAvalon.$window.on(\"layout_ini\", function () {\r\n                console.log(\"layout_ini\");\r\n                //触发布局大小变动事件\r\n                McAvalon.$window.trigger(\"layout_resize\", iniLayout(vm, elem));\r\n            });\r\n            //注册窗口大小变动事件\r\n            McAvalon.$window.on(\"window_resize\", function () {\r\n                console.log(\"layout_resize\");\r\n                //触发布局大小变动事件\r\n                McAvalon.$window.trigger(\"layout_resize\", iniLayout(vm, elem));\r\n            });\r\n            //iniLayout(vm, elem);\r\n            console.log(\"linearlayout ini\");\r\n            //触发布局初始化事件\r\n            McAvalon.$window.trigger(\"layout_ini\");\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        },\r\n        $childReady: function (a,b) {\r\n            console.log(a);\r\n            console.log(b);\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:linearlayout\"];\r\n    widget.regionals = {};\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/layout/linearlayout/mc.linearlayout.js\n ** module id = 108\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-layout-cotar\\\" ms-attr-id=\\\"layoutid\\\">\\r\\n    {{sizeStyle|html}}\\r\\n\\r\\n    <div class=\\\"mc-linearlayout-cotar mc-animate\\\" ms-class-1=\\\"mc-loading: isInit\\\" ms-class-2=\\\"mc-animate-page-show: !isInit\\\"\\r\\n         ms-class-3=\\\"{{mcstyle}}\\\" ms-css-width=\\\"renderStyle('width')\\\"\\r\\n         ms-css-height=\\\"renderStyle('height')\\\"\\r\\n         ms-css-padding=\\\"renderStyle('padding')\\\" ms-css-padding-top=\\\"renderStyle('pt')\\\"\\r\\n         ms-css-padding-left=\\\"renderStyle('pl')\\\" ms-css-padding-right=\\\"renderStyle('pr')\\\"\\r\\n         ms-css-padding-bottom=\\\"renderStyle('pb')\\\"\\r\\n         ms-class-4=\\\"hf: data._m === 'h'\\\">\\r\\n        <script type=\\\"avalon\\\" ms-attr-id=\\\"tmpid\\\" style=\\\"display: none\\\">\\r\\n            <div class=\\\"mc-linear-item\\\" ms-repeat=\\\"el._c\\\" ms-class-1=\\\"hf: el._c.size() && el._m === 'h'\\\"\\r\\n                 ms-class-2=\\\"ftp: $outer.el._m === 'h'\\\" ms-class-3=\\\"mc_li{{el.s}}: el.s\\\" ms-css-padding=\\\"el.p\\\">\\r\\n                {{renderContent(el._p, el._c.size())|html}}\\r\\n                <div ms-include=\\\"tmpid\\\" ms-if=\\\"el._c.size()\\\" data-include-replace=\\\"true\\\"></div>\\r\\n            </div>\\r\\n        </script>\\r\\n        <div class=\\\"mc-linear-item\\\" ms-repeat=\\\"data._c\\\" ms-class-1=\\\"hf: el._c.size() && el._m === 'h'\\\"\\r\\n             ms-class-2=\\\"ftp: data._m === 'h'\\\" ms-class-3=\\\"mc_li{{el.s}}: el.s\\\" ms-css-padding=\\\"el.p\\\">\\r\\n            {{renderContent(el._p, el._c.size())|html}}\\r\\n            <div ms-include=\\\"tmpid\\\" ms-if=\\\"el._c.size()\\\" data-include-replace=\\\"true\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"mc-layout-manager-cotar\\\" ms-class-1=\\\"{{mcstyle}}\\\" ms-css-width=\\\"renderStyle('width')\\\"\\r\\n         ms-css-height=\\\"renderStyle('height')\\\"\\r\\n         ms-css-padding=\\\"renderStyle('padding')\\\" ms-css-padding-top=\\\"renderStyle('pt')\\\"\\r\\n         ms-css-padding-left=\\\"renderStyle('pl')\\\" ms-css-padding-right=\\\"renderStyle('pr')\\\"\\r\\n         ms-css-padding-bottom=\\\"renderStyle('pb')\\\"\\r\\n         ms-class-2=\\\"hf: data._m === 'h'\\\">\\r\\n        <script type=\\\"avalon\\\" ms-attr-id=\\\"mtmpid\\\" style=\\\"display: none\\\">\\r\\n            <div class=\\\"mc-absolute-item\\\" ms-repeat=\\\"el._c\\\" ms-class-1=\\\"mc_ai{{el.s}}: el.s\\\"\\r\\n                 ms-css-width=\\\"$outer.el._m === 'h' && el.w.indexOf('%') === -1 && el.w\\\" ms-css-height=\\\"$outer.el._m !== 'h' && el.w.indexOf('%') === -1 && el.w\\\"\\r\\n                 ms-css-top=\\\"calPosition('top', $outer.el, $index)\\\" ms-css-bottom=\\\"calPosition('bottom', $outer.el, $index)\\\"\\r\\n                 ms-css-left=\\\"calPosition('left', $outer.el, $index)\\\" ms-css-right=\\\"calPosition('right', $outer.el, $index)\\\"\\r\\n                 ms-css-padding=\\\"el.p\\\">\\r\\n                <div ms-include=\\\"mtmpid\\\" ms-if=\\\"el._c.size()\\\" data-include-replace=\\\"true\\\"></div>\\r\\n            </div>\\r\\n        </script>\\r\\n        <div class=\\\"mc-absolute-item\\\" ms-repeat=\\\"data._c\\\" ms-class-1=\\\"mc_ai{{el.s}}: el.s\\\"\\r\\n             ms-css-width=\\\"data._m === 'h' && el.w.indexOf('%') === -1 && el.w\\\" ms-css-height=\\\"data._m !== 'h' && el.w.indexOf('%') === -1 && el.w\\\"\\r\\n             ms-css-top=\\\"calPosition('top', data, $index)\\\" ms-css-bottom=\\\"calPosition('bottom', data, $index)\\\"\\r\\n             ms-css-left=\\\"calPosition('left', data, $index)\\\" ms-css-right=\\\"calPosition('right', data, $index)\\\"\\r\\n             ms-css-padding=\\\"el.p\\\">\\r\\n            <div ms-include=\\\"mtmpid\\\" ms-if=\\\"el._c.size()\\\" data-include-replace=\\\"true\\\"></div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/layout/linearlayout/mc.linearlayout.html\n ** module id = 109\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/layout/linearlayout/mc.linearlayout.min.css\n ** module id = 110\n ** module chunks = 0\n **/","define(['avalon', 'text!./mc.absolutelayout.html', './mc.absolutelayout.min.css'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:absolutelayout\", {\r\n        //外部属性\r\n        mcstyle: \"\",\r\n        top: false,\r\n        left: false,\r\n        right: false,\r\n        bottom: false,\r\n        width: false,\r\n        height: false,\r\n        padding: false,\r\n        pt: false,\r\n        pl: false,\r\n        pr: false,\r\n        pb: false,\r\n        minWidth: false,\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        content: \"\",\r\n\r\n        //view接口\r\n\r\n        onInit: _interface, //必须定义此接口\r\n        renderStyle: _interface,\r\n        renderContent: _interface,\r\n        _trigger: _interface,\r\n\r\n        //默认配置\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //接口方法\r\n            vm.renderStyle = function (style) {\r\n                if (vm[style] !== false) {\r\n                    return vm[style];\r\n                }\r\n                //var style = \"<style>.\" + vm.$id + \"{\";\r\n                //vm.top === false || (style += \"top:\" + vm.top + \"px;\");\r\n                //vm.left === false || (style += \"left:\" + vm.left + \"px;\");\r\n                //vm.right === false || (style += \"right:\" + vm.right + \"px;\");\r\n                //vm.bottom === false || (style += \"bottom:\" + vm.bottom + \"px;\");\r\n                //vm.width === false || (style += \"width:\" + vm.width + \"px;\");\r\n                //style += \"}</style>\";\r\n                //console.log(vm);\r\n                //return style;\r\n            }\r\n            vm.renderContent = function () {\r\n                return vm[\"content\"];\r\n            }\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:absolutelayout\"];\r\n    widget.regionals = {};\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/layout/absolutelayout/mc.absolutelayout.js\n ** module id = 111\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-absolutelayout-cotar\\\" ms-class-1=\\\"{{mcstyle}}\\\" ms-class-2=\\\"mc-loading: isInit\\\" ms-css-width=\\\"renderStyle('width')\\\"\\r\\n     ms-css-height=\\\"renderStyle('height')\\\"\\r\\n     ms-css-top=\\\"renderStyle('top')\\\" ms-css-left=\\\"renderStyle('left')\\\"\\r\\n     ms-css-right=\\\"renderStyle('right')\\\" ms-css-bottom=\\\"renderStyle('bottom')\\\"\\r\\n     ms-css-padding=\\\"renderStyle('padding')\\\" ms-css-padding-top=\\\"renderStyle('pt')\\\"\\r\\n     ms-css-padding-left=\\\"renderStyle('pl')\\\" ms-css-padding-right=\\\"renderStyle('pr')\\\"\\r\\n     ms-css-padding-bottom=\\\"renderStyle('pb')\\\" ms-css-min-width=\\\"renderStyle('minWidth')\\\">\\r\\n    {{renderContent()|html}}\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/layout/absolutelayout/mc.absolutelayout.html\n ** module id = 112\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/layout/absolutelayout/mc.absolutelayout.min.css\n ** module id = 113\n ** module chunks = 0\n **/","define(['avalon', 'text!./mc.relativelayout.html', './mc.relativelayout.min.css'], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:relativelayout\", {\r\n        //外部属性\r\n        mcstyle: \"\",\r\n        width: false,\r\n        padding: false,\r\n        ptl: false,\r\n        pt: false,\r\n        pl: false,\r\n        pr: false,\r\n        pb: false,\r\n\r\n        //内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        content: \"\",\r\n\r\n        //view接口\r\n\r\n        onInit: _interface, //必须定义此接口\r\n        renderStyle: _interface,\r\n        renderContent: _interface,\r\n        _trigger: _interface,\r\n\r\n        //默认配置\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options; //返回VM的定义对象\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //接口方法\r\n            vm.renderStyle = function (style) {\r\n                if (vm[style] !== false) {\r\n                    return vm[style];\r\n                }\r\n            }\r\n            vm.renderContent = function () {\r\n                return vm[\"content\"];\r\n            }\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:relativelayout\"];\r\n    widget.regionals = {};\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/layout/relativelayout/mc.relativelayout.js\n ** module id = 114\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-relativelayout-cotar\\\" ms-class-1=\\\"{{mcstyle}}\\\" ms-class-2=\\\"mc-loading: isInit\\\" ms-css-width=\\\"renderStyle('width')\\\"\\r\\n     ms-css-padding=\\\"renderStyle('padding')\\\" ms-css-padding-top=\\\"renderStyle('pt')\\\"\\r\\n     ms-css-padding-left=\\\"renderStyle('pl')\\\" ms-css-padding-right=\\\"renderStyle('pr')\\\"\\r\\n     ms-css-padding-bottom=\\\"renderStyle('pb')\\\">\\r\\n    {{renderContent()|html}}\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/layout/relativelayout/mc.relativelayout.html\n ** module id = 115\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/layout/relativelayout/mc.relativelayout.min.css\n ** module id = 116\n ** module chunks = 0\n **/","define([\"avalon\", \"text!./mc.selectadd.html\", \"./mc.selectadd.min.css\"], function (avalon, template) {\r\n    var _interface = function () { };\r\n    avalon.component(\"mc:selectadd\", {\r\n        //#region 外部参数\r\n        label: \"\", //提示文字\r\n        labelSize: 0,\r\n        size: \"normal\", //small large\r\n        width: 300, //宽度,默认300px\r\n        disabled: false, //是否禁用\r\n        value: \"\", //值\r\n        tagList: [], //标签列表 tagType,tagValue,tagName\r\n        noAddBtn: false,\r\n        //normal 无类型 | group 组 | person 员工 | department 部门\r\n        iconCodeList: {\r\n            normal: \"\",\r\n            group: \"&#xe739;\",\r\n            person: \"&#xe78b;\",\r\n            department: \"&#xe753;\"\r\n        }, //图标字体code\r\n        //弹出层vmid\r\n        $dialog_vmid: null,\r\n        $dialog_vmidTmp: null,\r\n        //表单相关\r\n        formName: \"\", //表单data的key,输入框name\r\n        readonly: false, //是否只读，只读就无法添加，删除标签\r\n        fJudge: \"\", //绑定的判断字段\n        fState: \"\", //绑定的判断字段对应的状态,可以对应多个状态,用\",\"分隔\r\n        //#endregion\r\n\r\n        //#region 外部事件\r\n        onInit: _interface, //初始化接口\r\n        onAdd: null, //当添加按钮点击时触发事件\r\n        //#endregion\r\n\r\n        //#region 外部接口\r\n        isDisable: _interface, //是否禁用\r\n        //表单相关\r\n        getValue: _interface, //供表单组件调用返回数据\r\n        setValue: _interface, //供表单组件调用设置数据\r\n        setData: _interface, //设置标签数据,传入数组\r\n        getData: _interface, //获取标签数据,返回数组\r\n        //#endregion\r\n\r\n        //#region 内部属性\r\n        isInit: true,\r\n        extend: {},\r\n        lindex: -1, //布局中的序号\r\n        trindex: -1, //表格中的行号 [特殊] - 仅在表格中生效\r\n        tdindex: -1, //表格中的列号 [特殊] - 仅在表格中生效\r\n        $dialogVm: null, //弹出框(弹出框类)vm\r\n        //#endregion\r\n\r\n        //#region 内部事件\r\n        doAdd: _interface, //标签添加事件\r\n        doDel: _interface, //标签添加事件\r\n        //#endregion\r\n\r\n        //#region 内部接口\r\n        _trigger: _interface, //内部触发器\r\n        addTag: _interface, //添加标签\r\n        delTag: _interface, //删除标签\r\n        delTagByVal: _interface, //删除标签\r\n        getIcon: _interface, //获取图标\r\n        //#endregion\r\n\r\n        $template: template,\r\n        $replace: true,\r\n        $construct: function (hooks, vmOpts, elemOpts) {\r\n            var options = avalon.mix(hooks, vmOpts, elemOpts);\r\n            return options;\r\n        },\r\n        $dispose: function (vm, elem) {\r\n            elem.innerHTML = elem.textContent = \"\";\r\n        },\r\n        $init: function (vm, elem) {\r\n            //#region 外部事件\r\n            vm.isDisable = function () {\r\n                return vm.disabled;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 外部接口\r\n            vm.getValue = function () {\r\n                //todo 对must的支持,判断标签是否为空\r\n                var dataArr = [];\r\n                $.each(vm.tagList, function (i, val) {\r\n                    dataArr.push(val.tagValue);\r\n                });\r\n                return dataArr.join(\";\");\r\n            }\r\n            vm.setValue = function (val, text, isReadonly) {\r\n                //isReadonly 传值的时候才赋值判断\r\n                isReadonly !== undefined && (vm.readonly = isReadonly ? true : false);\r\n                if (val !== \"\" && text !== \"\") {\r\n                    var valArr = val.split(\";\");\r\n                    var textArr = text.split(\";\");\r\n                    vm.tagList = valArr.map(function (val, i) {\r\n                        return {\r\n                            tagValue: val,\r\n                            tagName: textArr[i]\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n            /**\r\n             * 设置数据\r\n             * @param {} arr 的每一项必须包括 {tagValue,tagName} \r\n             * @returns {} \r\n             */\r\n            vm.setData = function (arr) {\r\n                avalon.type(arr) === \"array\" && (vm.tagList = arr);\r\n            }\r\n            vm.getData = function () {\r\n                return vm.tagList;\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部事件\r\n            vm.doAdd = function (ev) {\r\n                vm.addTag();\r\n            }\r\n            vm.doDel = function (ev, idx) {\r\n                vm.delTag(idx);\r\n            }\r\n            //#endregion\r\n\r\n            //#region 内部接口\r\n            vm._trigger = function (ev, type, _this,_item) {\r\n                switch (type) {\r\n                    case \"add\":\r\n                        if (typeof vm.onAdd == \"function\") {\r\n                            vm.onAdd(ev, vm, _this);\r\n                        }\r\n                        break;\r\n                    case \"del\":\r\n                        if (typeof vm.onDel == \"function\") {\r\n                        return    vm.onDel(ev, vm, _this, _item);\r\n                        }\r\n                        break;\r\n                    default: break;\r\n                }\r\n            }\r\n            vm.addTag = function () {\r\n                //bug 第二次进入的时候vm.$dialogVm !== avalon.vmodels里面的对象,导致无法双向同步\r\n                //所以每次点击时重新获取\r\n                vm.$dialogVm = McAvalon.getVm(vm.$dialog_vmidTmp());\r\n                vm.$dialogVm && vm.$dialogVm.showDialog();\r\n            }\r\n            //内部 add\r\n            vm._addTag = function (item) {\r\n                //{tagType,tagValue,tagName}\r\n                vm.tagList.push(item);\r\n                vm._trigger({}, \"add\", {});\r\n            }\r\n            vm.delTag = function (idx) {\r\n                //console.log(idx);\r\n                var r = vm._trigger({}, \"del\", {}, { tagType: vm.tagList[idx].tagType, tagValue: vm.tagList[idx].tagValue });\r\n                if (r === false) return false;\r\n                avalon.Array.removeAt(vm.tagList, idx);\r\n            }\r\n            vm.delTagByVal = function (v) {\r\n                var r = _.find(vm.tagList, function (tag) {\r\n                    return tag.tagValue === v;\r\n                });\r\n                if (r)\r\n                //alon.Array.removeAt(vm.tagList, idx);\r\n                    avalon.Array.remove(vm.tagList, r);\r\n            }\r\n            vm.$dialog_vmid && McAvalon.$mcPageStore.getDeferred(vm.$dialog_vmid).done(function (_vm) {\r\n                vm.$dialogVm = _vm;\r\n                _vm.onSelectadd = function (idx, _vm) {\r\n                    //bug vm与传入的绑定,当有2个selectadd对应相同的$dialog_vmid会混乱\r\n                    vm._trigger(idx, \"add\", _vm);\r\n                }\r\n            });\r\n            vm.getIcon = function (el) {\r\n                return vm.iconCodeList[el.tagType] || \"\";\r\n            }\r\n            //#endregion\r\n        },\r\n        $ready: function (vm, elem) {\r\n            //向store注册组件\r\n            McAvalon.$mcPageStore && McAvalon.$mcPageStore.regist(vm);\r\n            //初始化操作\r\n            vm.onInit(vm, elem); //调用外部初始化函数\r\n            vm.isInit = false;\r\n        }\r\n    });\r\n\r\n    var widget = avalon.components[\"mc:selectadd\"];\r\n    widget.regionals = {};\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/selectadd/mc.Selectadd.js\n ** module id = 117\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"mc-form-group mc-selectadd-cotar hf\\\" ms-class-1=\\\"mc-selectadd-lg: size=='large'\\\"\\r\\n     ms-class-2=\\\"mc-selectadd-sm: size=='small'\\\" ms-class-3=\\\"mc-loading: isInit\\\">\\r\\n    <label class=\\\"control-label mc-tip fp\\\" ms-if=\\\"label != ''\\\" ms-css-width=\\\"labelSize\\\">{{label}}</label>\\r\\n    <div class=\\\"ftp\\\">\\r\\n        <div class=\\\"hf\\\" ms-if=\\\"!noAddBtn && !readonly\\\">\\r\\n            <div class=\\\"mc-add-btn fp\\\" ms-click=\\\"doAdd\\\">添加</div>\\r\\n        </div>\\r\\n        <div class=\\\"mc-tag-show-cotar hf\\\" ms-css-width=\\\"width + 80\\\">\\r\\n            <div class=\\\"mc-tag-item fp\\\" ms-repeat=\\\"tagList\\\">\\r\\n                <div class=\\\"mc-close-btn\\\" ms-click=\\\"doDel($event,$index)\\\" ms-if=\\\"!readonly\\\">&times;</div>\\r\\n                <div class=\\\"mc-tag-type iconfont\\\" ms-class=\\\"mc-type-{{el.tagType}}\\\" ms-if=\\\"el.tagType != 'normal'\\\">{{getIcon(el) | html}}</div>\\r\\n                <div class=\\\"mc-tag-name\\\" ms-class=\\\"mc-type | el.tagType != 'normal'\\\">{{el.tagName}}</div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/text-loader!./src/ass/ui/form/selectadd/mc.selectadd.html\n ** module id = 118\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ass/ui/form/selectadd/mc.selectadd.min.css\n ** module id = 119\n ** module chunks = 0\n **/"],"sourceRoot":""}